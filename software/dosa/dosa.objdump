
dosa.elf:     file format elf32-littlenios2
dosa.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x04020230

Program Header:
    LOAD off    0x00001000 vaddr 0x04020000 paddr 0x04020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x04020020 paddr 0x04020020 align 2**12
         filesz 0x0000ffa4 memsz 0x0000ffa4 flags r-x
    LOAD off    0x00011000 vaddr 0x00000000 paddr 0x0402ffc4 align 2**12
         filesz 0x00001e68 memsz 0x00001fd4 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  04020000  04020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  04020020  04020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000fd94  04020230  04020230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000350  00000000  0402ffc4  00011000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001b18  00000350  04030314  00011350  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000016c  00001e68  04031e2c  00012e68  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  00001fd4  00001fd4  00012e68  2**0
                  CONTENTS
  7 .onchip_memory2_0 00000000  04031e2c  04031e2c  00012e68  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00012e68  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000f30  00000000  00000000  00012e90  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00023878  00000000  00000000  00013dc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000920a  00000000  00000000  00037638  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000b692  00000000  00000000  00040842  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  000021cc  00000000  00000000  0004bed4  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00003a0f  00000000  00000000  0004e0a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    000178c5  00000000  00000000  00051aaf  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000040  00000000  00000000  00069374  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 000018e8  00000000  00000000  000693b8  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0006deea  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  0006deed  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  0006def9  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0006defa  2**0
                  CONTENTS, READONLY
 22 .stderr_dev   0000000b  00000000  00000000  0006defb  2**0
                  CONTENTS, READONLY
 23 .stdin_dev    0000000b  00000000  00000000  0006df06  2**0
                  CONTENTS, READONLY
 24 .stdout_dev   0000000b  00000000  00000000  0006df11  2**0
                  CONTENTS, READONLY
 25 .sopc_system_name 00000011  00000000  00000000  0006df1c  2**0
                  CONTENTS, READONLY
 26 .quartus_project_dir 00000030  00000000  00000000  0006df2d  2**0
                  CONTENTS, READONLY
 27 .jdi          00005803  00000000  00000000  0006df5d  2**0
                  CONTENTS, READONLY
 28 .sopcinfo     0008422a  00000000  00000000  00073760  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
04020000 l    d  .entry	00000000 .entry
04020020 l    d  .exceptions	00000000 .exceptions
04020230 l    d  .text	00000000 .text
00000000 l    d  .rodata	00000000 .rodata
00000350 l    d  .rwdata	00000000 .rwdata
00001e68 l    d  .bss	00000000 .bss
00001fd4 l    d  .sdram	00000000 .sdram
04031e2c l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../dosa_bsp//obj/HAL/src/crt0.o
04020268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 dosa.c
00001e68 l     O .bss	00000004 random_value.3197
00000000 l    df *ABS*	00000000 sum.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 vfprintf.c
0000008a l     O .rodata	00000010 zeroes.4404
04022c40 l     F .text	000000bc __sbprintf
0000009a l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
04022e50 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
040249a8 l     F .text	00000008 __fp_unlock
040249bc l     F .text	0000019c __sinit.part.1
04024b58 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00000350 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
00000794 l     O .rwdata	00000020 lc_ctype_charset
00000774 l     O .rwdata	00000020 lc_message_charset
000007b4 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
000000cc l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0402753c l     F .text	000000fc __sprint_r.part.0
000001f0 l     O .rodata	00000010 zeroes.4349
04028b78 l     F .text	000000bc __sbprintf
00000200 l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0402d678 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0402d78c l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0402d7b8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0402d8ac l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0402d994 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0402da80 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0402dc5c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00001e58 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0402df00 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0402e03c l     F .text	00000034 alt_dev_reg
00000d9c l     O .rwdata	00001060 jtag_uart_0
00001dfc l     O .rwdata	0000002c adc_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0402e350 l     F .text	0000020c altera_avalon_jtag_uart_irq
0402e55c l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0402eb94 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_avalon_timer_vars.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0402ef2c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0402f38c l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0402f4ec l     F .text	0000003c alt_get_errno
0402f528 l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00001ea8 g     O .bss	00000004 alt_instruction_exception_handler
0402704c g     F .text	00000074 _mprec_log10
04027138 g     F .text	0000008c __any_on
040295f4 g     F .text	00000054 _isatty_r
000000d8 g     O .rodata	00000028 __mprec_tinytens
0402db98 g     F .text	0000007c alt_main
00001ed4 g     O .bss	00000100 alt_irq
04029648 g     F .text	00000060 _lseek_r
04030314 g       *ABS*	00000000 __flash_rwdata_start
0402c050 g     F .text	00000088 .hidden __eqdf2
00001fd4 g       *ABS*	00000000 __alt_heap_start
04020890 g     F .text	0000003c printf
04029f20 g     F .text	0000009c _wcrtomb_r
04027364 g     F .text	0000005c __sseek
04024d08 g     F .text	00000010 __sinit
04029dc8 g     F .text	00000140 __swbuf_r
04025314 g     F .text	0000007c _setlocale_r
04024b60 g     F .text	00000078 __sfmoreglue
0402dc38 g     F .text	00000024 __malloc_unlock
00001e98 g     O .bss	00000004 altera_avalon_timer_ts_freq
040296a8 g     F .text	0000015c memmove
04024cf0 g     F .text	00000018 _cleanup
0402610c g     F .text	000000a8 _Balloc
0402c0d8 g     F .text	000000dc .hidden __gtdf2
0402f914 g     F .text	00000024 altera_nios2_gen2_irq_init
04020000 g     F .entry	0000000c __reset
04020020 g       *ABS*	00000000 __flash_exceptions_start
040290d0 g     F .text	0000005c _fstat_r
00001e84 g     O .bss	00000004 errno
040272e0 g     F .text	00000008 __seofread
00001e8c g     O .bss	00000004 alt_argv
00009e28 g       *ABS*	00000000 _gp
0402ded0 g     F .text	00000030 usleep
00000c1c g     O .rwdata	00000180 alt_fd_list
0402f938 g     F .text	00000090 alt_find_dev
04025e9c g     F .text	00000148 memcpy
040249b0 g     F .text	0000000c _cleanup_r
0402d490 g     F .text	000000dc .hidden __floatsidf
0402f470 g     F .text	0000007c alt_io_redirect
0402c1b4 g     F .text	000000f4 .hidden __ltdf2
0402ffc4 g       *ABS*	00000000 __DTOR_END__
0402026c g     F .text	00000030 xor_cipher
0402fb94 g     F .text	0000009c alt_exception_cause_generated_bad_addr
040271c4 g     F .text	00000074 __fpclassifyd
04026fa8 g     F .text	000000a4 __ratio
04028b5c g     F .text	0000001c __vfiprintf_internal
0402e754 g     F .text	0000021c altera_avalon_jtag_uart_read
04020860 g     F .text	00000030 _printf_r
04020000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0402077c g     F .text	00000064 .hidden __udivsi3
0402d8e8 g     F .text	000000ac isatty
00000128 g     O .rodata	000000c8 __mprec_tens
04025390 g     F .text	0000000c __locale_charset
00001e80 g     O .bss	00000004 __malloc_top_pad
00001e30 g     O .rwdata	00000004 __mb_cur_max
040253c0 g     F .text	0000000c _localeconv_r
0402912c g     F .text	000004c8 __sfvwrite_r
04026540 g     F .text	0000003c __i2b
04027238 g     F .text	00000054 _sbrk_r
040202e8 g     F .text	00000080 reverse_digits
04029804 g     F .text	00000060 _read_r
00001e50 g     O .rwdata	00000004 alt_max_fd
04028dc4 g     F .text	000000f0 _fclose_r
04024978 g     F .text	00000030 fflush
00001e7c g     O .bss	00000004 __malloc_max_sbrked_mem
0402add4 g     F .text	000008ac .hidden __adddf3
04026d50 g     F .text	0000010c __b2d
0402a810 g     F .text	000005c4 .hidden __umoddi3
0402dabc g     F .text	000000dc lseek
00001e28 g     O .rwdata	00000004 _global_impure_ptr
04029864 g     F .text	00000564 _realloc_r
00001fd4 g       *ABS*	00000000 __bss_end
0402f29c g     F .text	000000f0 alt_iic_isr_register
0402f80c g     F .text	00000108 alt_tick
0402a214 g     F .text	000005fc .hidden __udivdi3
0402902c g     F .text	00000024 _fputwc_r
00000100 g     O .rodata	00000028 __mprec_bigtens
04026324 g     F .text	00000104 __s2b
0402d56c g     F .text	000000a8 .hidden __floatunsidf
04026a90 g     F .text	00000060 __mcmp
04024d28 g     F .text	00000018 __fp_lock_all
0402f250 g     F .text	0000004c alt_ic_irq_enabled
0402f770 g     F .text	0000009c alt_alarm_stop
00001e9c g     O .bss	00000004 alt_irq_active
040200fc g     F .exceptions	000000d4 alt_irq_handler
00000bf4 g     O .rwdata	00000028 alt_dev_null
0402ef0c g     F .text	00000020 alt_dcache_flush_all
04026428 g     F .text	00000068 __hi0bits
0402d410 g     F .text	00000080 .hidden __fixdfsi
00001e68 g       *ABS*	00000000 __ram_rwdata_end
00001e48 g     O .rwdata	00000008 alt_dev_list
0402df3c g     F .text	00000100 write
00000350 g       *ABS*	00000000 __ram_rodata_end
0402d7f4 g     F .text	000000b8 fstat
0402c1b4 g     F .text	000000f4 .hidden __ledf2
04026808 g     F .text	00000140 __pow5mult
04027650 g     F .text	0000150c ___vfiprintf_internal_r
00001e74 g     O .bss	00000004 __nlocale_changed
040207e0 g     F .text	00000058 .hidden __umodsi3
00001fd4 g       *ABS*	00000000 end
0402e290 g     F .text	000000c0 altera_avalon_jtag_uart_init
040201d0 g     F .exceptions	00000060 alt_instruction_exception_entry
0402ffc4 g       *ABS*	00000000 __CTOR_LIST__
04000000 g       *ABS*	00000000 __alt_stack_pointer
0402ec0c g     F .text	0000007c alt_avalon_timer_sc_init
0402d614 g     F .text	00000064 .hidden __clzsi2
0402e970 g     F .text	00000224 altera_avalon_jtag_uart_write
04024d18 g     F .text	00000004 __sfp_lock_acquire
04025db8 g     F .text	000000e4 memchr
04020948 g     F .text	000022dc ___vfprintf_internal_r
04024e7c g     F .text	00000310 _free_r
0402539c g     F .text	00000010 __locale_mb_cur_max
0402fe10 g     F .text	00000180 __call_exitprocs
00001e70 g     O .bss	00000004 __mlocale_changed
00001e34 g     O .rwdata	00000004 __malloc_sbrk_base
04020230 g     F .text	0000003c _start
00001ea0 g     O .bss	00000004 _alt_tick_rate
040208e4 g     F .text	00000064 rand
04026948 g     F .text	00000148 __lshift
00001ea4 g     O .bss	00000004 _alt_nticks
0402dc98 g     F .text	00000104 read
0402e0a8 g     F .text	00000084 alt_sys_init
0402fcf8 g     F .text	00000118 __register_exitproc
0402657c g     F .text	0000028c __multiply
0402e5fc g     F .text	00000068 altera_avalon_jtag_uart_close
04020838 g     F .text	00000028 .hidden __mulsi3
00000350 g       *ABS*	00000000 __ram_rwdata_start
00000000 g       *ABS*	00000000 __ram_rodata_start
00001eac g     O .bss	00000028 __malloc_current_mallinfo
04026e5c g     F .text	0000014c __d2b
0402e12c g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0402fad0 g     F .text	000000c4 alt_get_fd
0402edb4 g     F .text	00000158 alt_busy_sleep
04028c94 g     F .text	00000054 _close_r
0402fc7c g     F .text	0000007c memcmp
0402e1ec g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00001fd4 g       *ABS*	00000000 __alt_stack_base
0402e23c g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
04022cfc g     F .text	00000154 __swsetup_r
0402b680 g     F .text	000009d0 .hidden __divdf3
04024bd8 g     F .text	00000118 __sfp
040270c0 g     F .text	00000078 __copybits
000007ec g     O .rwdata	00000408 __malloc_av_
04024d24 g     F .text	00000004 __sinit_lock_release
0402c2a8 g     F .text	0000086c .hidden __muldf3
0402728c g     F .text	00000054 __sread
0402f9c8 g     F .text	00000108 alt_find_file
0402ef68 g     F .text	000000a4 alt_dev_llist_insert
0402dc14 g     F .text	00000024 __malloc_lock
0402de20 g     F .text	000000b0 sbrk
0402491c g     F .text	0000005c _fflush_r
04028ce8 g     F .text	000000dc _calloc_r
00001e68 g       *ABS*	00000000 __bss_start
04025fe4 g     F .text	00000128 memset
04020368 g     F .text	0000031c main
00001e90 g     O .bss	00000004 alt_envp
00001e78 g     O .bss	00000004 __malloc_max_total_mem
0402e18c g     F .text	00000060 altera_avalon_jtag_uart_write_fd
04029f08 g     F .text	00000018 __swbuf
040208cc g     F .text	00000018 srand
040273c0 g     F .text	00000008 __sclose
04000000 g       *ABS*	00000000 __alt_heap_limit
04028eb4 g     F .text	00000014 fclose
04023078 g     F .text	00001688 _dtoa_r
040255ac g     F .text	0000080c _malloc_r
0402a07c g     F .text	00000030 __ascii_wctomb
00001e54 g     O .rwdata	00000004 alt_errno
0402518c g     F .text	000000c4 _fwalk
04020684 g     F .text	00000084 .hidden __divsi3
04024d58 g     F .text	00000124 _malloc_trim_r
0402ffc4 g       *ABS*	00000000 __CTOR_END__
040273c8 g     F .text	000000dc strcmp
0402ffc4 g       *ABS*	00000000 __flash_rodata_start
0402ffc4 g       *ABS*	00000000 __DTOR_LIST__
0402c050 g     F .text	00000088 .hidden __nedf2
0402e070 g     F .text	00000038 alt_irq_init
0402dd9c g     F .text	00000084 alt_release_fd
00000210 g     O .rodata	00000100 .hidden __clz_tab
00001e6c g     O .bss	00000004 _PathLocale
0402fc30 g     F .text	00000014 atexit
04028c34 g     F .text	00000060 _write_r
040253cc g     F .text	00000018 setlocale
00001e2c g     O .rwdata	00000004 _impure_ptr
00001e88 g     O .bss	00000004 alt_argc
04024700 g     F .text	0000021c __sflush_r
00001e94 g     O .bss	00000004 altera_avalon_timer_ts_base
0402f06c g     F .text	00000060 _do_dtors
040253b8 g     F .text	00000008 __locale_cjk_lang
04020020 g       .exceptions	00000000 alt_irq_entry
04026cec g     F .text	00000064 __ulp
04024d40 g     F .text	00000018 __fp_unlock_all
00001e40 g     O .rwdata	00000008 alt_fs_list
04020020 g       *ABS*	00000000 __ram_exceptions_start
040253e4 g     F .text	0000000c localeconv
0402f0ec g     F .text	00000050 alt_ic_isr_register
00001e68 g       *ABS*	00000000 _edata
00001fd4 g       *ABS*	00000000 _end
04028ec8 g     F .text	00000164 __fputwc
04020230 g       *ABS*	00000000 __ram_exceptions_end
0402e664 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0402f1c4 g     F .text	0000008c alt_ic_irq_disable
040272e8 g     F .text	0000007c __swrite
00001e38 g     O .rwdata	00000004 __malloc_trim_threshold
040253ac g     F .text	0000000c __locale_msgcharset
0402fc44 g     F .text	00000038 exit
04025250 g     F .text	000000c4 _fwalk_reent
04026af0 g     F .text	000001fc __mdiff
04020708 g     F .text	00000074 .hidden __modsi3
04000000 g       *ABS*	00000000 __alt_data_end
04020020 g     F .exceptions	00000000 alt_exception
04024d1c g     F .text	00000004 __sfp_lock_release
00000000 g       *ABS*	00000000 __alt_mem_sdram
0402ff90 g     F .text	00000034 _exit
0402ec88 g     F .text	0000012c alt_alarm_start
0402a108 g     F .text	0000010c .hidden __muldi3
040253f0 g     F .text	000001bc __smakebuf_r
040274a4 g     F .text	00000098 strlen
0402f614 g     F .text	0000015c open
0402c0d8 g     F .text	000000dc .hidden __gedf2
00001e3c g     O .rwdata	00000004 __wctomb
04027638 g     F .text	00000018 __sprint_r
0402f0cc g     F .text	00000020 alt_icache_flush_all
00001e5c g     O .rwdata	00000004 alt_priority_mask
0402f13c g     F .text	00000088 alt_ic_irq_enable
04022c24 g     F .text	0000001c __vfprintf_internal
0402a0ac g     F .text	0000005c _wctomb_r
0402cb14 g     F .text	000008fc .hidden __subdf3
0402029c g     F .text	0000004c generate_random
04026490 g     F .text	000000b0 __lo0bits
00001e60 g     O .rwdata	00000008 alt_alarm_list
0402f00c g     F .text	00000060 _do_ctors
04029fbc g     F .text	000000c0 wcrtomb
0402d6b4 g     F .text	000000d8 close
0402d9fc g     F .text	00000084 alt_load
04029050 g     F .text	00000080 fputwc
04024d20 g     F .text	00000004 __sinit_lock_acquire
040261dc g     F .text	00000148 __multadd
040261b4 g     F .text	00000028 _Bfree



Disassembly of section .entry:

04020000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 4020000:	004100b4 	movhi	at,1026
    ori r1, r1, %lo(_start)
 4020004:	08408c14 	ori	at,at,560
    jmp r1
 4020008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

04020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 4020020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 4020024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 4020028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 402002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 4020030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 4020034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 4020038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 402003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 4020040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 4020044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 4020048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 402004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 4020050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 4020054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 4020058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 402005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 4020060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 4020064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 4020068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 402006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 4020070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 4020074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 4020078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 402007c:	10000326 	beq	r2,zero,402008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 4020080:	20000226 	beq	r4,zero,402008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 4020084:	40200fc0 	call	40200fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 4020088:	00000706 	br	40200a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
 402008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
 4020090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
 4020094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
 4020098:	40201d00 	call	40201d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
 402009c:	1000021e 	bne	r2,zero,40200a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
 40200a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 40200a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 40200a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 40200ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 40200b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 40200b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 40200b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 40200bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 40200c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 40200c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 40200c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 40200cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 40200d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 40200d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 40200d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 40200dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 40200e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 40200e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 40200e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 40200ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 40200f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 40200f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 40200f8:	ef80083a 	eret

040200fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 40200fc:	defff904 	addi	sp,sp,-28
 4020100:	dfc00615 	stw	ra,24(sp)
 4020104:	df000515 	stw	fp,20(sp)
 4020108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 402010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 4020110:	0005313a 	rdctl	r2,ipending
 4020114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 4020118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 402011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 4020120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 4020124:	00800044 	movi	r2,1
 4020128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 402012c:	e0fffb17 	ldw	r3,-20(fp)
 4020130:	e0bffc17 	ldw	r2,-16(fp)
 4020134:	1884703a 	and	r2,r3,r2
 4020138:	10001426 	beq	r2,zero,402018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 402013c:	00800034 	movhi	r2,0
 4020140:	1087b504 	addi	r2,r2,7892
 4020144:	e0fffd17 	ldw	r3,-12(fp)
 4020148:	180690fa 	slli	r3,r3,3
 402014c:	10c5883a 	add	r2,r2,r3
 4020150:	10c00017 	ldw	r3,0(r2)
 4020154:	00800034 	movhi	r2,0
 4020158:	1087b504 	addi	r2,r2,7892
 402015c:	e13ffd17 	ldw	r4,-12(fp)
 4020160:	200890fa 	slli	r4,r4,3
 4020164:	1105883a 	add	r2,r2,r4
 4020168:	10800104 	addi	r2,r2,4
 402016c:	10800017 	ldw	r2,0(r2)
 4020170:	1009883a 	mov	r4,r2
 4020174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 4020178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 402017c:	0005313a 	rdctl	r2,ipending
 4020180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 4020184:	e0bfff17 	ldw	r2,-4(fp)
 4020188:	00000706 	br	40201a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 402018c:	e0bffc17 	ldw	r2,-16(fp)
 4020190:	1085883a 	add	r2,r2,r2
 4020194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 4020198:	e0bffd17 	ldw	r2,-12(fp)
 402019c:	10800044 	addi	r2,r2,1
 40201a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 40201a4:	003fe106 	br	402012c <__flash_rwdata_start+0xfffefe18>

    active = alt_irq_pending ();
 40201a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 40201ac:	e0bffb17 	ldw	r2,-20(fp)
 40201b0:	103fdb1e 	bne	r2,zero,4020120 <__flash_rwdata_start+0xfffefe0c>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 40201b4:	0001883a 	nop
}
 40201b8:	0001883a 	nop
 40201bc:	e037883a 	mov	sp,fp
 40201c0:	dfc00117 	ldw	ra,4(sp)
 40201c4:	df000017 	ldw	fp,0(sp)
 40201c8:	dec00204 	addi	sp,sp,8
 40201cc:	f800283a 	ret

040201d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 40201d0:	defffb04 	addi	sp,sp,-20
 40201d4:	dfc00415 	stw	ra,16(sp)
 40201d8:	df000315 	stw	fp,12(sp)
 40201dc:	df000304 	addi	fp,sp,12
 40201e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 40201e4:	00bfffc4 	movi	r2,-1
 40201e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
 40201ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 40201f0:	d0a02017 	ldw	r2,-32640(gp)
 40201f4:	10000726 	beq	r2,zero,4020214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 40201f8:	d0a02017 	ldw	r2,-32640(gp)
 40201fc:	e0fffd17 	ldw	r3,-12(fp)
 4020200:	e1bffe17 	ldw	r6,-8(fp)
 4020204:	e17fff17 	ldw	r5,-4(fp)
 4020208:	1809883a 	mov	r4,r3
 402020c:	103ee83a 	callr	r2
 4020210:	00000206 	br	402021c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 4020214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 4020218:	0005883a 	mov	r2,zero
}
 402021c:	e037883a 	mov	sp,fp
 4020220:	dfc00117 	ldw	ra,4(sp)
 4020224:	df000017 	ldw	fp,0(sp)
 4020228:	dec00204 	addi	sp,sp,8
 402022c:	f800283a 	ret

Disassembly of section .text:

04020230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 4020230:	06c10034 	movhi	sp,1024
    ori sp, sp, %lo(__alt_stack_pointer)
 4020234:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 4020238:	06800034 	movhi	gp,0
    ori gp, gp, %lo(_gp)
 402023c:	d6a78a14 	ori	gp,gp,40488
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 4020240:	00800034 	movhi	r2,0
    ori r2, r2, %lo(__bss_start)
 4020244:	10879a14 	ori	r2,r2,7784

    movhi r3, %hi(__bss_end)
 4020248:	00c00034 	movhi	r3,0
    ori r3, r3, %lo(__bss_end)
 402024c:	18c7f514 	ori	r3,r3,8148

    beq r2, r3, 1f
 4020250:	10c00326 	beq	r2,r3,4020260 <_start+0x30>

0:
    stw zero, (r2)
 4020254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 4020258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 402025c:	10fffd36 	bltu	r2,r3,4020254 <__flash_rwdata_start+0xfffeff40>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 4020260:	402d9fc0 	call	402d9fc <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 4020264:	402db980 	call	402db98 <alt_main>

04020268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 4020268:	003fff06 	br	4020268 <__flash_rwdata_start+0xfffeff54>

0402026c <xor_cipher>:

#define HEX_ADDR        0x040410c0
#define LEDR_ADDR       0x040410b0
#define SWITCHES_ADDR   0x04041080

unsigned int xor_cipher(unsigned int input, unsigned int key) {
 402026c:	defffd04 	addi	sp,sp,-12
 4020270:	df000215 	stw	fp,8(sp)
 4020274:	df000204 	addi	fp,sp,8
 4020278:	e13ffe15 	stw	r4,-8(fp)
 402027c:	e17fff15 	stw	r5,-4(fp)
    return input ^ key;
 4020280:	e0fffe17 	ldw	r3,-8(fp)
 4020284:	e0bfff17 	ldw	r2,-4(fp)
 4020288:	1884f03a 	xor	r2,r3,r2
}
 402028c:	e037883a 	mov	sp,fp
 4020290:	df000017 	ldw	fp,0(sp)
 4020294:	dec00104 	addi	sp,sp,4
 4020298:	f800283a 	ret

0402029c <generate_random>:

unsigned int generate_random() {
 402029c:	defffe04 	addi	sp,sp,-8
 40202a0:	dfc00115 	stw	ra,4(sp)
 40202a4:	df000015 	stw	fp,0(sp)
 40202a8:	d839883a 	mov	fp,sp
    return (rand() * 1103515245 + 12345) & 0x7FFFFFFF;
 40202ac:	40208e40 	call	40208e4 <rand>
 40202b0:	015071b4 	movhi	r5,16838
 40202b4:	29539b44 	addi	r5,r5,20077
 40202b8:	1009883a 	mov	r4,r2
 40202bc:	40208380 	call	4020838 <__mulsi3>
 40202c0:	108c0e44 	addi	r2,r2,12345
 40202c4:	1007883a 	mov	r3,r2
 40202c8:	00a00034 	movhi	r2,32768
 40202cc:	10bfffc4 	addi	r2,r2,-1
 40202d0:	1884703a 	and	r2,r3,r2
}
 40202d4:	e037883a 	mov	sp,fp
 40202d8:	dfc00117 	ldw	ra,4(sp)
 40202dc:	df000017 	ldw	fp,0(sp)
 40202e0:	dec00204 	addi	sp,sp,8
 40202e4:	f800283a 	ret

040202e8 <reverse_digits>:

unsigned int reverse_digits(unsigned int n) {
 40202e8:	defffb04 	addi	sp,sp,-20
 40202ec:	dfc00415 	stw	ra,16(sp)
 40202f0:	df000315 	stw	fp,12(sp)
 40202f4:	dc000215 	stw	r16,8(sp)
 40202f8:	df000304 	addi	fp,sp,12
 40202fc:	e13ffe15 	stw	r4,-8(fp)
    unsigned int reversed = 0;
 4020300:	e03ffd15 	stw	zero,-12(fp)
    while (n > 0) {
 4020304:	00000f06 	br	4020344 <reverse_digits+0x5c>
        reversed = reversed * 10 + (n % 10);
 4020308:	01400284 	movi	r5,10
 402030c:	e13ffd17 	ldw	r4,-12(fp)
 4020310:	40208380 	call	4020838 <__mulsi3>
 4020314:	1021883a 	mov	r16,r2
 4020318:	e0bffe17 	ldw	r2,-8(fp)
 402031c:	01400284 	movi	r5,10
 4020320:	1009883a 	mov	r4,r2
 4020324:	40207e00 	call	40207e0 <__umodsi3>
 4020328:	8085883a 	add	r2,r16,r2
 402032c:	e0bffd15 	stw	r2,-12(fp)
        n /= 10;
 4020330:	e0bffe17 	ldw	r2,-8(fp)
 4020334:	01400284 	movi	r5,10
 4020338:	1009883a 	mov	r4,r2
 402033c:	402077c0 	call	402077c <__udivsi3>
 4020340:	e0bffe15 	stw	r2,-8(fp)
    return (rand() * 1103515245 + 12345) & 0x7FFFFFFF;
}

unsigned int reverse_digits(unsigned int n) {
    unsigned int reversed = 0;
    while (n > 0) {
 4020344:	e0bffe17 	ldw	r2,-8(fp)
 4020348:	103fef1e 	bne	r2,zero,4020308 <__flash_rwdata_start+0xfffefff4>
        reversed = reversed * 10 + (n % 10);
        n /= 10;
    }
    return reversed;
 402034c:	e0bffd17 	ldw	r2,-12(fp)
}
 4020350:	e6ffff04 	addi	sp,fp,-4
 4020354:	dfc00217 	ldw	ra,8(sp)
 4020358:	df000117 	ldw	fp,4(sp)
 402035c:	dc000017 	ldw	r16,0(sp)
 4020360:	dec00304 	addi	sp,sp,12
 4020364:	f800283a 	ret

04020368 <main>:

void main() {
 4020368:	defff304 	addi	sp,sp,-52
 402036c:	dfc00c15 	stw	ra,48(sp)
 4020370:	df000b15 	stw	fp,44(sp)
 4020374:	dc000a15 	stw	r16,40(sp)
 4020378:	df000b04 	addi	fp,sp,44
    volatile unsigned int *HEX = (unsigned int *) HEX_ADDR;
 402037c:	00810134 	movhi	r2,1028
 4020380:	10843004 	addi	r2,r2,4288
 4020384:	e0bff815 	stw	r2,-32(fp)
    volatile unsigned int *LEDR = (unsigned int *) LEDR_ADDR;
 4020388:	00810134 	movhi	r2,1028
 402038c:	10842c04 	addi	r2,r2,4272
 4020390:	e0bff915 	stw	r2,-28(fp)
    volatile unsigned int *SWITCHES = (unsigned int *) SWITCHES_ADDR;
 4020394:	00810134 	movhi	r2,1028
 4020398:	10842004 	addi	r2,r2,4224
 402039c:	e0bffa15 	stw	r2,-24(fp)

    unsigned int current_value = 0;
 40203a0:	e03ff515 	stw	zero,-44(fp)
    unsigned int prev_switches = 0;
 40203a4:	e03ff615 	stw	zero,-40(fp)
    unsigned int switches;
    unsigned int cipher_key = 0x5A;
 40203a8:	00801684 	movi	r2,90
 40203ac:	e0bffb15 	stw	r2,-20(fp)
    int blink_state = 0;
 40203b0:	e03ff715 	stw	zero,-36(fp)
    static unsigned int random_value = 0;

    while (1) {
        switches = *SWITCHES;
 40203b4:	e0bffa17 	ldw	r2,-24(fp)
 40203b8:	10800017 	ldw	r2,0(r2)
 40203bc:	e0bffc15 	stw	r2,-16(fp)

        if ((prev_switches & 0x1) == 0 && (switches & 0x1)) {
 40203c0:	e0bff617 	ldw	r2,-40(fp)
 40203c4:	1080004c 	andi	r2,r2,1
 40203c8:	1000061e 	bne	r2,zero,40203e4 <main+0x7c>
 40203cc:	e0bffc17 	ldw	r2,-16(fp)
 40203d0:	1080004c 	andi	r2,r2,1
 40203d4:	10000326 	beq	r2,zero,40203e4 <main+0x7c>
            current_value++;
 40203d8:	e0bff517 	ldw	r2,-44(fp)
 40203dc:	10800044 	addi	r2,r2,1
 40203e0:	e0bff515 	stw	r2,-44(fp)
        }

        if ((prev_switches & 0x8) == 0 && (switches & 0x8)) {
 40203e4:	e0bff617 	ldw	r2,-40(fp)
 40203e8:	1080020c 	andi	r2,r2,8
 40203ec:	1000081e 	bne	r2,zero,4020410 <main+0xa8>
 40203f0:	e0bffc17 	ldw	r2,-16(fp)
 40203f4:	1080020c 	andi	r2,r2,8
 40203f8:	10000526 	beq	r2,zero,4020410 <main+0xa8>
            if (current_value > 0) {
 40203fc:	e0bff517 	ldw	r2,-44(fp)
 4020400:	10000326 	beq	r2,zero,4020410 <main+0xa8>
                current_value--;
 4020404:	e0bff517 	ldw	r2,-44(fp)
 4020408:	10bfffc4 	addi	r2,r2,-1
 402040c:	e0bff515 	stw	r2,-44(fp)
            }
        }

        if ((prev_switches & 0x10) == 0 && (switches & 0x10)) {
 4020410:	e0bff617 	ldw	r2,-40(fp)
 4020414:	1080040c 	andi	r2,r2,16
 4020418:	1000061e 	bne	r2,zero,4020434 <main+0xcc>
 402041c:	e0bffc17 	ldw	r2,-16(fp)
 4020420:	1080040c 	andi	r2,r2,16
 4020424:	10000326 	beq	r2,zero,4020434 <main+0xcc>
            current_value *= 2;
 4020428:	e0bff517 	ldw	r2,-44(fp)
 402042c:	1085883a 	add	r2,r2,r2
 4020430:	e0bff515 	stw	r2,-44(fp)
        }

        if ((prev_switches & 0x20) == 0 && (switches & 0x20)) {
 4020434:	e0bff617 	ldw	r2,-40(fp)
 4020438:	1080080c 	andi	r2,r2,32
 402043c:	1000061e 	bne	r2,zero,4020458 <main+0xf0>
 4020440:	e0bffc17 	ldw	r2,-16(fp)
 4020444:	1080080c 	andi	r2,r2,32
 4020448:	10000326 	beq	r2,zero,4020458 <main+0xf0>
            current_value /= 2;
 402044c:	e0bff517 	ldw	r2,-44(fp)
 4020450:	1004d07a 	srli	r2,r2,1
 4020454:	e0bff515 	stw	r2,-44(fp)
        }

        if (switches & 0x80) {
 4020458:	e0bffc17 	ldw	r2,-16(fp)
 402045c:	1080200c 	andi	r2,r2,128
 4020460:	10001626 	beq	r2,zero,40204bc <main+0x154>
			current_value = (current_value * 1103515245 + 12345) & 0x7FFFFFFF;
 4020464:	015071b4 	movhi	r5,16838
 4020468:	29539b44 	addi	r5,r5,20077
 402046c:	e13ff517 	ldw	r4,-44(fp)
 4020470:	40208380 	call	4020838 <__mulsi3>
 4020474:	10cc0e44 	addi	r3,r2,12345
 4020478:	00a00034 	movhi	r2,32768
 402047c:	10bfffc4 	addi	r2,r2,-1
 4020480:	1884703a 	and	r2,r3,r2
 4020484:	e0bff515 	stw	r2,-44(fp)
			*LEDR = current_value;
 4020488:	e0bff917 	ldw	r2,-28(fp)
 402048c:	e0fff517 	ldw	r3,-44(fp)
 4020490:	10c00015 	stw	r3,0(r2)
			*HEX = current_value;
 4020494:	e0bff817 	ldw	r2,-32(fp)
 4020498:	e0fff517 	ldw	r3,-44(fp)
 402049c:	10c00015 	stw	r3,0(r2)
			printf("Random Value: %X\n", current_value);
 40204a0:	e17ff517 	ldw	r5,-44(fp)
 40204a4:	01000034 	movhi	r4,0
 40204a8:	21000004 	addi	r4,r4,0
 40204ac:	40208900 	call	4020890 <printf>
			usleep(500000);
 40204b0:	01000234 	movhi	r4,8
 40204b4:	21284804 	addi	r4,r4,-24288
 40204b8:	402ded00 	call	402ded0 <usleep>
		}

        if ((switches & 0x100) && (switches & 0x200)) {
 40204bc:	e0bffc17 	ldw	r2,-16(fp)
 40204c0:	1080400c 	andi	r2,r2,256
 40204c4:	10001326 	beq	r2,zero,4020514 <main+0x1ac>
 40204c8:	e0bffc17 	ldw	r2,-16(fp)
 40204cc:	1080800c 	andi	r2,r2,512
 40204d0:	10001026 	beq	r2,zero,4020514 <main+0x1ac>
			unsigned int reversed = reverse_digits(current_value);
 40204d4:	e13ff517 	ldw	r4,-44(fp)
 40204d8:	40202e80 	call	40202e8 <reverse_digits>
 40204dc:	e0bffd15 	stw	r2,-12(fp)
			*LEDR = reversed;
 40204e0:	e0bff917 	ldw	r2,-28(fp)
 40204e4:	e0fffd17 	ldw	r3,-12(fp)
 40204e8:	10c00015 	stw	r3,0(r2)
			*HEX = reversed;
 40204ec:	e0bff817 	ldw	r2,-32(fp)
 40204f0:	e0fffd17 	ldw	r3,-12(fp)
 40204f4:	10c00015 	stw	r3,0(r2)
			printf("Reversed Digits: %X\n", reversed);
 40204f8:	e17ffd17 	ldw	r5,-12(fp)
 40204fc:	01000034 	movhi	r4,0
 4020500:	21000504 	addi	r4,r4,20
 4020504:	40208900 	call	4020890 <printf>
			usleep(500000);
 4020508:	01000234 	movhi	r4,8
 402050c:	21284804 	addi	r4,r4,-24288
 4020510:	402ded00 	call	402ded0 <usleep>
		}

        if (switches & 0x40) {
 4020514:	e0bffc17 	ldw	r2,-16(fp)
 4020518:	1080100c 	andi	r2,r2,64
 402051c:	10001026 	beq	r2,zero,4020560 <main+0x1f8>
            blink_state = !blink_state;
 4020520:	e0bff717 	ldw	r2,-36(fp)
 4020524:	1005003a 	cmpeq	r2,r2,zero
 4020528:	10803fcc 	andi	r2,r2,255
 402052c:	e0bff715 	stw	r2,-36(fp)
            *LEDR = 0xFFFFFF;
 4020530:	e0fff917 	ldw	r3,-28(fp)
 4020534:	00804034 	movhi	r2,256
 4020538:	10bfffc4 	addi	r2,r2,-1
 402053c:	18800015 	stw	r2,0(r3)
            *HEX = 0x09306A;
 4020540:	e0fff817 	ldw	r3,-32(fp)
 4020544:	00800274 	movhi	r2,9
 4020548:	108c1a84 	addi	r2,r2,12394
 402054c:	18800015 	stw	r2,0(r3)
            usleep(500000);
 4020550:	01000234 	movhi	r4,8
 4020554:	21284804 	addi	r4,r4,-24288
 4020558:	402ded00 	call	402ded0 <usleep>
 402055c:	00004306 	br	402066c <main+0x304>
        } else if (switches & 0x4) {
 4020560:	e0bffc17 	ldw	r2,-16(fp)
 4020564:	1080010c 	andi	r2,r2,4
 4020568:	10001226 	beq	r2,zero,40205b4 <main+0x24c>
            unsigned int encrypted_value = xor_cipher(current_value, cipher_key);
 402056c:	e17ffb17 	ldw	r5,-20(fp)
 4020570:	e13ff517 	ldw	r4,-44(fp)
 4020574:	402026c0 	call	402026c <xor_cipher>
 4020578:	e0bffe15 	stw	r2,-8(fp)
            *LEDR = encrypted_value;
 402057c:	e0bff917 	ldw	r2,-28(fp)
 4020580:	e0fffe17 	ldw	r3,-8(fp)
 4020584:	10c00015 	stw	r3,0(r2)
            *HEX = encrypted_value;
 4020588:	e0bff817 	ldw	r2,-32(fp)
 402058c:	e0fffe17 	ldw	r3,-8(fp)
 4020590:	10c00015 	stw	r3,0(r2)
            printf("Encrypted Value (XOR): %X\n", encrypted_value);
 4020594:	e17ffe17 	ldw	r5,-8(fp)
 4020598:	01000034 	movhi	r4,0
 402059c:	21000b04 	addi	r4,r4,44
 40205a0:	40208900 	call	4020890 <printf>
            usleep(500000);
 40205a4:	01000234 	movhi	r4,8
 40205a8:	21284804 	addi	r4,r4,-24288
 40205ac:	402ded00 	call	402ded0 <usleep>
 40205b0:	00002e06 	br	402066c <main+0x304>
        } else if (switches & 0x2) {
 40205b4:	e0bffc17 	ldw	r2,-16(fp)
 40205b8:	1080008c 	andi	r2,r2,2
 40205bc:	10002526 	beq	r2,zero,4020654 <main+0x2ec>
            *LEDR = current_value;
 40205c0:	e0bff917 	ldw	r2,-28(fp)
 40205c4:	e0fff517 	ldw	r3,-44(fp)
 40205c8:	10c00015 	stw	r3,0(r2)
            *HEX = ((current_value / 1000 % 10) << 12) |
 40205cc:	e0bff517 	ldw	r2,-44(fp)
 40205d0:	0140fa04 	movi	r5,1000
 40205d4:	1009883a 	mov	r4,r2
 40205d8:	402077c0 	call	402077c <__udivsi3>
 40205dc:	01400284 	movi	r5,10
 40205e0:	1009883a 	mov	r4,r2
 40205e4:	40207e00 	call	40207e0 <__umodsi3>
 40205e8:	1020933a 	slli	r16,r2,12
                   ((current_value / 100 % 10) << 8) |
 40205ec:	e0bff517 	ldw	r2,-44(fp)
 40205f0:	01401904 	movi	r5,100
 40205f4:	1009883a 	mov	r4,r2
 40205f8:	402077c0 	call	402077c <__udivsi3>
 40205fc:	01400284 	movi	r5,10
 4020600:	1009883a 	mov	r4,r2
 4020604:	40207e00 	call	40207e0 <__umodsi3>
 4020608:	1004923a 	slli	r2,r2,8
            *HEX = encrypted_value;
            printf("Encrypted Value (XOR): %X\n", encrypted_value);
            usleep(500000);
        } else if (switches & 0x2) {
            *LEDR = current_value;
            *HEX = ((current_value / 1000 % 10) << 12) |
 402060c:	80a0b03a 	or	r16,r16,r2
                   ((current_value / 100 % 10) << 8) |
                   ((current_value / 10 % 10) << 4) |
 4020610:	e0bff517 	ldw	r2,-44(fp)
 4020614:	01400284 	movi	r5,10
 4020618:	1009883a 	mov	r4,r2
 402061c:	402077c0 	call	402077c <__udivsi3>
 4020620:	01400284 	movi	r5,10
 4020624:	1009883a 	mov	r4,r2
 4020628:	40207e00 	call	40207e0 <__umodsi3>
 402062c:	1004913a 	slli	r2,r2,4
            printf("Encrypted Value (XOR): %X\n", encrypted_value);
            usleep(500000);
        } else if (switches & 0x2) {
            *LEDR = current_value;
            *HEX = ((current_value / 1000 % 10) << 12) |
                   ((current_value / 100 % 10) << 8) |
 4020630:	80a0b03a 	or	r16,r16,r2
                   ((current_value / 10 % 10) << 4) |
                   (current_value % 10);
 4020634:	e0bff517 	ldw	r2,-44(fp)
 4020638:	01400284 	movi	r5,10
 402063c:	1009883a 	mov	r4,r2
 4020640:	40207e00 	call	40207e0 <__umodsi3>
            usleep(500000);
        } else if (switches & 0x2) {
            *LEDR = current_value;
            *HEX = ((current_value / 1000 % 10) << 12) |
                   ((current_value / 100 % 10) << 8) |
                   ((current_value / 10 % 10) << 4) |
 4020644:	8086b03a 	or	r3,r16,r2
            *HEX = encrypted_value;
            printf("Encrypted Value (XOR): %X\n", encrypted_value);
            usleep(500000);
        } else if (switches & 0x2) {
            *LEDR = current_value;
            *HEX = ((current_value / 1000 % 10) << 12) |
 4020648:	e0bff817 	ldw	r2,-32(fp)
 402064c:	10c00015 	stw	r3,0(r2)
 4020650:	00000606 	br	402066c <main+0x304>
                   ((current_value / 100 % 10) << 8) |
                   ((current_value / 10 % 10) << 4) |
                   (current_value % 10);
        } else {
            *LEDR = current_value;
 4020654:	e0bff917 	ldw	r2,-28(fp)
 4020658:	e0fff517 	ldw	r3,-44(fp)
 402065c:	10c00015 	stw	r3,0(r2)
            *HEX = current_value;
 4020660:	e0bff817 	ldw	r2,-32(fp)
 4020664:	e0fff517 	ldw	r3,-44(fp)
 4020668:	10c00015 	stw	r3,0(r2)
        }

        prev_switches = switches;
 402066c:	e0bffc17 	ldw	r2,-16(fp)
 4020670:	e0bff615 	stw	r2,-40(fp)
        usleep(100000);
 4020674:	010000b4 	movhi	r4,2
 4020678:	2121a804 	addi	r4,r4,-31072
 402067c:	402ded00 	call	402ded0 <usleep>
    }
 4020680:	003f4c06 	br	40203b4 <__flash_rwdata_start+0xffff00a0>

04020684 <__divsi3>:
 4020684:	20001b16 	blt	r4,zero,40206f4 <__divsi3+0x70>
 4020688:	000f883a 	mov	r7,zero
 402068c:	28001616 	blt	r5,zero,40206e8 <__divsi3+0x64>
 4020690:	200d883a 	mov	r6,r4
 4020694:	29001a2e 	bgeu	r5,r4,4020700 <__divsi3+0x7c>
 4020698:	00800804 	movi	r2,32
 402069c:	00c00044 	movi	r3,1
 40206a0:	00000106 	br	40206a8 <__divsi3+0x24>
 40206a4:	10000d26 	beq	r2,zero,40206dc <__divsi3+0x58>
 40206a8:	294b883a 	add	r5,r5,r5
 40206ac:	10bfffc4 	addi	r2,r2,-1
 40206b0:	18c7883a 	add	r3,r3,r3
 40206b4:	293ffb36 	bltu	r5,r4,40206a4 <__flash_rwdata_start+0xffff0390>
 40206b8:	0005883a 	mov	r2,zero
 40206bc:	18000726 	beq	r3,zero,40206dc <__divsi3+0x58>
 40206c0:	0005883a 	mov	r2,zero
 40206c4:	31400236 	bltu	r6,r5,40206d0 <__divsi3+0x4c>
 40206c8:	314dc83a 	sub	r6,r6,r5
 40206cc:	10c4b03a 	or	r2,r2,r3
 40206d0:	1806d07a 	srli	r3,r3,1
 40206d4:	280ad07a 	srli	r5,r5,1
 40206d8:	183ffa1e 	bne	r3,zero,40206c4 <__flash_rwdata_start+0xffff03b0>
 40206dc:	38000126 	beq	r7,zero,40206e4 <__divsi3+0x60>
 40206e0:	0085c83a 	sub	r2,zero,r2
 40206e4:	f800283a 	ret
 40206e8:	014bc83a 	sub	r5,zero,r5
 40206ec:	39c0005c 	xori	r7,r7,1
 40206f0:	003fe706 	br	4020690 <__flash_rwdata_start+0xffff037c>
 40206f4:	0109c83a 	sub	r4,zero,r4
 40206f8:	01c00044 	movi	r7,1
 40206fc:	003fe306 	br	402068c <__flash_rwdata_start+0xffff0378>
 4020700:	00c00044 	movi	r3,1
 4020704:	003fee06 	br	40206c0 <__flash_rwdata_start+0xffff03ac>

04020708 <__modsi3>:
 4020708:	20001716 	blt	r4,zero,4020768 <__modsi3+0x60>
 402070c:	000f883a 	mov	r7,zero
 4020710:	2005883a 	mov	r2,r4
 4020714:	28001216 	blt	r5,zero,4020760 <__modsi3+0x58>
 4020718:	2900162e 	bgeu	r5,r4,4020774 <__modsi3+0x6c>
 402071c:	01800804 	movi	r6,32
 4020720:	00c00044 	movi	r3,1
 4020724:	00000106 	br	402072c <__modsi3+0x24>
 4020728:	30000a26 	beq	r6,zero,4020754 <__modsi3+0x4c>
 402072c:	294b883a 	add	r5,r5,r5
 4020730:	31bfffc4 	addi	r6,r6,-1
 4020734:	18c7883a 	add	r3,r3,r3
 4020738:	293ffb36 	bltu	r5,r4,4020728 <__flash_rwdata_start+0xffff0414>
 402073c:	18000526 	beq	r3,zero,4020754 <__modsi3+0x4c>
 4020740:	1806d07a 	srli	r3,r3,1
 4020744:	11400136 	bltu	r2,r5,402074c <__modsi3+0x44>
 4020748:	1145c83a 	sub	r2,r2,r5
 402074c:	280ad07a 	srli	r5,r5,1
 4020750:	183ffb1e 	bne	r3,zero,4020740 <__flash_rwdata_start+0xffff042c>
 4020754:	38000126 	beq	r7,zero,402075c <__modsi3+0x54>
 4020758:	0085c83a 	sub	r2,zero,r2
 402075c:	f800283a 	ret
 4020760:	014bc83a 	sub	r5,zero,r5
 4020764:	003fec06 	br	4020718 <__flash_rwdata_start+0xffff0404>
 4020768:	0109c83a 	sub	r4,zero,r4
 402076c:	01c00044 	movi	r7,1
 4020770:	003fe706 	br	4020710 <__flash_rwdata_start+0xffff03fc>
 4020774:	00c00044 	movi	r3,1
 4020778:	003ff106 	br	4020740 <__flash_rwdata_start+0xffff042c>

0402077c <__udivsi3>:
 402077c:	200d883a 	mov	r6,r4
 4020780:	2900152e 	bgeu	r5,r4,40207d8 <__udivsi3+0x5c>
 4020784:	28001416 	blt	r5,zero,40207d8 <__udivsi3+0x5c>
 4020788:	00800804 	movi	r2,32
 402078c:	00c00044 	movi	r3,1
 4020790:	00000206 	br	402079c <__udivsi3+0x20>
 4020794:	10000e26 	beq	r2,zero,40207d0 <__udivsi3+0x54>
 4020798:	28000516 	blt	r5,zero,40207b0 <__udivsi3+0x34>
 402079c:	294b883a 	add	r5,r5,r5
 40207a0:	10bfffc4 	addi	r2,r2,-1
 40207a4:	18c7883a 	add	r3,r3,r3
 40207a8:	293ffa36 	bltu	r5,r4,4020794 <__flash_rwdata_start+0xffff0480>
 40207ac:	18000826 	beq	r3,zero,40207d0 <__udivsi3+0x54>
 40207b0:	0005883a 	mov	r2,zero
 40207b4:	31400236 	bltu	r6,r5,40207c0 <__udivsi3+0x44>
 40207b8:	314dc83a 	sub	r6,r6,r5
 40207bc:	10c4b03a 	or	r2,r2,r3
 40207c0:	1806d07a 	srli	r3,r3,1
 40207c4:	280ad07a 	srli	r5,r5,1
 40207c8:	183ffa1e 	bne	r3,zero,40207b4 <__flash_rwdata_start+0xffff04a0>
 40207cc:	f800283a 	ret
 40207d0:	0005883a 	mov	r2,zero
 40207d4:	f800283a 	ret
 40207d8:	00c00044 	movi	r3,1
 40207dc:	003ff406 	br	40207b0 <__flash_rwdata_start+0xffff049c>

040207e0 <__umodsi3>:
 40207e0:	2005883a 	mov	r2,r4
 40207e4:	2900122e 	bgeu	r5,r4,4020830 <__umodsi3+0x50>
 40207e8:	28001116 	blt	r5,zero,4020830 <__umodsi3+0x50>
 40207ec:	01800804 	movi	r6,32
 40207f0:	00c00044 	movi	r3,1
 40207f4:	00000206 	br	4020800 <__umodsi3+0x20>
 40207f8:	30000c26 	beq	r6,zero,402082c <__umodsi3+0x4c>
 40207fc:	28000516 	blt	r5,zero,4020814 <__umodsi3+0x34>
 4020800:	294b883a 	add	r5,r5,r5
 4020804:	31bfffc4 	addi	r6,r6,-1
 4020808:	18c7883a 	add	r3,r3,r3
 402080c:	293ffa36 	bltu	r5,r4,40207f8 <__flash_rwdata_start+0xffff04e4>
 4020810:	18000626 	beq	r3,zero,402082c <__umodsi3+0x4c>
 4020814:	1806d07a 	srli	r3,r3,1
 4020818:	11400136 	bltu	r2,r5,4020820 <__umodsi3+0x40>
 402081c:	1145c83a 	sub	r2,r2,r5
 4020820:	280ad07a 	srli	r5,r5,1
 4020824:	183ffb1e 	bne	r3,zero,4020814 <__flash_rwdata_start+0xffff0500>
 4020828:	f800283a 	ret
 402082c:	f800283a 	ret
 4020830:	00c00044 	movi	r3,1
 4020834:	003ff706 	br	4020814 <__flash_rwdata_start+0xffff0500>

04020838 <__mulsi3>:
 4020838:	0005883a 	mov	r2,zero
 402083c:	20000726 	beq	r4,zero,402085c <__mulsi3+0x24>
 4020840:	20c0004c 	andi	r3,r4,1
 4020844:	2008d07a 	srli	r4,r4,1
 4020848:	18000126 	beq	r3,zero,4020850 <__mulsi3+0x18>
 402084c:	1145883a 	add	r2,r2,r5
 4020850:	294b883a 	add	r5,r5,r5
 4020854:	203ffa1e 	bne	r4,zero,4020840 <__flash_rwdata_start+0xffff052c>
 4020858:	f800283a 	ret
 402085c:	f800283a 	ret

04020860 <_printf_r>:
 4020860:	defffd04 	addi	sp,sp,-12
 4020864:	2805883a 	mov	r2,r5
 4020868:	dfc00015 	stw	ra,0(sp)
 402086c:	d9800115 	stw	r6,4(sp)
 4020870:	d9c00215 	stw	r7,8(sp)
 4020874:	21400217 	ldw	r5,8(r4)
 4020878:	d9c00104 	addi	r7,sp,4
 402087c:	100d883a 	mov	r6,r2
 4020880:	40209480 	call	4020948 <___vfprintf_internal_r>
 4020884:	dfc00017 	ldw	ra,0(sp)
 4020888:	dec00304 	addi	sp,sp,12
 402088c:	f800283a 	ret

04020890 <printf>:
 4020890:	defffc04 	addi	sp,sp,-16
 4020894:	dfc00015 	stw	ra,0(sp)
 4020898:	d9400115 	stw	r5,4(sp)
 402089c:	d9800215 	stw	r6,8(sp)
 40208a0:	d9c00315 	stw	r7,12(sp)
 40208a4:	00800034 	movhi	r2,0
 40208a8:	10878b04 	addi	r2,r2,7724
 40208ac:	10800017 	ldw	r2,0(r2)
 40208b0:	200b883a 	mov	r5,r4
 40208b4:	d9800104 	addi	r6,sp,4
 40208b8:	11000217 	ldw	r4,8(r2)
 40208bc:	4022c240 	call	4022c24 <__vfprintf_internal>
 40208c0:	dfc00017 	ldw	ra,0(sp)
 40208c4:	dec00404 	addi	sp,sp,16
 40208c8:	f800283a 	ret

040208cc <srand>:
 40208cc:	00800034 	movhi	r2,0
 40208d0:	10878b04 	addi	r2,r2,7724
 40208d4:	10800017 	ldw	r2,0(r2)
 40208d8:	11002915 	stw	r4,164(r2)
 40208dc:	10002a15 	stw	zero,168(r2)
 40208e0:	f800283a 	ret

040208e4 <rand>:
 40208e4:	00800034 	movhi	r2,0
 40208e8:	defffe04 	addi	sp,sp,-8
 40208ec:	10878b04 	addi	r2,r2,7724
 40208f0:	dc000015 	stw	r16,0(sp)
 40208f4:	14000017 	ldw	r16,0(r2)
 40208f8:	dfc00115 	stw	ra,4(sp)
 40208fc:	01932574 	movhi	r6,19605
 4020900:	81002917 	ldw	r4,164(r16)
 4020904:	81402a17 	ldw	r5,168(r16)
 4020908:	01d614b4 	movhi	r7,22610
 402090c:	319fcb44 	addi	r6,r6,32557
 4020910:	39fd0b44 	addi	r7,r7,-3027
 4020914:	402a1080 	call	402a108 <__muldi3>
 4020918:	11000044 	addi	r4,r2,1
 402091c:	2085803a 	cmpltu	r2,r4,r2
 4020920:	10c7883a 	add	r3,r2,r3
 4020924:	00a00034 	movhi	r2,32768
 4020928:	10bfffc4 	addi	r2,r2,-1
 402092c:	1884703a 	and	r2,r3,r2
 4020930:	81002915 	stw	r4,164(r16)
 4020934:	80c02a15 	stw	r3,168(r16)
 4020938:	dfc00117 	ldw	ra,4(sp)
 402093c:	dc000017 	ldw	r16,0(sp)
 4020940:	dec00204 	addi	sp,sp,8
 4020944:	f800283a 	ret

04020948 <___vfprintf_internal_r>:
 4020948:	deffb804 	addi	sp,sp,-288
 402094c:	dfc04715 	stw	ra,284(sp)
 4020950:	ddc04515 	stw	r23,276(sp)
 4020954:	dd404315 	stw	r21,268(sp)
 4020958:	d9002d15 	stw	r4,180(sp)
 402095c:	282f883a 	mov	r23,r5
 4020960:	302b883a 	mov	r21,r6
 4020964:	d9c02e15 	stw	r7,184(sp)
 4020968:	df004615 	stw	fp,280(sp)
 402096c:	dd804415 	stw	r22,272(sp)
 4020970:	dd004215 	stw	r20,264(sp)
 4020974:	dcc04115 	stw	r19,260(sp)
 4020978:	dc804015 	stw	r18,256(sp)
 402097c:	dc403f15 	stw	r17,252(sp)
 4020980:	dc003e15 	stw	r16,248(sp)
 4020984:	40253c00 	call	40253c0 <_localeconv_r>
 4020988:	10800017 	ldw	r2,0(r2)
 402098c:	1009883a 	mov	r4,r2
 4020990:	d8803415 	stw	r2,208(sp)
 4020994:	40274a40 	call	40274a4 <strlen>
 4020998:	d8803715 	stw	r2,220(sp)
 402099c:	d8802d17 	ldw	r2,180(sp)
 40209a0:	10000226 	beq	r2,zero,40209ac <___vfprintf_internal_r+0x64>
 40209a4:	10800e17 	ldw	r2,56(r2)
 40209a8:	1000fb26 	beq	r2,zero,4020d98 <___vfprintf_internal_r+0x450>
 40209ac:	b880030b 	ldhu	r2,12(r23)
 40209b0:	10c8000c 	andi	r3,r2,8192
 40209b4:	1800061e 	bne	r3,zero,40209d0 <___vfprintf_internal_r+0x88>
 40209b8:	b9001917 	ldw	r4,100(r23)
 40209bc:	00f7ffc4 	movi	r3,-8193
 40209c0:	10880014 	ori	r2,r2,8192
 40209c4:	20c6703a 	and	r3,r4,r3
 40209c8:	b880030d 	sth	r2,12(r23)
 40209cc:	b8c01915 	stw	r3,100(r23)
 40209d0:	10c0020c 	andi	r3,r2,8
 40209d4:	1800c326 	beq	r3,zero,4020ce4 <___vfprintf_internal_r+0x39c>
 40209d8:	b8c00417 	ldw	r3,16(r23)
 40209dc:	1800c126 	beq	r3,zero,4020ce4 <___vfprintf_internal_r+0x39c>
 40209e0:	1080068c 	andi	r2,r2,26
 40209e4:	00c00284 	movi	r3,10
 40209e8:	10c0c626 	beq	r2,r3,4020d04 <___vfprintf_internal_r+0x3bc>
 40209ec:	d8c00404 	addi	r3,sp,16
 40209f0:	05000034 	movhi	r20,0
 40209f4:	d9001e04 	addi	r4,sp,120
 40209f8:	a5002284 	addi	r20,r20,138
 40209fc:	d8c01e15 	stw	r3,120(sp)
 4020a00:	d8002015 	stw	zero,128(sp)
 4020a04:	d8001f15 	stw	zero,124(sp)
 4020a08:	d8003315 	stw	zero,204(sp)
 4020a0c:	d8003615 	stw	zero,216(sp)
 4020a10:	d8003815 	stw	zero,224(sp)
 4020a14:	1811883a 	mov	r8,r3
 4020a18:	d8003915 	stw	zero,228(sp)
 4020a1c:	d8003a15 	stw	zero,232(sp)
 4020a20:	d8002f15 	stw	zero,188(sp)
 4020a24:	d9002815 	stw	r4,160(sp)
 4020a28:	a8800007 	ldb	r2,0(r21)
 4020a2c:	10028b26 	beq	r2,zero,402145c <___vfprintf_internal_r+0xb14>
 4020a30:	00c00944 	movi	r3,37
 4020a34:	a823883a 	mov	r17,r21
 4020a38:	10c0021e 	bne	r2,r3,4020a44 <___vfprintf_internal_r+0xfc>
 4020a3c:	00001406 	br	4020a90 <___vfprintf_internal_r+0x148>
 4020a40:	10c00326 	beq	r2,r3,4020a50 <___vfprintf_internal_r+0x108>
 4020a44:	8c400044 	addi	r17,r17,1
 4020a48:	88800007 	ldb	r2,0(r17)
 4020a4c:	103ffc1e 	bne	r2,zero,4020a40 <__flash_rwdata_start+0xffff072c>
 4020a50:	8d61c83a 	sub	r16,r17,r21
 4020a54:	80000e26 	beq	r16,zero,4020a90 <___vfprintf_internal_r+0x148>
 4020a58:	d8c02017 	ldw	r3,128(sp)
 4020a5c:	d8801f17 	ldw	r2,124(sp)
 4020a60:	45400015 	stw	r21,0(r8)
 4020a64:	1c07883a 	add	r3,r3,r16
 4020a68:	10800044 	addi	r2,r2,1
 4020a6c:	d8c02015 	stw	r3,128(sp)
 4020a70:	44000115 	stw	r16,4(r8)
 4020a74:	d8801f15 	stw	r2,124(sp)
 4020a78:	00c001c4 	movi	r3,7
 4020a7c:	1880a916 	blt	r3,r2,4020d24 <___vfprintf_internal_r+0x3dc>
 4020a80:	42000204 	addi	r8,r8,8
 4020a84:	d9402f17 	ldw	r5,188(sp)
 4020a88:	2c0b883a 	add	r5,r5,r16
 4020a8c:	d9402f15 	stw	r5,188(sp)
 4020a90:	88800007 	ldb	r2,0(r17)
 4020a94:	1000aa26 	beq	r2,zero,4020d40 <___vfprintf_internal_r+0x3f8>
 4020a98:	8d400044 	addi	r21,r17,1
 4020a9c:	8c400047 	ldb	r17,1(r17)
 4020aa0:	0021883a 	mov	r16,zero
 4020aa4:	00bfffc4 	movi	r2,-1
 4020aa8:	0025883a 	mov	r18,zero
 4020aac:	dc002905 	stb	r16,164(sp)
 4020ab0:	d8002785 	stb	zero,158(sp)
 4020ab4:	d8002b05 	stb	zero,172(sp)
 4020ab8:	d8802a15 	stw	r2,168(sp)
 4020abc:	d8003115 	stw	zero,196(sp)
 4020ac0:	04c01604 	movi	r19,88
 4020ac4:	05800244 	movi	r22,9
 4020ac8:	9021883a 	mov	r16,r18
 4020acc:	4039883a 	mov	fp,r8
 4020ad0:	ad400044 	addi	r21,r21,1
 4020ad4:	88bff804 	addi	r2,r17,-32
 4020ad8:	98833236 	bltu	r19,r2,40217a4 <___vfprintf_internal_r+0xe5c>
 4020adc:	100490ba 	slli	r2,r2,2
 4020ae0:	00c100b4 	movhi	r3,1026
 4020ae4:	18c2bd04 	addi	r3,r3,2804
 4020ae8:	10c5883a 	add	r2,r2,r3
 4020aec:	10800017 	ldw	r2,0(r2)
 4020af0:	1000683a 	jmp	r2
 4020af4:	0402169c 	xori	r16,zero,2138
 4020af8:	040217a4 	muli	r16,zero,2142
 4020afc:	040217a4 	muli	r16,zero,2142
 4020b00:	040216bc 	xorhi	r16,zero,2138
 4020b04:	040217a4 	muli	r16,zero,2142
 4020b08:	040217a4 	muli	r16,zero,2142
 4020b0c:	040217a4 	muli	r16,zero,2142
 4020b10:	040217a4 	muli	r16,zero,2142
 4020b14:	040217a4 	muli	r16,zero,2142
 4020b18:	040217a4 	muli	r16,zero,2142
 4020b1c:	04020da4 	muli	r16,zero,2102
 4020b20:	040215ac 	andhi	r16,zero,2134
 4020b24:	040217a4 	muli	r16,zero,2142
 4020b28:	04020c68 	cmpgeui	r16,zero,2097
 4020b2c:	04020dc8 	cmpgei	r16,zero,2103
 4020b30:	040217a4 	muli	r16,zero,2142
 4020b34:	04020e18 	cmpnei	r16,zero,2104
 4020b38:	04020e24 	muli	r16,zero,2104
 4020b3c:	04020e24 	muli	r16,zero,2104
 4020b40:	04020e24 	muli	r16,zero,2104
 4020b44:	04020e24 	muli	r16,zero,2104
 4020b48:	04020e24 	muli	r16,zero,2104
 4020b4c:	04020e24 	muli	r16,zero,2104
 4020b50:	04020e24 	muli	r16,zero,2104
 4020b54:	04020e24 	muli	r16,zero,2104
 4020b58:	04020e24 	muli	r16,zero,2104
 4020b5c:	040217a4 	muli	r16,zero,2142
 4020b60:	040217a4 	muli	r16,zero,2142
 4020b64:	040217a4 	muli	r16,zero,2142
 4020b68:	040217a4 	muli	r16,zero,2142
 4020b6c:	040217a4 	muli	r16,zero,2142
 4020b70:	040217a4 	muli	r16,zero,2142
 4020b74:	040217a4 	muli	r16,zero,2142
 4020b78:	040217a4 	muli	r16,zero,2142
 4020b7c:	040217a4 	muli	r16,zero,2142
 4020b80:	040217a4 	muli	r16,zero,2142
 4020b84:	04020e60 	cmpeqi	r16,zero,2105
 4020b88:	04020f28 	cmpgeui	r16,zero,2108
 4020b8c:	040217a4 	muli	r16,zero,2142
 4020b90:	04020f28 	cmpgeui	r16,zero,2108
 4020b94:	040217a4 	muli	r16,zero,2142
 4020b98:	040217a4 	muli	r16,zero,2142
 4020b9c:	040217a4 	muli	r16,zero,2142
 4020ba0:	040217a4 	muli	r16,zero,2142
 4020ba4:	04020fd4 	movui	r16,2111
 4020ba8:	040217a4 	muli	r16,zero,2142
 4020bac:	040217a4 	muli	r16,zero,2142
 4020bb0:	04020fe0 	cmpeqi	r16,zero,2111
 4020bb4:	040217a4 	muli	r16,zero,2142
 4020bb8:	040217a4 	muli	r16,zero,2142
 4020bbc:	040217a4 	muli	r16,zero,2142
 4020bc0:	040217a4 	muli	r16,zero,2142
 4020bc4:	040217a4 	muli	r16,zero,2142
 4020bc8:	04021464 	muli	r16,zero,2129
 4020bcc:	040217a4 	muli	r16,zero,2142
 4020bd0:	040217a4 	muli	r16,zero,2142
 4020bd4:	040214d0 	cmplti	r16,zero,2131
 4020bd8:	040217a4 	muli	r16,zero,2142
 4020bdc:	040217a4 	muli	r16,zero,2142
 4020be0:	040217a4 	muli	r16,zero,2142
 4020be4:	040217a4 	muli	r16,zero,2142
 4020be8:	040217a4 	muli	r16,zero,2142
 4020bec:	040217a4 	muli	r16,zero,2142
 4020bf0:	040217a4 	muli	r16,zero,2142
 4020bf4:	040217a4 	muli	r16,zero,2142
 4020bf8:	040217a4 	muli	r16,zero,2142
 4020bfc:	040217a4 	muli	r16,zero,2142
 4020c00:	04021748 	cmpgei	r16,zero,2141
 4020c04:	040216c8 	cmpgei	r16,zero,2139
 4020c08:	04020f28 	cmpgeui	r16,zero,2108
 4020c0c:	04020f28 	cmpgeui	r16,zero,2108
 4020c10:	04020f28 	cmpgeui	r16,zero,2108
 4020c14:	040216e8 	cmpgeui	r16,zero,2139
 4020c18:	040216c8 	cmpgei	r16,zero,2139
 4020c1c:	040217a4 	muli	r16,zero,2142
 4020c20:	040217a4 	muli	r16,zero,2142
 4020c24:	040216f4 	movhi	r16,2139
 4020c28:	040217a4 	muli	r16,zero,2142
 4020c2c:	04021708 	cmpgei	r16,zero,2140
 4020c30:	0402158c 	andi	r16,zero,2134
 4020c34:	04020c74 	movhi	r16,2097
 4020c38:	040215c4 	movi	r16,2135
 4020c3c:	040217a4 	muli	r16,zero,2142
 4020c40:	040215d0 	cmplti	r16,zero,2135
 4020c44:	040217a4 	muli	r16,zero,2142
 4020c48:	04021634 	movhi	r16,2136
 4020c4c:	040217a4 	muli	r16,zero,2142
 4020c50:	040217a4 	muli	r16,zero,2142
 4020c54:	04021654 	movui	r16,2137
 4020c58:	d8c03117 	ldw	r3,196(sp)
 4020c5c:	d8802e15 	stw	r2,184(sp)
 4020c60:	00c7c83a 	sub	r3,zero,r3
 4020c64:	d8c03115 	stw	r3,196(sp)
 4020c68:	84000114 	ori	r16,r16,4
 4020c6c:	ac400007 	ldb	r17,0(r21)
 4020c70:	003f9706 	br	4020ad0 <__flash_rwdata_start+0xffff07bc>
 4020c74:	00800c04 	movi	r2,48
 4020c78:	d8802705 	stb	r2,156(sp)
 4020c7c:	00801e04 	movi	r2,120
 4020c80:	d8802745 	stb	r2,157(sp)
 4020c84:	d9002a17 	ldw	r4,168(sp)
 4020c88:	d8802e17 	ldw	r2,184(sp)
 4020c8c:	d8002785 	stb	zero,158(sp)
 4020c90:	e011883a 	mov	r8,fp
 4020c94:	10c00104 	addi	r3,r2,4
 4020c98:	14c00017 	ldw	r19,0(r2)
 4020c9c:	002d883a 	mov	r22,zero
 4020ca0:	80800094 	ori	r2,r16,2
 4020ca4:	2002ca16 	blt	r4,zero,40217d0 <___vfprintf_internal_r+0xe88>
 4020ca8:	00bfdfc4 	movi	r2,-129
 4020cac:	80a4703a 	and	r18,r16,r2
 4020cb0:	d8c02e15 	stw	r3,184(sp)
 4020cb4:	94800094 	ori	r18,r18,2
 4020cb8:	9802b41e 	bne	r19,zero,402178c <___vfprintf_internal_r+0xe44>
 4020cbc:	01400034 	movhi	r5,0
 4020cc0:	29401b04 	addi	r5,r5,108
 4020cc4:	d9403915 	stw	r5,228(sp)
 4020cc8:	04401e04 	movi	r17,120
 4020ccc:	d8802a17 	ldw	r2,168(sp)
 4020cd0:	0039883a 	mov	fp,zero
 4020cd4:	1001fa26 	beq	r2,zero,40214c0 <___vfprintf_internal_r+0xb78>
 4020cd8:	0027883a 	mov	r19,zero
 4020cdc:	002d883a 	mov	r22,zero
 4020ce0:	00021906 	br	4021548 <___vfprintf_internal_r+0xc00>
 4020ce4:	d9002d17 	ldw	r4,180(sp)
 4020ce8:	b80b883a 	mov	r5,r23
 4020cec:	4022cfc0 	call	4022cfc <__swsetup_r>
 4020cf0:	1005dc1e 	bne	r2,zero,4022464 <___vfprintf_internal_r+0x1b1c>
 4020cf4:	b880030b 	ldhu	r2,12(r23)
 4020cf8:	00c00284 	movi	r3,10
 4020cfc:	1080068c 	andi	r2,r2,26
 4020d00:	10ff3a1e 	bne	r2,r3,40209ec <__flash_rwdata_start+0xffff06d8>
 4020d04:	b880038f 	ldh	r2,14(r23)
 4020d08:	103f3816 	blt	r2,zero,40209ec <__flash_rwdata_start+0xffff06d8>
 4020d0c:	d9c02e17 	ldw	r7,184(sp)
 4020d10:	d9002d17 	ldw	r4,180(sp)
 4020d14:	a80d883a 	mov	r6,r21
 4020d18:	b80b883a 	mov	r5,r23
 4020d1c:	4022c400 	call	4022c40 <__sbprintf>
 4020d20:	00001106 	br	4020d68 <___vfprintf_internal_r+0x420>
 4020d24:	d9002d17 	ldw	r4,180(sp)
 4020d28:	d9801e04 	addi	r6,sp,120
 4020d2c:	b80b883a 	mov	r5,r23
 4020d30:	40276380 	call	4027638 <__sprint_r>
 4020d34:	1000081e 	bne	r2,zero,4020d58 <___vfprintf_internal_r+0x410>
 4020d38:	da000404 	addi	r8,sp,16
 4020d3c:	003f5106 	br	4020a84 <__flash_rwdata_start+0xffff0770>
 4020d40:	d8802017 	ldw	r2,128(sp)
 4020d44:	10000426 	beq	r2,zero,4020d58 <___vfprintf_internal_r+0x410>
 4020d48:	d9002d17 	ldw	r4,180(sp)
 4020d4c:	d9801e04 	addi	r6,sp,120
 4020d50:	b80b883a 	mov	r5,r23
 4020d54:	40276380 	call	4027638 <__sprint_r>
 4020d58:	b880030b 	ldhu	r2,12(r23)
 4020d5c:	1080100c 	andi	r2,r2,64
 4020d60:	1005c01e 	bne	r2,zero,4022464 <___vfprintf_internal_r+0x1b1c>
 4020d64:	d8802f17 	ldw	r2,188(sp)
 4020d68:	dfc04717 	ldw	ra,284(sp)
 4020d6c:	df004617 	ldw	fp,280(sp)
 4020d70:	ddc04517 	ldw	r23,276(sp)
 4020d74:	dd804417 	ldw	r22,272(sp)
 4020d78:	dd404317 	ldw	r21,268(sp)
 4020d7c:	dd004217 	ldw	r20,264(sp)
 4020d80:	dcc04117 	ldw	r19,260(sp)
 4020d84:	dc804017 	ldw	r18,256(sp)
 4020d88:	dc403f17 	ldw	r17,252(sp)
 4020d8c:	dc003e17 	ldw	r16,248(sp)
 4020d90:	dec04804 	addi	sp,sp,288
 4020d94:	f800283a 	ret
 4020d98:	d9002d17 	ldw	r4,180(sp)
 4020d9c:	4024d080 	call	4024d08 <__sinit>
 4020da0:	003f0206 	br	40209ac <__flash_rwdata_start+0xffff0698>
 4020da4:	d9002e17 	ldw	r4,184(sp)
 4020da8:	d9402e17 	ldw	r5,184(sp)
 4020dac:	21000017 	ldw	r4,0(r4)
 4020db0:	28800104 	addi	r2,r5,4
 4020db4:	d9003115 	stw	r4,196(sp)
 4020db8:	203fa716 	blt	r4,zero,4020c58 <__flash_rwdata_start+0xffff0944>
 4020dbc:	d8802e15 	stw	r2,184(sp)
 4020dc0:	ac400007 	ldb	r17,0(r21)
 4020dc4:	003f4206 	br	4020ad0 <__flash_rwdata_start+0xffff07bc>
 4020dc8:	ac400007 	ldb	r17,0(r21)
 4020dcc:	01000a84 	movi	r4,42
 4020dd0:	a8c00044 	addi	r3,r21,1
 4020dd4:	89075826 	beq	r17,r4,4022b38 <___vfprintf_internal_r+0x21f0>
 4020dd8:	8cbff404 	addi	r18,r17,-48
 4020ddc:	b486ae36 	bltu	r22,r18,4022898 <___vfprintf_internal_r+0x1f50>
 4020de0:	0009883a 	mov	r4,zero
 4020de4:	1823883a 	mov	r17,r3
 4020de8:	01400284 	movi	r5,10
 4020dec:	40208380 	call	4020838 <__mulsi3>
 4020df0:	88c00007 	ldb	r3,0(r17)
 4020df4:	1489883a 	add	r4,r2,r18
 4020df8:	8d400044 	addi	r21,r17,1
 4020dfc:	1cbff404 	addi	r18,r3,-48
 4020e00:	a823883a 	mov	r17,r21
 4020e04:	b4bff82e 	bgeu	r22,r18,4020de8 <__flash_rwdata_start+0xffff0ad4>
 4020e08:	1823883a 	mov	r17,r3
 4020e0c:	2005f616 	blt	r4,zero,40225e8 <___vfprintf_internal_r+0x1ca0>
 4020e10:	d9002a15 	stw	r4,168(sp)
 4020e14:	003f2f06 	br	4020ad4 <__flash_rwdata_start+0xffff07c0>
 4020e18:	84002014 	ori	r16,r16,128
 4020e1c:	ac400007 	ldb	r17,0(r21)
 4020e20:	003f2b06 	br	4020ad0 <__flash_rwdata_start+0xffff07bc>
 4020e24:	8cbff404 	addi	r18,r17,-48
 4020e28:	d8003115 	stw	zero,196(sp)
 4020e2c:	0009883a 	mov	r4,zero
 4020e30:	a823883a 	mov	r17,r21
 4020e34:	01400284 	movi	r5,10
 4020e38:	40208380 	call	4020838 <__mulsi3>
 4020e3c:	88c00007 	ldb	r3,0(r17)
 4020e40:	9089883a 	add	r4,r18,r2
 4020e44:	ad400044 	addi	r21,r21,1
 4020e48:	1cbff404 	addi	r18,r3,-48
 4020e4c:	a823883a 	mov	r17,r21
 4020e50:	b4bff82e 	bgeu	r22,r18,4020e34 <__flash_rwdata_start+0xffff0b20>
 4020e54:	1823883a 	mov	r17,r3
 4020e58:	d9003115 	stw	r4,196(sp)
 4020e5c:	003f1d06 	br	4020ad4 <__flash_rwdata_start+0xffff07c0>
 4020e60:	8025883a 	mov	r18,r16
 4020e64:	dc002903 	ldbu	r16,164(sp)
 4020e68:	e011883a 	mov	r8,fp
 4020e6c:	84003fcc 	andi	r16,r16,255
 4020e70:	8007531e 	bne	r16,zero,4022bc0 <___vfprintf_internal_r+0x2278>
 4020e74:	94800414 	ori	r18,r18,16
 4020e78:	9080080c 	andi	r2,r18,32
 4020e7c:	1003a326 	beq	r2,zero,4021d0c <___vfprintf_internal_r+0x13c4>
 4020e80:	d9002e17 	ldw	r4,184(sp)
 4020e84:	20800117 	ldw	r2,4(r4)
 4020e88:	24c00017 	ldw	r19,0(r4)
 4020e8c:	21000204 	addi	r4,r4,8
 4020e90:	d9002e15 	stw	r4,184(sp)
 4020e94:	102d883a 	mov	r22,r2
 4020e98:	10047316 	blt	r2,zero,4022068 <___vfprintf_internal_r+0x1720>
 4020e9c:	d9002a17 	ldw	r4,168(sp)
 4020ea0:	df002783 	ldbu	fp,158(sp)
 4020ea4:	2003e416 	blt	r4,zero,4021e38 <___vfprintf_internal_r+0x14f0>
 4020ea8:	00ffdfc4 	movi	r3,-129
 4020eac:	9d84b03a 	or	r2,r19,r22
 4020eb0:	90e4703a 	and	r18,r18,r3
 4020eb4:	10018026 	beq	r2,zero,40214b8 <___vfprintf_internal_r+0xb70>
 4020eb8:	b003ab26 	beq	r22,zero,4021d68 <___vfprintf_internal_r+0x1420>
 4020ebc:	dc402915 	stw	r17,164(sp)
 4020ec0:	dc001e04 	addi	r16,sp,120
 4020ec4:	b023883a 	mov	r17,r22
 4020ec8:	402d883a 	mov	r22,r8
 4020ecc:	9809883a 	mov	r4,r19
 4020ed0:	880b883a 	mov	r5,r17
 4020ed4:	01800284 	movi	r6,10
 4020ed8:	000f883a 	mov	r7,zero
 4020edc:	402a8100 	call	402a810 <__umoddi3>
 4020ee0:	10800c04 	addi	r2,r2,48
 4020ee4:	843fffc4 	addi	r16,r16,-1
 4020ee8:	9809883a 	mov	r4,r19
 4020eec:	880b883a 	mov	r5,r17
 4020ef0:	80800005 	stb	r2,0(r16)
 4020ef4:	01800284 	movi	r6,10
 4020ef8:	000f883a 	mov	r7,zero
 4020efc:	402a2140 	call	402a214 <__udivdi3>
 4020f00:	1027883a 	mov	r19,r2
 4020f04:	10c4b03a 	or	r2,r2,r3
 4020f08:	1823883a 	mov	r17,r3
 4020f0c:	103fef1e 	bne	r2,zero,4020ecc <__flash_rwdata_start+0xffff0bb8>
 4020f10:	d8c02817 	ldw	r3,160(sp)
 4020f14:	dc402917 	ldw	r17,164(sp)
 4020f18:	b011883a 	mov	r8,r22
 4020f1c:	1c07c83a 	sub	r3,r3,r16
 4020f20:	d8c02b15 	stw	r3,172(sp)
 4020f24:	00005f06 	br	40210a4 <___vfprintf_internal_r+0x75c>
 4020f28:	8025883a 	mov	r18,r16
 4020f2c:	dc002903 	ldbu	r16,164(sp)
 4020f30:	e011883a 	mov	r8,fp
 4020f34:	84003fcc 	andi	r16,r16,255
 4020f38:	80071e1e 	bne	r16,zero,4022bb4 <___vfprintf_internal_r+0x226c>
 4020f3c:	9080020c 	andi	r2,r18,8
 4020f40:	1004af26 	beq	r2,zero,4022200 <___vfprintf_internal_r+0x18b8>
 4020f44:	d9002e17 	ldw	r4,184(sp)
 4020f48:	d9402e17 	ldw	r5,184(sp)
 4020f4c:	d8802e17 	ldw	r2,184(sp)
 4020f50:	21000017 	ldw	r4,0(r4)
 4020f54:	29400117 	ldw	r5,4(r5)
 4020f58:	10800204 	addi	r2,r2,8
 4020f5c:	d9003615 	stw	r4,216(sp)
 4020f60:	d9403815 	stw	r5,224(sp)
 4020f64:	d8802e15 	stw	r2,184(sp)
 4020f68:	d9003617 	ldw	r4,216(sp)
 4020f6c:	d9403817 	ldw	r5,224(sp)
 4020f70:	da003d15 	stw	r8,244(sp)
 4020f74:	04000044 	movi	r16,1
 4020f78:	40271c40 	call	40271c4 <__fpclassifyd>
 4020f7c:	da003d17 	ldw	r8,244(sp)
 4020f80:	1404441e 	bne	r2,r16,4022094 <___vfprintf_internal_r+0x174c>
 4020f84:	d9003617 	ldw	r4,216(sp)
 4020f88:	d9403817 	ldw	r5,224(sp)
 4020f8c:	000d883a 	mov	r6,zero
 4020f90:	000f883a 	mov	r7,zero
 4020f94:	402c1b40 	call	402c1b4 <__ledf2>
 4020f98:	da003d17 	ldw	r8,244(sp)
 4020f9c:	1005e316 	blt	r2,zero,402272c <___vfprintf_internal_r+0x1de4>
 4020fa0:	df002783 	ldbu	fp,158(sp)
 4020fa4:	008011c4 	movi	r2,71
 4020fa8:	1445580e 	bge	r2,r17,402250c <___vfprintf_internal_r+0x1bc4>
 4020fac:	04000034 	movhi	r16,0
 4020fb0:	84001304 	addi	r16,r16,76
 4020fb4:	00c000c4 	movi	r3,3
 4020fb8:	00bfdfc4 	movi	r2,-129
 4020fbc:	d8c02915 	stw	r3,164(sp)
 4020fc0:	90a4703a 	and	r18,r18,r2
 4020fc4:	d8c02b15 	stw	r3,172(sp)
 4020fc8:	d8002a15 	stw	zero,168(sp)
 4020fcc:	d8003215 	stw	zero,200(sp)
 4020fd0:	00003a06 	br	40210bc <___vfprintf_internal_r+0x774>
 4020fd4:	84000214 	ori	r16,r16,8
 4020fd8:	ac400007 	ldb	r17,0(r21)
 4020fdc:	003ebc06 	br	4020ad0 <__flash_rwdata_start+0xffff07bc>
 4020fe0:	8025883a 	mov	r18,r16
 4020fe4:	dc002903 	ldbu	r16,164(sp)
 4020fe8:	e011883a 	mov	r8,fp
 4020fec:	84003fcc 	andi	r16,r16,255
 4020ff0:	8007001e 	bne	r16,zero,4022bf4 <___vfprintf_internal_r+0x22ac>
 4020ff4:	94800414 	ori	r18,r18,16
 4020ff8:	9080080c 	andi	r2,r18,32
 4020ffc:	1002fa26 	beq	r2,zero,4021be8 <___vfprintf_internal_r+0x12a0>
 4021000:	d9002e17 	ldw	r4,184(sp)
 4021004:	d9402a17 	ldw	r5,168(sp)
 4021008:	d8002785 	stb	zero,158(sp)
 402100c:	20800204 	addi	r2,r4,8
 4021010:	24c00017 	ldw	r19,0(r4)
 4021014:	25800117 	ldw	r22,4(r4)
 4021018:	2804b116 	blt	r5,zero,40222e0 <___vfprintf_internal_r+0x1998>
 402101c:	013fdfc4 	movi	r4,-129
 4021020:	9d86b03a 	or	r3,r19,r22
 4021024:	d8802e15 	stw	r2,184(sp)
 4021028:	9124703a 	and	r18,r18,r4
 402102c:	1802fb1e 	bne	r3,zero,4021c1c <___vfprintf_internal_r+0x12d4>
 4021030:	d8c02a17 	ldw	r3,168(sp)
 4021034:	0039883a 	mov	fp,zero
 4021038:	1805e526 	beq	r3,zero,40227d0 <___vfprintf_internal_r+0x1e88>
 402103c:	0027883a 	mov	r19,zero
 4021040:	002d883a 	mov	r22,zero
 4021044:	dc001e04 	addi	r16,sp,120
 4021048:	9806d0fa 	srli	r3,r19,3
 402104c:	b008977a 	slli	r4,r22,29
 4021050:	b02cd0fa 	srli	r22,r22,3
 4021054:	9cc001cc 	andi	r19,r19,7
 4021058:	98800c04 	addi	r2,r19,48
 402105c:	843fffc4 	addi	r16,r16,-1
 4021060:	20e6b03a 	or	r19,r4,r3
 4021064:	80800005 	stb	r2,0(r16)
 4021068:	9d86b03a 	or	r3,r19,r22
 402106c:	183ff61e 	bne	r3,zero,4021048 <__flash_rwdata_start+0xffff0d34>
 4021070:	90c0004c 	andi	r3,r18,1
 4021074:	18014126 	beq	r3,zero,402157c <___vfprintf_internal_r+0xc34>
 4021078:	10803fcc 	andi	r2,r2,255
 402107c:	1080201c 	xori	r2,r2,128
 4021080:	10bfe004 	addi	r2,r2,-128
 4021084:	00c00c04 	movi	r3,48
 4021088:	10c13c26 	beq	r2,r3,402157c <___vfprintf_internal_r+0xc34>
 402108c:	80ffffc5 	stb	r3,-1(r16)
 4021090:	d8c02817 	ldw	r3,160(sp)
 4021094:	80bfffc4 	addi	r2,r16,-1
 4021098:	1021883a 	mov	r16,r2
 402109c:	1887c83a 	sub	r3,r3,r2
 40210a0:	d8c02b15 	stw	r3,172(sp)
 40210a4:	d8802b17 	ldw	r2,172(sp)
 40210a8:	d9002a17 	ldw	r4,168(sp)
 40210ac:	1100010e 	bge	r2,r4,40210b4 <___vfprintf_internal_r+0x76c>
 40210b0:	2005883a 	mov	r2,r4
 40210b4:	d8802915 	stw	r2,164(sp)
 40210b8:	d8003215 	stw	zero,200(sp)
 40210bc:	e7003fcc 	andi	fp,fp,255
 40210c0:	e700201c 	xori	fp,fp,128
 40210c4:	e73fe004 	addi	fp,fp,-128
 40210c8:	e0000326 	beq	fp,zero,40210d8 <___vfprintf_internal_r+0x790>
 40210cc:	d8c02917 	ldw	r3,164(sp)
 40210d0:	18c00044 	addi	r3,r3,1
 40210d4:	d8c02915 	stw	r3,164(sp)
 40210d8:	90c0008c 	andi	r3,r18,2
 40210dc:	d8c02c15 	stw	r3,176(sp)
 40210e0:	18000326 	beq	r3,zero,40210f0 <___vfprintf_internal_r+0x7a8>
 40210e4:	d8c02917 	ldw	r3,164(sp)
 40210e8:	18c00084 	addi	r3,r3,2
 40210ec:	d8c02915 	stw	r3,164(sp)
 40210f0:	90c0210c 	andi	r3,r18,132
 40210f4:	d8c03015 	stw	r3,192(sp)
 40210f8:	1801c51e 	bne	r3,zero,4021810 <___vfprintf_internal_r+0xec8>
 40210fc:	d9003117 	ldw	r4,196(sp)
 4021100:	d8c02917 	ldw	r3,164(sp)
 4021104:	20e7c83a 	sub	r19,r4,r3
 4021108:	04c1c10e 	bge	zero,r19,4021810 <___vfprintf_internal_r+0xec8>
 402110c:	02400404 	movi	r9,16
 4021110:	d8c02017 	ldw	r3,128(sp)
 4021114:	d8801f17 	ldw	r2,124(sp)
 4021118:	4cc52f0e 	bge	r9,r19,40225d8 <___vfprintf_internal_r+0x1c90>
 402111c:	01400034 	movhi	r5,0
 4021120:	29402684 	addi	r5,r5,154
 4021124:	dc403b15 	stw	r17,236(sp)
 4021128:	d9403515 	stw	r5,212(sp)
 402112c:	9823883a 	mov	r17,r19
 4021130:	482d883a 	mov	r22,r9
 4021134:	9027883a 	mov	r19,r18
 4021138:	070001c4 	movi	fp,7
 402113c:	8025883a 	mov	r18,r16
 4021140:	dc002d17 	ldw	r16,180(sp)
 4021144:	00000306 	br	4021154 <___vfprintf_internal_r+0x80c>
 4021148:	8c7ffc04 	addi	r17,r17,-16
 402114c:	42000204 	addi	r8,r8,8
 4021150:	b440130e 	bge	r22,r17,40211a0 <___vfprintf_internal_r+0x858>
 4021154:	01000034 	movhi	r4,0
 4021158:	18c00404 	addi	r3,r3,16
 402115c:	10800044 	addi	r2,r2,1
 4021160:	21002684 	addi	r4,r4,154
 4021164:	41000015 	stw	r4,0(r8)
 4021168:	45800115 	stw	r22,4(r8)
 402116c:	d8c02015 	stw	r3,128(sp)
 4021170:	d8801f15 	stw	r2,124(sp)
 4021174:	e0bff40e 	bge	fp,r2,4021148 <__flash_rwdata_start+0xffff0e34>
 4021178:	d9801e04 	addi	r6,sp,120
 402117c:	b80b883a 	mov	r5,r23
 4021180:	8009883a 	mov	r4,r16
 4021184:	40276380 	call	4027638 <__sprint_r>
 4021188:	103ef31e 	bne	r2,zero,4020d58 <__flash_rwdata_start+0xffff0a44>
 402118c:	8c7ffc04 	addi	r17,r17,-16
 4021190:	d8c02017 	ldw	r3,128(sp)
 4021194:	d8801f17 	ldw	r2,124(sp)
 4021198:	da000404 	addi	r8,sp,16
 402119c:	b47fed16 	blt	r22,r17,4021154 <__flash_rwdata_start+0xffff0e40>
 40211a0:	9021883a 	mov	r16,r18
 40211a4:	9825883a 	mov	r18,r19
 40211a8:	8827883a 	mov	r19,r17
 40211ac:	dc403b17 	ldw	r17,236(sp)
 40211b0:	d9403517 	ldw	r5,212(sp)
 40211b4:	98c7883a 	add	r3,r19,r3
 40211b8:	10800044 	addi	r2,r2,1
 40211bc:	41400015 	stw	r5,0(r8)
 40211c0:	44c00115 	stw	r19,4(r8)
 40211c4:	d8c02015 	stw	r3,128(sp)
 40211c8:	d8801f15 	stw	r2,124(sp)
 40211cc:	010001c4 	movi	r4,7
 40211d0:	2082c516 	blt	r4,r2,4021ce8 <___vfprintf_internal_r+0x13a0>
 40211d4:	df002787 	ldb	fp,158(sp)
 40211d8:	42000204 	addi	r8,r8,8
 40211dc:	e0000c26 	beq	fp,zero,4021210 <___vfprintf_internal_r+0x8c8>
 40211e0:	d8801f17 	ldw	r2,124(sp)
 40211e4:	d9002784 	addi	r4,sp,158
 40211e8:	18c00044 	addi	r3,r3,1
 40211ec:	10800044 	addi	r2,r2,1
 40211f0:	41000015 	stw	r4,0(r8)
 40211f4:	01000044 	movi	r4,1
 40211f8:	41000115 	stw	r4,4(r8)
 40211fc:	d8c02015 	stw	r3,128(sp)
 4021200:	d8801f15 	stw	r2,124(sp)
 4021204:	010001c4 	movi	r4,7
 4021208:	20825e16 	blt	r4,r2,4021b84 <___vfprintf_internal_r+0x123c>
 402120c:	42000204 	addi	r8,r8,8
 4021210:	d8802c17 	ldw	r2,176(sp)
 4021214:	10000c26 	beq	r2,zero,4021248 <___vfprintf_internal_r+0x900>
 4021218:	d8801f17 	ldw	r2,124(sp)
 402121c:	d9002704 	addi	r4,sp,156
 4021220:	18c00084 	addi	r3,r3,2
 4021224:	10800044 	addi	r2,r2,1
 4021228:	41000015 	stw	r4,0(r8)
 402122c:	01000084 	movi	r4,2
 4021230:	41000115 	stw	r4,4(r8)
 4021234:	d8c02015 	stw	r3,128(sp)
 4021238:	d8801f15 	stw	r2,124(sp)
 402123c:	010001c4 	movi	r4,7
 4021240:	20825816 	blt	r4,r2,4021ba4 <___vfprintf_internal_r+0x125c>
 4021244:	42000204 	addi	r8,r8,8
 4021248:	d9003017 	ldw	r4,192(sp)
 402124c:	00802004 	movi	r2,128
 4021250:	2081bb26 	beq	r4,r2,4021940 <___vfprintf_internal_r+0xff8>
 4021254:	d9402a17 	ldw	r5,168(sp)
 4021258:	d8802b17 	ldw	r2,172(sp)
 402125c:	28adc83a 	sub	r22,r5,r2
 4021260:	0580310e 	bge	zero,r22,4021328 <___vfprintf_internal_r+0x9e0>
 4021264:	07000404 	movi	fp,16
 4021268:	d8801f17 	ldw	r2,124(sp)
 402126c:	e584360e 	bge	fp,r22,4022348 <___vfprintf_internal_r+0x1a00>
 4021270:	01400034 	movhi	r5,0
 4021274:	29402284 	addi	r5,r5,138
 4021278:	dc402a15 	stw	r17,168(sp)
 402127c:	d9402c15 	stw	r5,176(sp)
 4021280:	b023883a 	mov	r17,r22
 4021284:	04c001c4 	movi	r19,7
 4021288:	a82d883a 	mov	r22,r21
 402128c:	902b883a 	mov	r21,r18
 4021290:	8025883a 	mov	r18,r16
 4021294:	dc002d17 	ldw	r16,180(sp)
 4021298:	00000306 	br	40212a8 <___vfprintf_internal_r+0x960>
 402129c:	8c7ffc04 	addi	r17,r17,-16
 40212a0:	42000204 	addi	r8,r8,8
 40212a4:	e440110e 	bge	fp,r17,40212ec <___vfprintf_internal_r+0x9a4>
 40212a8:	18c00404 	addi	r3,r3,16
 40212ac:	10800044 	addi	r2,r2,1
 40212b0:	45000015 	stw	r20,0(r8)
 40212b4:	47000115 	stw	fp,4(r8)
 40212b8:	d8c02015 	stw	r3,128(sp)
 40212bc:	d8801f15 	stw	r2,124(sp)
 40212c0:	98bff60e 	bge	r19,r2,402129c <__flash_rwdata_start+0xffff0f88>
 40212c4:	d9801e04 	addi	r6,sp,120
 40212c8:	b80b883a 	mov	r5,r23
 40212cc:	8009883a 	mov	r4,r16
 40212d0:	40276380 	call	4027638 <__sprint_r>
 40212d4:	103ea01e 	bne	r2,zero,4020d58 <__flash_rwdata_start+0xffff0a44>
 40212d8:	8c7ffc04 	addi	r17,r17,-16
 40212dc:	d8c02017 	ldw	r3,128(sp)
 40212e0:	d8801f17 	ldw	r2,124(sp)
 40212e4:	da000404 	addi	r8,sp,16
 40212e8:	e47fef16 	blt	fp,r17,40212a8 <__flash_rwdata_start+0xffff0f94>
 40212ec:	9021883a 	mov	r16,r18
 40212f0:	a825883a 	mov	r18,r21
 40212f4:	b02b883a 	mov	r21,r22
 40212f8:	882d883a 	mov	r22,r17
 40212fc:	dc402a17 	ldw	r17,168(sp)
 4021300:	d9002c17 	ldw	r4,176(sp)
 4021304:	1d87883a 	add	r3,r3,r22
 4021308:	10800044 	addi	r2,r2,1
 402130c:	41000015 	stw	r4,0(r8)
 4021310:	45800115 	stw	r22,4(r8)
 4021314:	d8c02015 	stw	r3,128(sp)
 4021318:	d8801f15 	stw	r2,124(sp)
 402131c:	010001c4 	movi	r4,7
 4021320:	20821016 	blt	r4,r2,4021b64 <___vfprintf_internal_r+0x121c>
 4021324:	42000204 	addi	r8,r8,8
 4021328:	9080400c 	andi	r2,r18,256
 402132c:	10013a1e 	bne	r2,zero,4021818 <___vfprintf_internal_r+0xed0>
 4021330:	d9402b17 	ldw	r5,172(sp)
 4021334:	d8801f17 	ldw	r2,124(sp)
 4021338:	44000015 	stw	r16,0(r8)
 402133c:	1947883a 	add	r3,r3,r5
 4021340:	10800044 	addi	r2,r2,1
 4021344:	41400115 	stw	r5,4(r8)
 4021348:	d8c02015 	stw	r3,128(sp)
 402134c:	d8801f15 	stw	r2,124(sp)
 4021350:	010001c4 	movi	r4,7
 4021354:	2081f516 	blt	r4,r2,4021b2c <___vfprintf_internal_r+0x11e4>
 4021358:	42000204 	addi	r8,r8,8
 402135c:	9480010c 	andi	r18,r18,4
 4021360:	90003226 	beq	r18,zero,402142c <___vfprintf_internal_r+0xae4>
 4021364:	d9403117 	ldw	r5,196(sp)
 4021368:	d8802917 	ldw	r2,164(sp)
 402136c:	28a1c83a 	sub	r16,r5,r2
 4021370:	04002e0e 	bge	zero,r16,402142c <___vfprintf_internal_r+0xae4>
 4021374:	04400404 	movi	r17,16
 4021378:	d8801f17 	ldw	r2,124(sp)
 402137c:	8c04c40e 	bge	r17,r16,4022690 <___vfprintf_internal_r+0x1d48>
 4021380:	01400034 	movhi	r5,0
 4021384:	29402684 	addi	r5,r5,154
 4021388:	d9403515 	stw	r5,212(sp)
 402138c:	048001c4 	movi	r18,7
 4021390:	dcc02d17 	ldw	r19,180(sp)
 4021394:	00000306 	br	40213a4 <___vfprintf_internal_r+0xa5c>
 4021398:	843ffc04 	addi	r16,r16,-16
 402139c:	42000204 	addi	r8,r8,8
 40213a0:	8c00130e 	bge	r17,r16,40213f0 <___vfprintf_internal_r+0xaa8>
 40213a4:	01000034 	movhi	r4,0
 40213a8:	18c00404 	addi	r3,r3,16
 40213ac:	10800044 	addi	r2,r2,1
 40213b0:	21002684 	addi	r4,r4,154
 40213b4:	41000015 	stw	r4,0(r8)
 40213b8:	44400115 	stw	r17,4(r8)
 40213bc:	d8c02015 	stw	r3,128(sp)
 40213c0:	d8801f15 	stw	r2,124(sp)
 40213c4:	90bff40e 	bge	r18,r2,4021398 <__flash_rwdata_start+0xffff1084>
 40213c8:	d9801e04 	addi	r6,sp,120
 40213cc:	b80b883a 	mov	r5,r23
 40213d0:	9809883a 	mov	r4,r19
 40213d4:	40276380 	call	4027638 <__sprint_r>
 40213d8:	103e5f1e 	bne	r2,zero,4020d58 <__flash_rwdata_start+0xffff0a44>
 40213dc:	843ffc04 	addi	r16,r16,-16
 40213e0:	d8c02017 	ldw	r3,128(sp)
 40213e4:	d8801f17 	ldw	r2,124(sp)
 40213e8:	da000404 	addi	r8,sp,16
 40213ec:	8c3fed16 	blt	r17,r16,40213a4 <__flash_rwdata_start+0xffff1090>
 40213f0:	d9403517 	ldw	r5,212(sp)
 40213f4:	1c07883a 	add	r3,r3,r16
 40213f8:	10800044 	addi	r2,r2,1
 40213fc:	41400015 	stw	r5,0(r8)
 4021400:	44000115 	stw	r16,4(r8)
 4021404:	d8c02015 	stw	r3,128(sp)
 4021408:	d8801f15 	stw	r2,124(sp)
 402140c:	010001c4 	movi	r4,7
 4021410:	2080060e 	bge	r4,r2,402142c <___vfprintf_internal_r+0xae4>
 4021414:	d9002d17 	ldw	r4,180(sp)
 4021418:	d9801e04 	addi	r6,sp,120
 402141c:	b80b883a 	mov	r5,r23
 4021420:	40276380 	call	4027638 <__sprint_r>
 4021424:	103e4c1e 	bne	r2,zero,4020d58 <__flash_rwdata_start+0xffff0a44>
 4021428:	d8c02017 	ldw	r3,128(sp)
 402142c:	d8803117 	ldw	r2,196(sp)
 4021430:	d9002917 	ldw	r4,164(sp)
 4021434:	1100010e 	bge	r2,r4,402143c <___vfprintf_internal_r+0xaf4>
 4021438:	2005883a 	mov	r2,r4
 402143c:	d9402f17 	ldw	r5,188(sp)
 4021440:	288b883a 	add	r5,r5,r2
 4021444:	d9402f15 	stw	r5,188(sp)
 4021448:	1801c01e 	bne	r3,zero,4021b4c <___vfprintf_internal_r+0x1204>
 402144c:	a8800007 	ldb	r2,0(r21)
 4021450:	d8001f15 	stw	zero,124(sp)
 4021454:	da000404 	addi	r8,sp,16
 4021458:	103d751e 	bne	r2,zero,4020a30 <__flash_rwdata_start+0xffff071c>
 402145c:	a823883a 	mov	r17,r21
 4021460:	003d8b06 	br	4020a90 <__flash_rwdata_start+0xffff077c>
 4021464:	8025883a 	mov	r18,r16
 4021468:	dc002903 	ldbu	r16,164(sp)
 402146c:	e011883a 	mov	r8,fp
 4021470:	84003fcc 	andi	r16,r16,255
 4021474:	8005e51e 	bne	r16,zero,4022c0c <___vfprintf_internal_r+0x22c4>
 4021478:	94800414 	ori	r18,r18,16
 402147c:	9080080c 	andi	r2,r18,32
 4021480:	10022b26 	beq	r2,zero,4021d30 <___vfprintf_internal_r+0x13e8>
 4021484:	d9002e17 	ldw	r4,184(sp)
 4021488:	d9402a17 	ldw	r5,168(sp)
 402148c:	d8002785 	stb	zero,158(sp)
 4021490:	20c00204 	addi	r3,r4,8
 4021494:	24c00017 	ldw	r19,0(r4)
 4021498:	25800117 	ldw	r22,4(r4)
 402149c:	28042e16 	blt	r5,zero,4022558 <___vfprintf_internal_r+0x1c10>
 40214a0:	013fdfc4 	movi	r4,-129
 40214a4:	9d84b03a 	or	r2,r19,r22
 40214a8:	d8c02e15 	stw	r3,184(sp)
 40214ac:	9124703a 	and	r18,r18,r4
 40214b0:	0039883a 	mov	fp,zero
 40214b4:	103e801e 	bne	r2,zero,4020eb8 <__flash_rwdata_start+0xffff0ba4>
 40214b8:	d9002a17 	ldw	r4,168(sp)
 40214bc:	2002e01e 	bne	r4,zero,4022040 <___vfprintf_internal_r+0x16f8>
 40214c0:	d8002a15 	stw	zero,168(sp)
 40214c4:	d8002b15 	stw	zero,172(sp)
 40214c8:	dc001e04 	addi	r16,sp,120
 40214cc:	003ef506 	br	40210a4 <__flash_rwdata_start+0xffff0d90>
 40214d0:	8025883a 	mov	r18,r16
 40214d4:	dc002903 	ldbu	r16,164(sp)
 40214d8:	e011883a 	mov	r8,fp
 40214dc:	84003fcc 	andi	r16,r16,255
 40214e0:	8005ba1e 	bne	r16,zero,4022bcc <___vfprintf_internal_r+0x2284>
 40214e4:	01000034 	movhi	r4,0
 40214e8:	21001604 	addi	r4,r4,88
 40214ec:	d9003915 	stw	r4,228(sp)
 40214f0:	9080080c 	andi	r2,r18,32
 40214f4:	10006126 	beq	r2,zero,402167c <___vfprintf_internal_r+0xd34>
 40214f8:	d9402e17 	ldw	r5,184(sp)
 40214fc:	2cc00017 	ldw	r19,0(r5)
 4021500:	2d800117 	ldw	r22,4(r5)
 4021504:	29400204 	addi	r5,r5,8
 4021508:	d9402e15 	stw	r5,184(sp)
 402150c:	9080004c 	andi	r2,r18,1
 4021510:	1001ac26 	beq	r2,zero,4021bc4 <___vfprintf_internal_r+0x127c>
 4021514:	9d84b03a 	or	r2,r19,r22
 4021518:	10038526 	beq	r2,zero,4022330 <___vfprintf_internal_r+0x19e8>
 402151c:	d8c02a17 	ldw	r3,168(sp)
 4021520:	00800c04 	movi	r2,48
 4021524:	d8802705 	stb	r2,156(sp)
 4021528:	dc402745 	stb	r17,157(sp)
 402152c:	d8002785 	stb	zero,158(sp)
 4021530:	90800094 	ori	r2,r18,2
 4021534:	18047916 	blt	r3,zero,402271c <___vfprintf_internal_r+0x1dd4>
 4021538:	00bfdfc4 	movi	r2,-129
 402153c:	90a4703a 	and	r18,r18,r2
 4021540:	94800094 	ori	r18,r18,2
 4021544:	0039883a 	mov	fp,zero
 4021548:	d9003917 	ldw	r4,228(sp)
 402154c:	dc001e04 	addi	r16,sp,120
 4021550:	988003cc 	andi	r2,r19,15
 4021554:	b006973a 	slli	r3,r22,28
 4021558:	2085883a 	add	r2,r4,r2
 402155c:	9826d13a 	srli	r19,r19,4
 4021560:	10800003 	ldbu	r2,0(r2)
 4021564:	b02cd13a 	srli	r22,r22,4
 4021568:	843fffc4 	addi	r16,r16,-1
 402156c:	1ce6b03a 	or	r19,r3,r19
 4021570:	80800005 	stb	r2,0(r16)
 4021574:	9d84b03a 	or	r2,r19,r22
 4021578:	103ff51e 	bne	r2,zero,4021550 <__flash_rwdata_start+0xffff123c>
 402157c:	d8c02817 	ldw	r3,160(sp)
 4021580:	1c07c83a 	sub	r3,r3,r16
 4021584:	d8c02b15 	stw	r3,172(sp)
 4021588:	003ec606 	br	40210a4 <__flash_rwdata_start+0xffff0d90>
 402158c:	8025883a 	mov	r18,r16
 4021590:	dc002903 	ldbu	r16,164(sp)
 4021594:	e011883a 	mov	r8,fp
 4021598:	84003fcc 	andi	r16,r16,255
 402159c:	803e9626 	beq	r16,zero,4020ff8 <__flash_rwdata_start+0xffff0ce4>
 40215a0:	d8c02b03 	ldbu	r3,172(sp)
 40215a4:	d8c02785 	stb	r3,158(sp)
 40215a8:	003e9306 	br	4020ff8 <__flash_rwdata_start+0xffff0ce4>
 40215ac:	00c00044 	movi	r3,1
 40215b0:	d8c02905 	stb	r3,164(sp)
 40215b4:	00c00ac4 	movi	r3,43
 40215b8:	d8c02b05 	stb	r3,172(sp)
 40215bc:	ac400007 	ldb	r17,0(r21)
 40215c0:	003d4306 	br	4020ad0 <__flash_rwdata_start+0xffff07bc>
 40215c4:	84000814 	ori	r16,r16,32
 40215c8:	ac400007 	ldb	r17,0(r21)
 40215cc:	003d4006 	br	4020ad0 <__flash_rwdata_start+0xffff07bc>
 40215d0:	d8802e17 	ldw	r2,184(sp)
 40215d4:	8025883a 	mov	r18,r16
 40215d8:	d8002785 	stb	zero,158(sp)
 40215dc:	14000017 	ldw	r16,0(r2)
 40215e0:	e011883a 	mov	r8,fp
 40215e4:	14c00104 	addi	r19,r2,4
 40215e8:	80042d26 	beq	r16,zero,40226a0 <___vfprintf_internal_r+0x1d58>
 40215ec:	d8c02a17 	ldw	r3,168(sp)
 40215f0:	1803e416 	blt	r3,zero,4022584 <___vfprintf_internal_r+0x1c3c>
 40215f4:	180d883a 	mov	r6,r3
 40215f8:	000b883a 	mov	r5,zero
 40215fc:	8009883a 	mov	r4,r16
 4021600:	df003d15 	stw	fp,244(sp)
 4021604:	4025db80 	call	4025db8 <memchr>
 4021608:	da003d17 	ldw	r8,244(sp)
 402160c:	10046826 	beq	r2,zero,40227b0 <___vfprintf_internal_r+0x1e68>
 4021610:	1405c83a 	sub	r2,r2,r16
 4021614:	d8802b15 	stw	r2,172(sp)
 4021618:	1003e016 	blt	r2,zero,402259c <___vfprintf_internal_r+0x1c54>
 402161c:	df002783 	ldbu	fp,158(sp)
 4021620:	d8802915 	stw	r2,164(sp)
 4021624:	dcc02e15 	stw	r19,184(sp)
 4021628:	d8002a15 	stw	zero,168(sp)
 402162c:	d8003215 	stw	zero,200(sp)
 4021630:	003ea206 	br	40210bc <__flash_rwdata_start+0xffff0da8>
 4021634:	8025883a 	mov	r18,r16
 4021638:	dc002903 	ldbu	r16,164(sp)
 402163c:	e011883a 	mov	r8,fp
 4021640:	84003fcc 	andi	r16,r16,255
 4021644:	803f8d26 	beq	r16,zero,402147c <__flash_rwdata_start+0xffff1168>
 4021648:	d8c02b03 	ldbu	r3,172(sp)
 402164c:	d8c02785 	stb	r3,158(sp)
 4021650:	003f8a06 	br	402147c <__flash_rwdata_start+0xffff1168>
 4021654:	8025883a 	mov	r18,r16
 4021658:	dc002903 	ldbu	r16,164(sp)
 402165c:	e011883a 	mov	r8,fp
 4021660:	84003fcc 	andi	r16,r16,255
 4021664:	8005661e 	bne	r16,zero,4022c00 <___vfprintf_internal_r+0x22b8>
 4021668:	01000034 	movhi	r4,0
 402166c:	21001b04 	addi	r4,r4,108
 4021670:	d9003915 	stw	r4,228(sp)
 4021674:	9080080c 	andi	r2,r18,32
 4021678:	103f9f1e 	bne	r2,zero,40214f8 <__flash_rwdata_start+0xffff11e4>
 402167c:	9080040c 	andi	r2,r18,16
 4021680:	1002eb26 	beq	r2,zero,4022230 <___vfprintf_internal_r+0x18e8>
 4021684:	d8802e17 	ldw	r2,184(sp)
 4021688:	002d883a 	mov	r22,zero
 402168c:	14c00017 	ldw	r19,0(r2)
 4021690:	10800104 	addi	r2,r2,4
 4021694:	d8802e15 	stw	r2,184(sp)
 4021698:	003f9c06 	br	402150c <__flash_rwdata_start+0xffff11f8>
 402169c:	d8802b07 	ldb	r2,172(sp)
 40216a0:	1002e11e 	bne	r2,zero,4022228 <___vfprintf_internal_r+0x18e0>
 40216a4:	00c00044 	movi	r3,1
 40216a8:	d8c02905 	stb	r3,164(sp)
 40216ac:	00c00804 	movi	r3,32
 40216b0:	d8c02b05 	stb	r3,172(sp)
 40216b4:	ac400007 	ldb	r17,0(r21)
 40216b8:	003d0506 	br	4020ad0 <__flash_rwdata_start+0xffff07bc>
 40216bc:	84000054 	ori	r16,r16,1
 40216c0:	ac400007 	ldb	r17,0(r21)
 40216c4:	003d0206 	br	4020ad0 <__flash_rwdata_start+0xffff07bc>
 40216c8:	8025883a 	mov	r18,r16
 40216cc:	dc002903 	ldbu	r16,164(sp)
 40216d0:	e011883a 	mov	r8,fp
 40216d4:	84003fcc 	andi	r16,r16,255
 40216d8:	803de726 	beq	r16,zero,4020e78 <__flash_rwdata_start+0xffff0b64>
 40216dc:	d8c02b03 	ldbu	r3,172(sp)
 40216e0:	d8c02785 	stb	r3,158(sp)
 40216e4:	003de406 	br	4020e78 <__flash_rwdata_start+0xffff0b64>
 40216e8:	84001014 	ori	r16,r16,64
 40216ec:	ac400007 	ldb	r17,0(r21)
 40216f0:	003cf706 	br	4020ad0 <__flash_rwdata_start+0xffff07bc>
 40216f4:	ac400007 	ldb	r17,0(r21)
 40216f8:	00801b04 	movi	r2,108
 40216fc:	88838f26 	beq	r17,r2,402253c <___vfprintf_internal_r+0x1bf4>
 4021700:	84000414 	ori	r16,r16,16
 4021704:	003cf206 	br	4020ad0 <__flash_rwdata_start+0xffff07bc>
 4021708:	8025883a 	mov	r18,r16
 402170c:	dc002903 	ldbu	r16,164(sp)
 4021710:	e011883a 	mov	r8,fp
 4021714:	84003fcc 	andi	r16,r16,255
 4021718:	80053f1e 	bne	r16,zero,4022c18 <___vfprintf_internal_r+0x22d0>
 402171c:	9080080c 	andi	r2,r18,32
 4021720:	1002d226 	beq	r2,zero,402226c <___vfprintf_internal_r+0x1924>
 4021724:	d9002e17 	ldw	r4,184(sp)
 4021728:	d9402f17 	ldw	r5,188(sp)
 402172c:	20800017 	ldw	r2,0(r4)
 4021730:	2807d7fa 	srai	r3,r5,31
 4021734:	21000104 	addi	r4,r4,4
 4021738:	d9002e15 	stw	r4,184(sp)
 402173c:	11400015 	stw	r5,0(r2)
 4021740:	10c00115 	stw	r3,4(r2)
 4021744:	003cb806 	br	4020a28 <__flash_rwdata_start+0xffff0714>
 4021748:	d8c02e17 	ldw	r3,184(sp)
 402174c:	d9002e17 	ldw	r4,184(sp)
 4021750:	8025883a 	mov	r18,r16
 4021754:	18800017 	ldw	r2,0(r3)
 4021758:	21000104 	addi	r4,r4,4
 402175c:	00c00044 	movi	r3,1
 4021760:	e011883a 	mov	r8,fp
 4021764:	d8c02915 	stw	r3,164(sp)
 4021768:	d8002785 	stb	zero,158(sp)
 402176c:	d8801405 	stb	r2,80(sp)
 4021770:	d9002e15 	stw	r4,184(sp)
 4021774:	d8c02b15 	stw	r3,172(sp)
 4021778:	d8002a15 	stw	zero,168(sp)
 402177c:	d8003215 	stw	zero,200(sp)
 4021780:	dc001404 	addi	r16,sp,80
 4021784:	0039883a 	mov	fp,zero
 4021788:	003e5306 	br	40210d8 <__flash_rwdata_start+0xffff0dc4>
 402178c:	01000034 	movhi	r4,0
 4021790:	21001b04 	addi	r4,r4,108
 4021794:	0039883a 	mov	fp,zero
 4021798:	d9003915 	stw	r4,228(sp)
 402179c:	04401e04 	movi	r17,120
 40217a0:	003f6906 	br	4021548 <__flash_rwdata_start+0xffff1234>
 40217a4:	8025883a 	mov	r18,r16
 40217a8:	dc002903 	ldbu	r16,164(sp)
 40217ac:	e011883a 	mov	r8,fp
 40217b0:	84003fcc 	andi	r16,r16,255
 40217b4:	8005081e 	bne	r16,zero,4022bd8 <___vfprintf_internal_r+0x2290>
 40217b8:	883d6126 	beq	r17,zero,4020d40 <__flash_rwdata_start+0xffff0a2c>
 40217bc:	00c00044 	movi	r3,1
 40217c0:	d8c02915 	stw	r3,164(sp)
 40217c4:	dc401405 	stb	r17,80(sp)
 40217c8:	d8002785 	stb	zero,158(sp)
 40217cc:	003fe906 	br	4021774 <__flash_rwdata_start+0xffff1460>
 40217d0:	01400034 	movhi	r5,0
 40217d4:	29401b04 	addi	r5,r5,108
 40217d8:	d9403915 	stw	r5,228(sp)
 40217dc:	d8c02e15 	stw	r3,184(sp)
 40217e0:	1025883a 	mov	r18,r2
 40217e4:	04401e04 	movi	r17,120
 40217e8:	9d84b03a 	or	r2,r19,r22
 40217ec:	1000fc1e 	bne	r2,zero,4021be0 <___vfprintf_internal_r+0x1298>
 40217f0:	0039883a 	mov	fp,zero
 40217f4:	00800084 	movi	r2,2
 40217f8:	10803fcc 	andi	r2,r2,255
 40217fc:	00c00044 	movi	r3,1
 4021800:	10c20f26 	beq	r2,r3,4022040 <___vfprintf_internal_r+0x16f8>
 4021804:	00c00084 	movi	r3,2
 4021808:	10fd3326 	beq	r2,r3,4020cd8 <__flash_rwdata_start+0xffff09c4>
 402180c:	003e0b06 	br	402103c <__flash_rwdata_start+0xffff0d28>
 4021810:	d8c02017 	ldw	r3,128(sp)
 4021814:	003e7106 	br	40211dc <__flash_rwdata_start+0xffff0ec8>
 4021818:	00801944 	movi	r2,101
 402181c:	14407e0e 	bge	r2,r17,4021a18 <___vfprintf_internal_r+0x10d0>
 4021820:	d9003617 	ldw	r4,216(sp)
 4021824:	d9403817 	ldw	r5,224(sp)
 4021828:	000d883a 	mov	r6,zero
 402182c:	000f883a 	mov	r7,zero
 4021830:	d8c03c15 	stw	r3,240(sp)
 4021834:	da003d15 	stw	r8,244(sp)
 4021838:	402c0500 	call	402c050 <__eqdf2>
 402183c:	d8c03c17 	ldw	r3,240(sp)
 4021840:	da003d17 	ldw	r8,244(sp)
 4021844:	1000f71e 	bne	r2,zero,4021c24 <___vfprintf_internal_r+0x12dc>
 4021848:	d8801f17 	ldw	r2,124(sp)
 402184c:	01000034 	movhi	r4,0
 4021850:	21002204 	addi	r4,r4,136
 4021854:	18c00044 	addi	r3,r3,1
 4021858:	10800044 	addi	r2,r2,1
 402185c:	41000015 	stw	r4,0(r8)
 4021860:	01000044 	movi	r4,1
 4021864:	41000115 	stw	r4,4(r8)
 4021868:	d8c02015 	stw	r3,128(sp)
 402186c:	d8801f15 	stw	r2,124(sp)
 4021870:	010001c4 	movi	r4,7
 4021874:	2082b816 	blt	r4,r2,4022358 <___vfprintf_internal_r+0x1a10>
 4021878:	42000204 	addi	r8,r8,8
 402187c:	d8802617 	ldw	r2,152(sp)
 4021880:	d9403317 	ldw	r5,204(sp)
 4021884:	11400216 	blt	r2,r5,4021890 <___vfprintf_internal_r+0xf48>
 4021888:	9080004c 	andi	r2,r18,1
 402188c:	103eb326 	beq	r2,zero,402135c <__flash_rwdata_start+0xffff1048>
 4021890:	d8803717 	ldw	r2,220(sp)
 4021894:	d9003417 	ldw	r4,208(sp)
 4021898:	d9403717 	ldw	r5,220(sp)
 402189c:	1887883a 	add	r3,r3,r2
 40218a0:	d8801f17 	ldw	r2,124(sp)
 40218a4:	41000015 	stw	r4,0(r8)
 40218a8:	41400115 	stw	r5,4(r8)
 40218ac:	10800044 	addi	r2,r2,1
 40218b0:	d8c02015 	stw	r3,128(sp)
 40218b4:	d8801f15 	stw	r2,124(sp)
 40218b8:	010001c4 	movi	r4,7
 40218bc:	20832916 	blt	r4,r2,4022564 <___vfprintf_internal_r+0x1c1c>
 40218c0:	42000204 	addi	r8,r8,8
 40218c4:	d8803317 	ldw	r2,204(sp)
 40218c8:	143fffc4 	addi	r16,r2,-1
 40218cc:	043ea30e 	bge	zero,r16,402135c <__flash_rwdata_start+0xffff1048>
 40218d0:	04400404 	movi	r17,16
 40218d4:	d8801f17 	ldw	r2,124(sp)
 40218d8:	8c00880e 	bge	r17,r16,4021afc <___vfprintf_internal_r+0x11b4>
 40218dc:	01400034 	movhi	r5,0
 40218e0:	29402284 	addi	r5,r5,138
 40218e4:	d9402c15 	stw	r5,176(sp)
 40218e8:	058001c4 	movi	r22,7
 40218ec:	dcc02d17 	ldw	r19,180(sp)
 40218f0:	00000306 	br	4021900 <___vfprintf_internal_r+0xfb8>
 40218f4:	42000204 	addi	r8,r8,8
 40218f8:	843ffc04 	addi	r16,r16,-16
 40218fc:	8c00820e 	bge	r17,r16,4021b08 <___vfprintf_internal_r+0x11c0>
 4021900:	18c00404 	addi	r3,r3,16
 4021904:	10800044 	addi	r2,r2,1
 4021908:	45000015 	stw	r20,0(r8)
 402190c:	44400115 	stw	r17,4(r8)
 4021910:	d8c02015 	stw	r3,128(sp)
 4021914:	d8801f15 	stw	r2,124(sp)
 4021918:	b0bff60e 	bge	r22,r2,40218f4 <__flash_rwdata_start+0xffff15e0>
 402191c:	d9801e04 	addi	r6,sp,120
 4021920:	b80b883a 	mov	r5,r23
 4021924:	9809883a 	mov	r4,r19
 4021928:	40276380 	call	4027638 <__sprint_r>
 402192c:	103d0a1e 	bne	r2,zero,4020d58 <__flash_rwdata_start+0xffff0a44>
 4021930:	d8c02017 	ldw	r3,128(sp)
 4021934:	d8801f17 	ldw	r2,124(sp)
 4021938:	da000404 	addi	r8,sp,16
 402193c:	003fee06 	br	40218f8 <__flash_rwdata_start+0xffff15e4>
 4021940:	d9403117 	ldw	r5,196(sp)
 4021944:	d8802917 	ldw	r2,164(sp)
 4021948:	28adc83a 	sub	r22,r5,r2
 402194c:	05be410e 	bge	zero,r22,4021254 <__flash_rwdata_start+0xffff0f40>
 4021950:	07000404 	movi	fp,16
 4021954:	d8801f17 	ldw	r2,124(sp)
 4021958:	e5838f0e 	bge	fp,r22,4022798 <___vfprintf_internal_r+0x1e50>
 402195c:	01400034 	movhi	r5,0
 4021960:	29402284 	addi	r5,r5,138
 4021964:	dc403015 	stw	r17,192(sp)
 4021968:	d9402c15 	stw	r5,176(sp)
 402196c:	b023883a 	mov	r17,r22
 4021970:	04c001c4 	movi	r19,7
 4021974:	a82d883a 	mov	r22,r21
 4021978:	902b883a 	mov	r21,r18
 402197c:	8025883a 	mov	r18,r16
 4021980:	dc002d17 	ldw	r16,180(sp)
 4021984:	00000306 	br	4021994 <___vfprintf_internal_r+0x104c>
 4021988:	8c7ffc04 	addi	r17,r17,-16
 402198c:	42000204 	addi	r8,r8,8
 4021990:	e440110e 	bge	fp,r17,40219d8 <___vfprintf_internal_r+0x1090>
 4021994:	18c00404 	addi	r3,r3,16
 4021998:	10800044 	addi	r2,r2,1
 402199c:	45000015 	stw	r20,0(r8)
 40219a0:	47000115 	stw	fp,4(r8)
 40219a4:	d8c02015 	stw	r3,128(sp)
 40219a8:	d8801f15 	stw	r2,124(sp)
 40219ac:	98bff60e 	bge	r19,r2,4021988 <__flash_rwdata_start+0xffff1674>
 40219b0:	d9801e04 	addi	r6,sp,120
 40219b4:	b80b883a 	mov	r5,r23
 40219b8:	8009883a 	mov	r4,r16
 40219bc:	40276380 	call	4027638 <__sprint_r>
 40219c0:	103ce51e 	bne	r2,zero,4020d58 <__flash_rwdata_start+0xffff0a44>
 40219c4:	8c7ffc04 	addi	r17,r17,-16
 40219c8:	d8c02017 	ldw	r3,128(sp)
 40219cc:	d8801f17 	ldw	r2,124(sp)
 40219d0:	da000404 	addi	r8,sp,16
 40219d4:	e47fef16 	blt	fp,r17,4021994 <__flash_rwdata_start+0xffff1680>
 40219d8:	9021883a 	mov	r16,r18
 40219dc:	a825883a 	mov	r18,r21
 40219e0:	b02b883a 	mov	r21,r22
 40219e4:	882d883a 	mov	r22,r17
 40219e8:	dc403017 	ldw	r17,192(sp)
 40219ec:	d9002c17 	ldw	r4,176(sp)
 40219f0:	1d87883a 	add	r3,r3,r22
 40219f4:	10800044 	addi	r2,r2,1
 40219f8:	41000015 	stw	r4,0(r8)
 40219fc:	45800115 	stw	r22,4(r8)
 4021a00:	d8c02015 	stw	r3,128(sp)
 4021a04:	d8801f15 	stw	r2,124(sp)
 4021a08:	010001c4 	movi	r4,7
 4021a0c:	20818e16 	blt	r4,r2,4022048 <___vfprintf_internal_r+0x1700>
 4021a10:	42000204 	addi	r8,r8,8
 4021a14:	003e0f06 	br	4021254 <__flash_rwdata_start+0xffff0f40>
 4021a18:	d9403317 	ldw	r5,204(sp)
 4021a1c:	00800044 	movi	r2,1
 4021a20:	18c00044 	addi	r3,r3,1
 4021a24:	1141530e 	bge	r2,r5,4021f74 <___vfprintf_internal_r+0x162c>
 4021a28:	dc401f17 	ldw	r17,124(sp)
 4021a2c:	00800044 	movi	r2,1
 4021a30:	40800115 	stw	r2,4(r8)
 4021a34:	8c400044 	addi	r17,r17,1
 4021a38:	44000015 	stw	r16,0(r8)
 4021a3c:	d8c02015 	stw	r3,128(sp)
 4021a40:	dc401f15 	stw	r17,124(sp)
 4021a44:	008001c4 	movi	r2,7
 4021a48:	14416b16 	blt	r2,r17,4021ff8 <___vfprintf_internal_r+0x16b0>
 4021a4c:	42000204 	addi	r8,r8,8
 4021a50:	d8803717 	ldw	r2,220(sp)
 4021a54:	d9003417 	ldw	r4,208(sp)
 4021a58:	8c400044 	addi	r17,r17,1
 4021a5c:	10c7883a 	add	r3,r2,r3
 4021a60:	40800115 	stw	r2,4(r8)
 4021a64:	41000015 	stw	r4,0(r8)
 4021a68:	d8c02015 	stw	r3,128(sp)
 4021a6c:	dc401f15 	stw	r17,124(sp)
 4021a70:	008001c4 	movi	r2,7
 4021a74:	14416916 	blt	r2,r17,402201c <___vfprintf_internal_r+0x16d4>
 4021a78:	45800204 	addi	r22,r8,8
 4021a7c:	d9003617 	ldw	r4,216(sp)
 4021a80:	d9403817 	ldw	r5,224(sp)
 4021a84:	000d883a 	mov	r6,zero
 4021a88:	000f883a 	mov	r7,zero
 4021a8c:	d8c03c15 	stw	r3,240(sp)
 4021a90:	402c0500 	call	402c050 <__eqdf2>
 4021a94:	d8c03c17 	ldw	r3,240(sp)
 4021a98:	1000bc26 	beq	r2,zero,4021d8c <___vfprintf_internal_r+0x1444>
 4021a9c:	d9403317 	ldw	r5,204(sp)
 4021aa0:	84000044 	addi	r16,r16,1
 4021aa4:	8c400044 	addi	r17,r17,1
 4021aa8:	28bfffc4 	addi	r2,r5,-1
 4021aac:	1887883a 	add	r3,r3,r2
 4021ab0:	b0800115 	stw	r2,4(r22)
 4021ab4:	b4000015 	stw	r16,0(r22)
 4021ab8:	d8c02015 	stw	r3,128(sp)
 4021abc:	dc401f15 	stw	r17,124(sp)
 4021ac0:	008001c4 	movi	r2,7
 4021ac4:	14414316 	blt	r2,r17,4021fd4 <___vfprintf_internal_r+0x168c>
 4021ac8:	b5800204 	addi	r22,r22,8
 4021acc:	d9003a17 	ldw	r4,232(sp)
 4021ad0:	df0022c4 	addi	fp,sp,139
 4021ad4:	8c400044 	addi	r17,r17,1
 4021ad8:	20c7883a 	add	r3,r4,r3
 4021adc:	b7000015 	stw	fp,0(r22)
 4021ae0:	b1000115 	stw	r4,4(r22)
 4021ae4:	d8c02015 	stw	r3,128(sp)
 4021ae8:	dc401f15 	stw	r17,124(sp)
 4021aec:	008001c4 	movi	r2,7
 4021af0:	14400e16 	blt	r2,r17,4021b2c <___vfprintf_internal_r+0x11e4>
 4021af4:	b2000204 	addi	r8,r22,8
 4021af8:	003e1806 	br	402135c <__flash_rwdata_start+0xffff1048>
 4021afc:	01000034 	movhi	r4,0
 4021b00:	21002284 	addi	r4,r4,138
 4021b04:	d9002c15 	stw	r4,176(sp)
 4021b08:	d9002c17 	ldw	r4,176(sp)
 4021b0c:	1c07883a 	add	r3,r3,r16
 4021b10:	44000115 	stw	r16,4(r8)
 4021b14:	41000015 	stw	r4,0(r8)
 4021b18:	10800044 	addi	r2,r2,1
 4021b1c:	d8c02015 	stw	r3,128(sp)
 4021b20:	d8801f15 	stw	r2,124(sp)
 4021b24:	010001c4 	movi	r4,7
 4021b28:	20be0b0e 	bge	r4,r2,4021358 <__flash_rwdata_start+0xffff1044>
 4021b2c:	d9002d17 	ldw	r4,180(sp)
 4021b30:	d9801e04 	addi	r6,sp,120
 4021b34:	b80b883a 	mov	r5,r23
 4021b38:	40276380 	call	4027638 <__sprint_r>
 4021b3c:	103c861e 	bne	r2,zero,4020d58 <__flash_rwdata_start+0xffff0a44>
 4021b40:	d8c02017 	ldw	r3,128(sp)
 4021b44:	da000404 	addi	r8,sp,16
 4021b48:	003e0406 	br	402135c <__flash_rwdata_start+0xffff1048>
 4021b4c:	d9002d17 	ldw	r4,180(sp)
 4021b50:	d9801e04 	addi	r6,sp,120
 4021b54:	b80b883a 	mov	r5,r23
 4021b58:	40276380 	call	4027638 <__sprint_r>
 4021b5c:	103e3b26 	beq	r2,zero,402144c <__flash_rwdata_start+0xffff1138>
 4021b60:	003c7d06 	br	4020d58 <__flash_rwdata_start+0xffff0a44>
 4021b64:	d9002d17 	ldw	r4,180(sp)
 4021b68:	d9801e04 	addi	r6,sp,120
 4021b6c:	b80b883a 	mov	r5,r23
 4021b70:	40276380 	call	4027638 <__sprint_r>
 4021b74:	103c781e 	bne	r2,zero,4020d58 <__flash_rwdata_start+0xffff0a44>
 4021b78:	d8c02017 	ldw	r3,128(sp)
 4021b7c:	da000404 	addi	r8,sp,16
 4021b80:	003de906 	br	4021328 <__flash_rwdata_start+0xffff1014>
 4021b84:	d9002d17 	ldw	r4,180(sp)
 4021b88:	d9801e04 	addi	r6,sp,120
 4021b8c:	b80b883a 	mov	r5,r23
 4021b90:	40276380 	call	4027638 <__sprint_r>
 4021b94:	103c701e 	bne	r2,zero,4020d58 <__flash_rwdata_start+0xffff0a44>
 4021b98:	d8c02017 	ldw	r3,128(sp)
 4021b9c:	da000404 	addi	r8,sp,16
 4021ba0:	003d9b06 	br	4021210 <__flash_rwdata_start+0xffff0efc>
 4021ba4:	d9002d17 	ldw	r4,180(sp)
 4021ba8:	d9801e04 	addi	r6,sp,120
 4021bac:	b80b883a 	mov	r5,r23
 4021bb0:	40276380 	call	4027638 <__sprint_r>
 4021bb4:	103c681e 	bne	r2,zero,4020d58 <__flash_rwdata_start+0xffff0a44>
 4021bb8:	d8c02017 	ldw	r3,128(sp)
 4021bbc:	da000404 	addi	r8,sp,16
 4021bc0:	003da106 	br	4021248 <__flash_rwdata_start+0xffff0f34>
 4021bc4:	d9402a17 	ldw	r5,168(sp)
 4021bc8:	d8002785 	stb	zero,158(sp)
 4021bcc:	283f0616 	blt	r5,zero,40217e8 <__flash_rwdata_start+0xffff14d4>
 4021bd0:	00ffdfc4 	movi	r3,-129
 4021bd4:	9d84b03a 	or	r2,r19,r22
 4021bd8:	90e4703a 	and	r18,r18,r3
 4021bdc:	103c3b26 	beq	r2,zero,4020ccc <__flash_rwdata_start+0xffff09b8>
 4021be0:	0039883a 	mov	fp,zero
 4021be4:	003e5806 	br	4021548 <__flash_rwdata_start+0xffff1234>
 4021be8:	9080040c 	andi	r2,r18,16
 4021bec:	1001b326 	beq	r2,zero,40222bc <___vfprintf_internal_r+0x1974>
 4021bf0:	d8c02e17 	ldw	r3,184(sp)
 4021bf4:	d9002a17 	ldw	r4,168(sp)
 4021bf8:	d8002785 	stb	zero,158(sp)
 4021bfc:	18800104 	addi	r2,r3,4
 4021c00:	1cc00017 	ldw	r19,0(r3)
 4021c04:	002d883a 	mov	r22,zero
 4021c08:	2001b516 	blt	r4,zero,40222e0 <___vfprintf_internal_r+0x1998>
 4021c0c:	00ffdfc4 	movi	r3,-129
 4021c10:	d8802e15 	stw	r2,184(sp)
 4021c14:	90e4703a 	and	r18,r18,r3
 4021c18:	983d0526 	beq	r19,zero,4021030 <__flash_rwdata_start+0xffff0d1c>
 4021c1c:	0039883a 	mov	fp,zero
 4021c20:	003d0806 	br	4021044 <__flash_rwdata_start+0xffff0d30>
 4021c24:	dc402617 	ldw	r17,152(sp)
 4021c28:	0441d30e 	bge	zero,r17,4022378 <___vfprintf_internal_r+0x1a30>
 4021c2c:	dc403217 	ldw	r17,200(sp)
 4021c30:	d8803317 	ldw	r2,204(sp)
 4021c34:	1440010e 	bge	r2,r17,4021c3c <___vfprintf_internal_r+0x12f4>
 4021c38:	1023883a 	mov	r17,r2
 4021c3c:	04400a0e 	bge	zero,r17,4021c68 <___vfprintf_internal_r+0x1320>
 4021c40:	d8801f17 	ldw	r2,124(sp)
 4021c44:	1c47883a 	add	r3,r3,r17
 4021c48:	44000015 	stw	r16,0(r8)
 4021c4c:	10800044 	addi	r2,r2,1
 4021c50:	44400115 	stw	r17,4(r8)
 4021c54:	d8c02015 	stw	r3,128(sp)
 4021c58:	d8801f15 	stw	r2,124(sp)
 4021c5c:	010001c4 	movi	r4,7
 4021c60:	20826516 	blt	r4,r2,40225f8 <___vfprintf_internal_r+0x1cb0>
 4021c64:	42000204 	addi	r8,r8,8
 4021c68:	88026116 	blt	r17,zero,40225f0 <___vfprintf_internal_r+0x1ca8>
 4021c6c:	d9003217 	ldw	r4,200(sp)
 4021c70:	2463c83a 	sub	r17,r4,r17
 4021c74:	04407b0e 	bge	zero,r17,4021e64 <___vfprintf_internal_r+0x151c>
 4021c78:	05800404 	movi	r22,16
 4021c7c:	d8801f17 	ldw	r2,124(sp)
 4021c80:	b4419d0e 	bge	r22,r17,40222f8 <___vfprintf_internal_r+0x19b0>
 4021c84:	01000034 	movhi	r4,0
 4021c88:	21002284 	addi	r4,r4,138
 4021c8c:	d9002c15 	stw	r4,176(sp)
 4021c90:	070001c4 	movi	fp,7
 4021c94:	dcc02d17 	ldw	r19,180(sp)
 4021c98:	00000306 	br	4021ca8 <___vfprintf_internal_r+0x1360>
 4021c9c:	42000204 	addi	r8,r8,8
 4021ca0:	8c7ffc04 	addi	r17,r17,-16
 4021ca4:	b441970e 	bge	r22,r17,4022304 <___vfprintf_internal_r+0x19bc>
 4021ca8:	18c00404 	addi	r3,r3,16
 4021cac:	10800044 	addi	r2,r2,1
 4021cb0:	45000015 	stw	r20,0(r8)
 4021cb4:	45800115 	stw	r22,4(r8)
 4021cb8:	d8c02015 	stw	r3,128(sp)
 4021cbc:	d8801f15 	stw	r2,124(sp)
 4021cc0:	e0bff60e 	bge	fp,r2,4021c9c <__flash_rwdata_start+0xffff1988>
 4021cc4:	d9801e04 	addi	r6,sp,120
 4021cc8:	b80b883a 	mov	r5,r23
 4021ccc:	9809883a 	mov	r4,r19
 4021cd0:	40276380 	call	4027638 <__sprint_r>
 4021cd4:	103c201e 	bne	r2,zero,4020d58 <__flash_rwdata_start+0xffff0a44>
 4021cd8:	d8c02017 	ldw	r3,128(sp)
 4021cdc:	d8801f17 	ldw	r2,124(sp)
 4021ce0:	da000404 	addi	r8,sp,16
 4021ce4:	003fee06 	br	4021ca0 <__flash_rwdata_start+0xffff198c>
 4021ce8:	d9002d17 	ldw	r4,180(sp)
 4021cec:	d9801e04 	addi	r6,sp,120
 4021cf0:	b80b883a 	mov	r5,r23
 4021cf4:	40276380 	call	4027638 <__sprint_r>
 4021cf8:	103c171e 	bne	r2,zero,4020d58 <__flash_rwdata_start+0xffff0a44>
 4021cfc:	d8c02017 	ldw	r3,128(sp)
 4021d00:	df002787 	ldb	fp,158(sp)
 4021d04:	da000404 	addi	r8,sp,16
 4021d08:	003d3406 	br	40211dc <__flash_rwdata_start+0xffff0ec8>
 4021d0c:	9080040c 	andi	r2,r18,16
 4021d10:	10016126 	beq	r2,zero,4022298 <___vfprintf_internal_r+0x1950>
 4021d14:	d9402e17 	ldw	r5,184(sp)
 4021d18:	2cc00017 	ldw	r19,0(r5)
 4021d1c:	29400104 	addi	r5,r5,4
 4021d20:	d9402e15 	stw	r5,184(sp)
 4021d24:	982dd7fa 	srai	r22,r19,31
 4021d28:	b005883a 	mov	r2,r22
 4021d2c:	003c5a06 	br	4020e98 <__flash_rwdata_start+0xffff0b84>
 4021d30:	9080040c 	andi	r2,r18,16
 4021d34:	10003526 	beq	r2,zero,4021e0c <___vfprintf_internal_r+0x14c4>
 4021d38:	d8c02e17 	ldw	r3,184(sp)
 4021d3c:	d9002a17 	ldw	r4,168(sp)
 4021d40:	d8002785 	stb	zero,158(sp)
 4021d44:	18800104 	addi	r2,r3,4
 4021d48:	1cc00017 	ldw	r19,0(r3)
 4021d4c:	002d883a 	mov	r22,zero
 4021d50:	20003716 	blt	r4,zero,4021e30 <___vfprintf_internal_r+0x14e8>
 4021d54:	00ffdfc4 	movi	r3,-129
 4021d58:	d8802e15 	stw	r2,184(sp)
 4021d5c:	90e4703a 	and	r18,r18,r3
 4021d60:	0039883a 	mov	fp,zero
 4021d64:	983dd426 	beq	r19,zero,40214b8 <__flash_rwdata_start+0xffff11a4>
 4021d68:	00800244 	movi	r2,9
 4021d6c:	14fc5336 	bltu	r2,r19,4020ebc <__flash_rwdata_start+0xffff0ba8>
 4021d70:	d8c02817 	ldw	r3,160(sp)
 4021d74:	dc001dc4 	addi	r16,sp,119
 4021d78:	9cc00c04 	addi	r19,r19,48
 4021d7c:	1c07c83a 	sub	r3,r3,r16
 4021d80:	dcc01dc5 	stb	r19,119(sp)
 4021d84:	d8c02b15 	stw	r3,172(sp)
 4021d88:	003cc606 	br	40210a4 <__flash_rwdata_start+0xffff0d90>
 4021d8c:	d8803317 	ldw	r2,204(sp)
 4021d90:	143fffc4 	addi	r16,r2,-1
 4021d94:	043f4d0e 	bge	zero,r16,4021acc <__flash_rwdata_start+0xffff17b8>
 4021d98:	07000404 	movi	fp,16
 4021d9c:	e400810e 	bge	fp,r16,4021fa4 <___vfprintf_internal_r+0x165c>
 4021da0:	01400034 	movhi	r5,0
 4021da4:	29402284 	addi	r5,r5,138
 4021da8:	d9402c15 	stw	r5,176(sp)
 4021dac:	01c001c4 	movi	r7,7
 4021db0:	dcc02d17 	ldw	r19,180(sp)
 4021db4:	00000306 	br	4021dc4 <___vfprintf_internal_r+0x147c>
 4021db8:	b5800204 	addi	r22,r22,8
 4021dbc:	843ffc04 	addi	r16,r16,-16
 4021dc0:	e4007b0e 	bge	fp,r16,4021fb0 <___vfprintf_internal_r+0x1668>
 4021dc4:	18c00404 	addi	r3,r3,16
 4021dc8:	8c400044 	addi	r17,r17,1
 4021dcc:	b5000015 	stw	r20,0(r22)
 4021dd0:	b7000115 	stw	fp,4(r22)
 4021dd4:	d8c02015 	stw	r3,128(sp)
 4021dd8:	dc401f15 	stw	r17,124(sp)
 4021ddc:	3c7ff60e 	bge	r7,r17,4021db8 <__flash_rwdata_start+0xffff1aa4>
 4021de0:	d9801e04 	addi	r6,sp,120
 4021de4:	b80b883a 	mov	r5,r23
 4021de8:	9809883a 	mov	r4,r19
 4021dec:	d9c03c15 	stw	r7,240(sp)
 4021df0:	40276380 	call	4027638 <__sprint_r>
 4021df4:	d9c03c17 	ldw	r7,240(sp)
 4021df8:	103bd71e 	bne	r2,zero,4020d58 <__flash_rwdata_start+0xffff0a44>
 4021dfc:	d8c02017 	ldw	r3,128(sp)
 4021e00:	dc401f17 	ldw	r17,124(sp)
 4021e04:	dd800404 	addi	r22,sp,16
 4021e08:	003fec06 	br	4021dbc <__flash_rwdata_start+0xffff1aa8>
 4021e0c:	9080100c 	andi	r2,r18,64
 4021e10:	d8002785 	stb	zero,158(sp)
 4021e14:	10010e26 	beq	r2,zero,4022250 <___vfprintf_internal_r+0x1908>
 4021e18:	d9402e17 	ldw	r5,184(sp)
 4021e1c:	d8c02a17 	ldw	r3,168(sp)
 4021e20:	002d883a 	mov	r22,zero
 4021e24:	28800104 	addi	r2,r5,4
 4021e28:	2cc0000b 	ldhu	r19,0(r5)
 4021e2c:	183fc90e 	bge	r3,zero,4021d54 <__flash_rwdata_start+0xffff1a40>
 4021e30:	d8802e15 	stw	r2,184(sp)
 4021e34:	0039883a 	mov	fp,zero
 4021e38:	9d84b03a 	or	r2,r19,r22
 4021e3c:	103c1e1e 	bne	r2,zero,4020eb8 <__flash_rwdata_start+0xffff0ba4>
 4021e40:	00800044 	movi	r2,1
 4021e44:	003e6c06 	br	40217f8 <__flash_rwdata_start+0xffff14e4>
 4021e48:	d9002d17 	ldw	r4,180(sp)
 4021e4c:	d9801e04 	addi	r6,sp,120
 4021e50:	b80b883a 	mov	r5,r23
 4021e54:	40276380 	call	4027638 <__sprint_r>
 4021e58:	103bbf1e 	bne	r2,zero,4020d58 <__flash_rwdata_start+0xffff0a44>
 4021e5c:	d8c02017 	ldw	r3,128(sp)
 4021e60:	da000404 	addi	r8,sp,16
 4021e64:	d9003217 	ldw	r4,200(sp)
 4021e68:	d8802617 	ldw	r2,152(sp)
 4021e6c:	d9403317 	ldw	r5,204(sp)
 4021e70:	8123883a 	add	r17,r16,r4
 4021e74:	11400216 	blt	r2,r5,4021e80 <___vfprintf_internal_r+0x1538>
 4021e78:	9100004c 	andi	r4,r18,1
 4021e7c:	20000d26 	beq	r4,zero,4021eb4 <___vfprintf_internal_r+0x156c>
 4021e80:	d9003717 	ldw	r4,220(sp)
 4021e84:	d9403417 	ldw	r5,208(sp)
 4021e88:	1907883a 	add	r3,r3,r4
 4021e8c:	d9001f17 	ldw	r4,124(sp)
 4021e90:	41400015 	stw	r5,0(r8)
 4021e94:	d9403717 	ldw	r5,220(sp)
 4021e98:	21000044 	addi	r4,r4,1
 4021e9c:	d8c02015 	stw	r3,128(sp)
 4021ea0:	41400115 	stw	r5,4(r8)
 4021ea4:	d9001f15 	stw	r4,124(sp)
 4021ea8:	014001c4 	movi	r5,7
 4021eac:	2901e816 	blt	r5,r4,4022650 <___vfprintf_internal_r+0x1d08>
 4021eb0:	42000204 	addi	r8,r8,8
 4021eb4:	d9003317 	ldw	r4,204(sp)
 4021eb8:	8121883a 	add	r16,r16,r4
 4021ebc:	2085c83a 	sub	r2,r4,r2
 4021ec0:	8461c83a 	sub	r16,r16,r17
 4021ec4:	1400010e 	bge	r2,r16,4021ecc <___vfprintf_internal_r+0x1584>
 4021ec8:	1021883a 	mov	r16,r2
 4021ecc:	04000a0e 	bge	zero,r16,4021ef8 <___vfprintf_internal_r+0x15b0>
 4021ed0:	d9001f17 	ldw	r4,124(sp)
 4021ed4:	1c07883a 	add	r3,r3,r16
 4021ed8:	44400015 	stw	r17,0(r8)
 4021edc:	21000044 	addi	r4,r4,1
 4021ee0:	44000115 	stw	r16,4(r8)
 4021ee4:	d8c02015 	stw	r3,128(sp)
 4021ee8:	d9001f15 	stw	r4,124(sp)
 4021eec:	014001c4 	movi	r5,7
 4021ef0:	2901fb16 	blt	r5,r4,40226e0 <___vfprintf_internal_r+0x1d98>
 4021ef4:	42000204 	addi	r8,r8,8
 4021ef8:	8001f716 	blt	r16,zero,40226d8 <___vfprintf_internal_r+0x1d90>
 4021efc:	1421c83a 	sub	r16,r2,r16
 4021f00:	043d160e 	bge	zero,r16,402135c <__flash_rwdata_start+0xffff1048>
 4021f04:	04400404 	movi	r17,16
 4021f08:	d8801f17 	ldw	r2,124(sp)
 4021f0c:	8c3efb0e 	bge	r17,r16,4021afc <__flash_rwdata_start+0xffff17e8>
 4021f10:	01400034 	movhi	r5,0
 4021f14:	29402284 	addi	r5,r5,138
 4021f18:	d9402c15 	stw	r5,176(sp)
 4021f1c:	058001c4 	movi	r22,7
 4021f20:	dcc02d17 	ldw	r19,180(sp)
 4021f24:	00000306 	br	4021f34 <___vfprintf_internal_r+0x15ec>
 4021f28:	42000204 	addi	r8,r8,8
 4021f2c:	843ffc04 	addi	r16,r16,-16
 4021f30:	8c3ef50e 	bge	r17,r16,4021b08 <__flash_rwdata_start+0xffff17f4>
 4021f34:	18c00404 	addi	r3,r3,16
 4021f38:	10800044 	addi	r2,r2,1
 4021f3c:	45000015 	stw	r20,0(r8)
 4021f40:	44400115 	stw	r17,4(r8)
 4021f44:	d8c02015 	stw	r3,128(sp)
 4021f48:	d8801f15 	stw	r2,124(sp)
 4021f4c:	b0bff60e 	bge	r22,r2,4021f28 <__flash_rwdata_start+0xffff1c14>
 4021f50:	d9801e04 	addi	r6,sp,120
 4021f54:	b80b883a 	mov	r5,r23
 4021f58:	9809883a 	mov	r4,r19
 4021f5c:	40276380 	call	4027638 <__sprint_r>
 4021f60:	103b7d1e 	bne	r2,zero,4020d58 <__flash_rwdata_start+0xffff0a44>
 4021f64:	d8c02017 	ldw	r3,128(sp)
 4021f68:	d8801f17 	ldw	r2,124(sp)
 4021f6c:	da000404 	addi	r8,sp,16
 4021f70:	003fee06 	br	4021f2c <__flash_rwdata_start+0xffff1c18>
 4021f74:	9088703a 	and	r4,r18,r2
 4021f78:	203eab1e 	bne	r4,zero,4021a28 <__flash_rwdata_start+0xffff1714>
 4021f7c:	dc401f17 	ldw	r17,124(sp)
 4021f80:	40800115 	stw	r2,4(r8)
 4021f84:	44000015 	stw	r16,0(r8)
 4021f88:	8c400044 	addi	r17,r17,1
 4021f8c:	d8c02015 	stw	r3,128(sp)
 4021f90:	dc401f15 	stw	r17,124(sp)
 4021f94:	008001c4 	movi	r2,7
 4021f98:	14400e16 	blt	r2,r17,4021fd4 <___vfprintf_internal_r+0x168c>
 4021f9c:	45800204 	addi	r22,r8,8
 4021fa0:	003eca06 	br	4021acc <__flash_rwdata_start+0xffff17b8>
 4021fa4:	01000034 	movhi	r4,0
 4021fa8:	21002284 	addi	r4,r4,138
 4021fac:	d9002c15 	stw	r4,176(sp)
 4021fb0:	d8802c17 	ldw	r2,176(sp)
 4021fb4:	1c07883a 	add	r3,r3,r16
 4021fb8:	8c400044 	addi	r17,r17,1
 4021fbc:	b0800015 	stw	r2,0(r22)
 4021fc0:	b4000115 	stw	r16,4(r22)
 4021fc4:	d8c02015 	stw	r3,128(sp)
 4021fc8:	dc401f15 	stw	r17,124(sp)
 4021fcc:	008001c4 	movi	r2,7
 4021fd0:	147ebd0e 	bge	r2,r17,4021ac8 <__flash_rwdata_start+0xffff17b4>
 4021fd4:	d9002d17 	ldw	r4,180(sp)
 4021fd8:	d9801e04 	addi	r6,sp,120
 4021fdc:	b80b883a 	mov	r5,r23
 4021fe0:	40276380 	call	4027638 <__sprint_r>
 4021fe4:	103b5c1e 	bne	r2,zero,4020d58 <__flash_rwdata_start+0xffff0a44>
 4021fe8:	d8c02017 	ldw	r3,128(sp)
 4021fec:	dc401f17 	ldw	r17,124(sp)
 4021ff0:	dd800404 	addi	r22,sp,16
 4021ff4:	003eb506 	br	4021acc <__flash_rwdata_start+0xffff17b8>
 4021ff8:	d9002d17 	ldw	r4,180(sp)
 4021ffc:	d9801e04 	addi	r6,sp,120
 4022000:	b80b883a 	mov	r5,r23
 4022004:	40276380 	call	4027638 <__sprint_r>
 4022008:	103b531e 	bne	r2,zero,4020d58 <__flash_rwdata_start+0xffff0a44>
 402200c:	d8c02017 	ldw	r3,128(sp)
 4022010:	dc401f17 	ldw	r17,124(sp)
 4022014:	da000404 	addi	r8,sp,16
 4022018:	003e8d06 	br	4021a50 <__flash_rwdata_start+0xffff173c>
 402201c:	d9002d17 	ldw	r4,180(sp)
 4022020:	d9801e04 	addi	r6,sp,120
 4022024:	b80b883a 	mov	r5,r23
 4022028:	40276380 	call	4027638 <__sprint_r>
 402202c:	103b4a1e 	bne	r2,zero,4020d58 <__flash_rwdata_start+0xffff0a44>
 4022030:	d8c02017 	ldw	r3,128(sp)
 4022034:	dc401f17 	ldw	r17,124(sp)
 4022038:	dd800404 	addi	r22,sp,16
 402203c:	003e8f06 	br	4021a7c <__flash_rwdata_start+0xffff1768>
 4022040:	0027883a 	mov	r19,zero
 4022044:	003f4a06 	br	4021d70 <__flash_rwdata_start+0xffff1a5c>
 4022048:	d9002d17 	ldw	r4,180(sp)
 402204c:	d9801e04 	addi	r6,sp,120
 4022050:	b80b883a 	mov	r5,r23
 4022054:	40276380 	call	4027638 <__sprint_r>
 4022058:	103b3f1e 	bne	r2,zero,4020d58 <__flash_rwdata_start+0xffff0a44>
 402205c:	d8c02017 	ldw	r3,128(sp)
 4022060:	da000404 	addi	r8,sp,16
 4022064:	003c7b06 	br	4021254 <__flash_rwdata_start+0xffff0f40>
 4022068:	d9402a17 	ldw	r5,168(sp)
 402206c:	04e7c83a 	sub	r19,zero,r19
 4022070:	07000b44 	movi	fp,45
 4022074:	9804c03a 	cmpne	r2,r19,zero
 4022078:	05adc83a 	sub	r22,zero,r22
 402207c:	df002785 	stb	fp,158(sp)
 4022080:	b0adc83a 	sub	r22,r22,r2
 4022084:	28017b16 	blt	r5,zero,4022674 <___vfprintf_internal_r+0x1d2c>
 4022088:	00bfdfc4 	movi	r2,-129
 402208c:	90a4703a 	and	r18,r18,r2
 4022090:	003b8906 	br	4020eb8 <__flash_rwdata_start+0xffff0ba4>
 4022094:	d9003617 	ldw	r4,216(sp)
 4022098:	d9403817 	ldw	r5,224(sp)
 402209c:	da003d15 	stw	r8,244(sp)
 40220a0:	40271c40 	call	40271c4 <__fpclassifyd>
 40220a4:	da003d17 	ldw	r8,244(sp)
 40220a8:	1000f026 	beq	r2,zero,402246c <___vfprintf_internal_r+0x1b24>
 40220ac:	d9002a17 	ldw	r4,168(sp)
 40220b0:	05bff7c4 	movi	r22,-33
 40220b4:	00bfffc4 	movi	r2,-1
 40220b8:	8dac703a 	and	r22,r17,r22
 40220bc:	20820026 	beq	r4,r2,40228c0 <___vfprintf_internal_r+0x1f78>
 40220c0:	008011c4 	movi	r2,71
 40220c4:	b081f726 	beq	r22,r2,40228a4 <___vfprintf_internal_r+0x1f5c>
 40220c8:	d9003817 	ldw	r4,224(sp)
 40220cc:	90c04014 	ori	r3,r18,256
 40220d0:	d8c02c15 	stw	r3,176(sp)
 40220d4:	20021516 	blt	r4,zero,402292c <___vfprintf_internal_r+0x1fe4>
 40220d8:	dcc03817 	ldw	r19,224(sp)
 40220dc:	d8002905 	stb	zero,164(sp)
 40220e0:	00801984 	movi	r2,102
 40220e4:	8881f926 	beq	r17,r2,40228cc <___vfprintf_internal_r+0x1f84>
 40220e8:	00801184 	movi	r2,70
 40220ec:	88821c26 	beq	r17,r2,4022960 <___vfprintf_internal_r+0x2018>
 40220f0:	00801144 	movi	r2,69
 40220f4:	b081ef26 	beq	r22,r2,40228b4 <___vfprintf_internal_r+0x1f6c>
 40220f8:	d8c02a17 	ldw	r3,168(sp)
 40220fc:	d8802104 	addi	r2,sp,132
 4022100:	d8800315 	stw	r2,12(sp)
 4022104:	d9403617 	ldw	r5,216(sp)
 4022108:	d8802504 	addi	r2,sp,148
 402210c:	d9002d17 	ldw	r4,180(sp)
 4022110:	d8800215 	stw	r2,8(sp)
 4022114:	d8802604 	addi	r2,sp,152
 4022118:	d8c00015 	stw	r3,0(sp)
 402211c:	d8800115 	stw	r2,4(sp)
 4022120:	01c00084 	movi	r7,2
 4022124:	980d883a 	mov	r6,r19
 4022128:	d8c03c15 	stw	r3,240(sp)
 402212c:	da003d15 	stw	r8,244(sp)
 4022130:	40230780 	call	4023078 <_dtoa_r>
 4022134:	1021883a 	mov	r16,r2
 4022138:	008019c4 	movi	r2,103
 402213c:	d8c03c17 	ldw	r3,240(sp)
 4022140:	da003d17 	ldw	r8,244(sp)
 4022144:	88817126 	beq	r17,r2,402270c <___vfprintf_internal_r+0x1dc4>
 4022148:	008011c4 	movi	r2,71
 402214c:	88829126 	beq	r17,r2,4022b94 <___vfprintf_internal_r+0x224c>
 4022150:	80f9883a 	add	fp,r16,r3
 4022154:	d9003617 	ldw	r4,216(sp)
 4022158:	000d883a 	mov	r6,zero
 402215c:	000f883a 	mov	r7,zero
 4022160:	980b883a 	mov	r5,r19
 4022164:	da003d15 	stw	r8,244(sp)
 4022168:	402c0500 	call	402c050 <__eqdf2>
 402216c:	da003d17 	ldw	r8,244(sp)
 4022170:	10018d26 	beq	r2,zero,40227a8 <___vfprintf_internal_r+0x1e60>
 4022174:	d8802117 	ldw	r2,132(sp)
 4022178:	1700062e 	bgeu	r2,fp,4022194 <___vfprintf_internal_r+0x184c>
 402217c:	01000c04 	movi	r4,48
 4022180:	10c00044 	addi	r3,r2,1
 4022184:	d8c02115 	stw	r3,132(sp)
 4022188:	11000005 	stb	r4,0(r2)
 402218c:	d8802117 	ldw	r2,132(sp)
 4022190:	173ffb36 	bltu	r2,fp,4022180 <__flash_rwdata_start+0xffff1e6c>
 4022194:	1405c83a 	sub	r2,r2,r16
 4022198:	d8803315 	stw	r2,204(sp)
 402219c:	008011c4 	movi	r2,71
 40221a0:	b0817626 	beq	r22,r2,402277c <___vfprintf_internal_r+0x1e34>
 40221a4:	00801944 	movi	r2,101
 40221a8:	1442800e 	bge	r2,r17,4022bac <___vfprintf_internal_r+0x2264>
 40221ac:	d8c02617 	ldw	r3,152(sp)
 40221b0:	00801984 	movi	r2,102
 40221b4:	d8c03215 	stw	r3,200(sp)
 40221b8:	8881fe26 	beq	r17,r2,40229b4 <___vfprintf_internal_r+0x206c>
 40221bc:	d8c03217 	ldw	r3,200(sp)
 40221c0:	d9003317 	ldw	r4,204(sp)
 40221c4:	1901dd16 	blt	r3,r4,402293c <___vfprintf_internal_r+0x1ff4>
 40221c8:	9480004c 	andi	r18,r18,1
 40221cc:	90022b1e 	bne	r18,zero,4022a7c <___vfprintf_internal_r+0x2134>
 40221d0:	1805883a 	mov	r2,r3
 40221d4:	18028316 	blt	r3,zero,4022be4 <___vfprintf_internal_r+0x229c>
 40221d8:	d8c03217 	ldw	r3,200(sp)
 40221dc:	044019c4 	movi	r17,103
 40221e0:	d8c02b15 	stw	r3,172(sp)
 40221e4:	df002907 	ldb	fp,164(sp)
 40221e8:	e001531e 	bne	fp,zero,4022738 <___vfprintf_internal_r+0x1df0>
 40221ec:	df002783 	ldbu	fp,158(sp)
 40221f0:	d8802915 	stw	r2,164(sp)
 40221f4:	dc802c17 	ldw	r18,176(sp)
 40221f8:	d8002a15 	stw	zero,168(sp)
 40221fc:	003baf06 	br	40210bc <__flash_rwdata_start+0xffff0da8>
 4022200:	d8c02e17 	ldw	r3,184(sp)
 4022204:	d9002e17 	ldw	r4,184(sp)
 4022208:	d9402e17 	ldw	r5,184(sp)
 402220c:	18c00017 	ldw	r3,0(r3)
 4022210:	21000117 	ldw	r4,4(r4)
 4022214:	29400204 	addi	r5,r5,8
 4022218:	d8c03615 	stw	r3,216(sp)
 402221c:	d9003815 	stw	r4,224(sp)
 4022220:	d9402e15 	stw	r5,184(sp)
 4022224:	003b5006 	br	4020f68 <__flash_rwdata_start+0xffff0c54>
 4022228:	ac400007 	ldb	r17,0(r21)
 402222c:	003a2806 	br	4020ad0 <__flash_rwdata_start+0xffff07bc>
 4022230:	9080100c 	andi	r2,r18,64
 4022234:	1000a826 	beq	r2,zero,40224d8 <___vfprintf_internal_r+0x1b90>
 4022238:	d8c02e17 	ldw	r3,184(sp)
 402223c:	002d883a 	mov	r22,zero
 4022240:	1cc0000b 	ldhu	r19,0(r3)
 4022244:	18c00104 	addi	r3,r3,4
 4022248:	d8c02e15 	stw	r3,184(sp)
 402224c:	003caf06 	br	402150c <__flash_rwdata_start+0xffff11f8>
 4022250:	d9002e17 	ldw	r4,184(sp)
 4022254:	d9402a17 	ldw	r5,168(sp)
 4022258:	002d883a 	mov	r22,zero
 402225c:	20800104 	addi	r2,r4,4
 4022260:	24c00017 	ldw	r19,0(r4)
 4022264:	283ebb0e 	bge	r5,zero,4021d54 <__flash_rwdata_start+0xffff1a40>
 4022268:	003ef106 	br	4021e30 <__flash_rwdata_start+0xffff1b1c>
 402226c:	9080040c 	andi	r2,r18,16
 4022270:	1000921e 	bne	r2,zero,40224bc <___vfprintf_internal_r+0x1b74>
 4022274:	9480100c 	andi	r18,r18,64
 4022278:	90013926 	beq	r18,zero,4022760 <___vfprintf_internal_r+0x1e18>
 402227c:	d9402e17 	ldw	r5,184(sp)
 4022280:	d8c02f17 	ldw	r3,188(sp)
 4022284:	28800017 	ldw	r2,0(r5)
 4022288:	29400104 	addi	r5,r5,4
 402228c:	d9402e15 	stw	r5,184(sp)
 4022290:	10c0000d 	sth	r3,0(r2)
 4022294:	0039e406 	br	4020a28 <__flash_rwdata_start+0xffff0714>
 4022298:	9080100c 	andi	r2,r18,64
 402229c:	10008026 	beq	r2,zero,40224a0 <___vfprintf_internal_r+0x1b58>
 40222a0:	d8802e17 	ldw	r2,184(sp)
 40222a4:	14c0000f 	ldh	r19,0(r2)
 40222a8:	10800104 	addi	r2,r2,4
 40222ac:	d8802e15 	stw	r2,184(sp)
 40222b0:	982dd7fa 	srai	r22,r19,31
 40222b4:	b005883a 	mov	r2,r22
 40222b8:	003af706 	br	4020e98 <__flash_rwdata_start+0xffff0b84>
 40222bc:	9080100c 	andi	r2,r18,64
 40222c0:	d8002785 	stb	zero,158(sp)
 40222c4:	10008a1e 	bne	r2,zero,40224f0 <___vfprintf_internal_r+0x1ba8>
 40222c8:	d9002e17 	ldw	r4,184(sp)
 40222cc:	d9402a17 	ldw	r5,168(sp)
 40222d0:	002d883a 	mov	r22,zero
 40222d4:	20800104 	addi	r2,r4,4
 40222d8:	24c00017 	ldw	r19,0(r4)
 40222dc:	283e4b0e 	bge	r5,zero,4021c0c <__flash_rwdata_start+0xffff18f8>
 40222e0:	9d86b03a 	or	r3,r19,r22
 40222e4:	d8802e15 	stw	r2,184(sp)
 40222e8:	183e4c1e 	bne	r3,zero,4021c1c <__flash_rwdata_start+0xffff1908>
 40222ec:	0039883a 	mov	fp,zero
 40222f0:	0005883a 	mov	r2,zero
 40222f4:	003d4006 	br	40217f8 <__flash_rwdata_start+0xffff14e4>
 40222f8:	01400034 	movhi	r5,0
 40222fc:	29402284 	addi	r5,r5,138
 4022300:	d9402c15 	stw	r5,176(sp)
 4022304:	d9402c17 	ldw	r5,176(sp)
 4022308:	1c47883a 	add	r3,r3,r17
 402230c:	10800044 	addi	r2,r2,1
 4022310:	41400015 	stw	r5,0(r8)
 4022314:	44400115 	stw	r17,4(r8)
 4022318:	d8c02015 	stw	r3,128(sp)
 402231c:	d8801f15 	stw	r2,124(sp)
 4022320:	010001c4 	movi	r4,7
 4022324:	20bec816 	blt	r4,r2,4021e48 <__flash_rwdata_start+0xffff1b34>
 4022328:	42000204 	addi	r8,r8,8
 402232c:	003ecd06 	br	4021e64 <__flash_rwdata_start+0xffff1b50>
 4022330:	d9002a17 	ldw	r4,168(sp)
 4022334:	d8002785 	stb	zero,158(sp)
 4022338:	203d2d16 	blt	r4,zero,40217f0 <__flash_rwdata_start+0xffff14dc>
 402233c:	00bfdfc4 	movi	r2,-129
 4022340:	90a4703a 	and	r18,r18,r2
 4022344:	003a6106 	br	4020ccc <__flash_rwdata_start+0xffff09b8>
 4022348:	01000034 	movhi	r4,0
 402234c:	21002284 	addi	r4,r4,138
 4022350:	d9002c15 	stw	r4,176(sp)
 4022354:	003bea06 	br	4021300 <__flash_rwdata_start+0xffff0fec>
 4022358:	d9002d17 	ldw	r4,180(sp)
 402235c:	d9801e04 	addi	r6,sp,120
 4022360:	b80b883a 	mov	r5,r23
 4022364:	40276380 	call	4027638 <__sprint_r>
 4022368:	103a7b1e 	bne	r2,zero,4020d58 <__flash_rwdata_start+0xffff0a44>
 402236c:	d8c02017 	ldw	r3,128(sp)
 4022370:	da000404 	addi	r8,sp,16
 4022374:	003d4106 	br	402187c <__flash_rwdata_start+0xffff1568>
 4022378:	d8801f17 	ldw	r2,124(sp)
 402237c:	01400034 	movhi	r5,0
 4022380:	01000044 	movi	r4,1
 4022384:	18c00044 	addi	r3,r3,1
 4022388:	10800044 	addi	r2,r2,1
 402238c:	29402204 	addi	r5,r5,136
 4022390:	41000115 	stw	r4,4(r8)
 4022394:	41400015 	stw	r5,0(r8)
 4022398:	d8c02015 	stw	r3,128(sp)
 402239c:	d8801f15 	stw	r2,124(sp)
 40223a0:	010001c4 	movi	r4,7
 40223a4:	20805c16 	blt	r4,r2,4022518 <___vfprintf_internal_r+0x1bd0>
 40223a8:	42000204 	addi	r8,r8,8
 40223ac:	8800041e 	bne	r17,zero,40223c0 <___vfprintf_internal_r+0x1a78>
 40223b0:	d8803317 	ldw	r2,204(sp)
 40223b4:	1000021e 	bne	r2,zero,40223c0 <___vfprintf_internal_r+0x1a78>
 40223b8:	9080004c 	andi	r2,r18,1
 40223bc:	103be726 	beq	r2,zero,402135c <__flash_rwdata_start+0xffff1048>
 40223c0:	d9003717 	ldw	r4,220(sp)
 40223c4:	d8801f17 	ldw	r2,124(sp)
 40223c8:	d9403417 	ldw	r5,208(sp)
 40223cc:	20c7883a 	add	r3,r4,r3
 40223d0:	10800044 	addi	r2,r2,1
 40223d4:	41000115 	stw	r4,4(r8)
 40223d8:	41400015 	stw	r5,0(r8)
 40223dc:	d8c02015 	stw	r3,128(sp)
 40223e0:	d8801f15 	stw	r2,124(sp)
 40223e4:	010001c4 	movi	r4,7
 40223e8:	20812116 	blt	r4,r2,4022870 <___vfprintf_internal_r+0x1f28>
 40223ec:	42000204 	addi	r8,r8,8
 40223f0:	0463c83a 	sub	r17,zero,r17
 40223f4:	0440730e 	bge	zero,r17,40225c4 <___vfprintf_internal_r+0x1c7c>
 40223f8:	05800404 	movi	r22,16
 40223fc:	b440860e 	bge	r22,r17,4022618 <___vfprintf_internal_r+0x1cd0>
 4022400:	01400034 	movhi	r5,0
 4022404:	29402284 	addi	r5,r5,138
 4022408:	d9402c15 	stw	r5,176(sp)
 402240c:	070001c4 	movi	fp,7
 4022410:	dcc02d17 	ldw	r19,180(sp)
 4022414:	00000306 	br	4022424 <___vfprintf_internal_r+0x1adc>
 4022418:	42000204 	addi	r8,r8,8
 402241c:	8c7ffc04 	addi	r17,r17,-16
 4022420:	b440800e 	bge	r22,r17,4022624 <___vfprintf_internal_r+0x1cdc>
 4022424:	18c00404 	addi	r3,r3,16
 4022428:	10800044 	addi	r2,r2,1
 402242c:	45000015 	stw	r20,0(r8)
 4022430:	45800115 	stw	r22,4(r8)
 4022434:	d8c02015 	stw	r3,128(sp)
 4022438:	d8801f15 	stw	r2,124(sp)
 402243c:	e0bff60e 	bge	fp,r2,4022418 <__flash_rwdata_start+0xffff2104>
 4022440:	d9801e04 	addi	r6,sp,120
 4022444:	b80b883a 	mov	r5,r23
 4022448:	9809883a 	mov	r4,r19
 402244c:	40276380 	call	4027638 <__sprint_r>
 4022450:	103a411e 	bne	r2,zero,4020d58 <__flash_rwdata_start+0xffff0a44>
 4022454:	d8c02017 	ldw	r3,128(sp)
 4022458:	d8801f17 	ldw	r2,124(sp)
 402245c:	da000404 	addi	r8,sp,16
 4022460:	003fee06 	br	402241c <__flash_rwdata_start+0xffff2108>
 4022464:	00bfffc4 	movi	r2,-1
 4022468:	003a3f06 	br	4020d68 <__flash_rwdata_start+0xffff0a54>
 402246c:	008011c4 	movi	r2,71
 4022470:	1440b816 	blt	r2,r17,4022754 <___vfprintf_internal_r+0x1e0c>
 4022474:	04000034 	movhi	r16,0
 4022478:	84001404 	addi	r16,r16,80
 402247c:	00c000c4 	movi	r3,3
 4022480:	00bfdfc4 	movi	r2,-129
 4022484:	d8c02915 	stw	r3,164(sp)
 4022488:	90a4703a 	and	r18,r18,r2
 402248c:	df002783 	ldbu	fp,158(sp)
 4022490:	d8c02b15 	stw	r3,172(sp)
 4022494:	d8002a15 	stw	zero,168(sp)
 4022498:	d8003215 	stw	zero,200(sp)
 402249c:	003b0706 	br	40210bc <__flash_rwdata_start+0xffff0da8>
 40224a0:	d8c02e17 	ldw	r3,184(sp)
 40224a4:	1cc00017 	ldw	r19,0(r3)
 40224a8:	18c00104 	addi	r3,r3,4
 40224ac:	d8c02e15 	stw	r3,184(sp)
 40224b0:	982dd7fa 	srai	r22,r19,31
 40224b4:	b005883a 	mov	r2,r22
 40224b8:	003a7706 	br	4020e98 <__flash_rwdata_start+0xffff0b84>
 40224bc:	d8c02e17 	ldw	r3,184(sp)
 40224c0:	d9002f17 	ldw	r4,188(sp)
 40224c4:	18800017 	ldw	r2,0(r3)
 40224c8:	18c00104 	addi	r3,r3,4
 40224cc:	d8c02e15 	stw	r3,184(sp)
 40224d0:	11000015 	stw	r4,0(r2)
 40224d4:	00395406 	br	4020a28 <__flash_rwdata_start+0xffff0714>
 40224d8:	d9002e17 	ldw	r4,184(sp)
 40224dc:	002d883a 	mov	r22,zero
 40224e0:	24c00017 	ldw	r19,0(r4)
 40224e4:	21000104 	addi	r4,r4,4
 40224e8:	d9002e15 	stw	r4,184(sp)
 40224ec:	003c0706 	br	402150c <__flash_rwdata_start+0xffff11f8>
 40224f0:	d9402e17 	ldw	r5,184(sp)
 40224f4:	d8c02a17 	ldw	r3,168(sp)
 40224f8:	002d883a 	mov	r22,zero
 40224fc:	28800104 	addi	r2,r5,4
 4022500:	2cc0000b 	ldhu	r19,0(r5)
 4022504:	183dc10e 	bge	r3,zero,4021c0c <__flash_rwdata_start+0xffff18f8>
 4022508:	003f7506 	br	40222e0 <__flash_rwdata_start+0xffff1fcc>
 402250c:	04000034 	movhi	r16,0
 4022510:	84001204 	addi	r16,r16,72
 4022514:	003aa706 	br	4020fb4 <__flash_rwdata_start+0xffff0ca0>
 4022518:	d9002d17 	ldw	r4,180(sp)
 402251c:	d9801e04 	addi	r6,sp,120
 4022520:	b80b883a 	mov	r5,r23
 4022524:	40276380 	call	4027638 <__sprint_r>
 4022528:	103a0b1e 	bne	r2,zero,4020d58 <__flash_rwdata_start+0xffff0a44>
 402252c:	dc402617 	ldw	r17,152(sp)
 4022530:	d8c02017 	ldw	r3,128(sp)
 4022534:	da000404 	addi	r8,sp,16
 4022538:	003f9c06 	br	40223ac <__flash_rwdata_start+0xffff2098>
 402253c:	ac400043 	ldbu	r17,1(r21)
 4022540:	84000814 	ori	r16,r16,32
 4022544:	ad400044 	addi	r21,r21,1
 4022548:	8c403fcc 	andi	r17,r17,255
 402254c:	8c40201c 	xori	r17,r17,128
 4022550:	8c7fe004 	addi	r17,r17,-128
 4022554:	00395e06 	br	4020ad0 <__flash_rwdata_start+0xffff07bc>
 4022558:	d8c02e15 	stw	r3,184(sp)
 402255c:	0039883a 	mov	fp,zero
 4022560:	003e3506 	br	4021e38 <__flash_rwdata_start+0xffff1b24>
 4022564:	d9002d17 	ldw	r4,180(sp)
 4022568:	d9801e04 	addi	r6,sp,120
 402256c:	b80b883a 	mov	r5,r23
 4022570:	40276380 	call	4027638 <__sprint_r>
 4022574:	1039f81e 	bne	r2,zero,4020d58 <__flash_rwdata_start+0xffff0a44>
 4022578:	d8c02017 	ldw	r3,128(sp)
 402257c:	da000404 	addi	r8,sp,16
 4022580:	003cd006 	br	40218c4 <__flash_rwdata_start+0xffff15b0>
 4022584:	8009883a 	mov	r4,r16
 4022588:	df003d15 	stw	fp,244(sp)
 402258c:	40274a40 	call	40274a4 <strlen>
 4022590:	d8802b15 	stw	r2,172(sp)
 4022594:	da003d17 	ldw	r8,244(sp)
 4022598:	103c200e 	bge	r2,zero,402161c <__flash_rwdata_start+0xffff1308>
 402259c:	0005883a 	mov	r2,zero
 40225a0:	003c1e06 	br	402161c <__flash_rwdata_start+0xffff1308>
 40225a4:	d9002d17 	ldw	r4,180(sp)
 40225a8:	d9801e04 	addi	r6,sp,120
 40225ac:	b80b883a 	mov	r5,r23
 40225b0:	40276380 	call	4027638 <__sprint_r>
 40225b4:	1039e81e 	bne	r2,zero,4020d58 <__flash_rwdata_start+0xffff0a44>
 40225b8:	d8c02017 	ldw	r3,128(sp)
 40225bc:	d8801f17 	ldw	r2,124(sp)
 40225c0:	da000404 	addi	r8,sp,16
 40225c4:	d9403317 	ldw	r5,204(sp)
 40225c8:	10800044 	addi	r2,r2,1
 40225cc:	44000015 	stw	r16,0(r8)
 40225d0:	28c7883a 	add	r3,r5,r3
 40225d4:	003b5b06 	br	4021344 <__flash_rwdata_start+0xffff1030>
 40225d8:	01000034 	movhi	r4,0
 40225dc:	21002684 	addi	r4,r4,154
 40225e0:	d9003515 	stw	r4,212(sp)
 40225e4:	003af206 	br	40211b0 <__flash_rwdata_start+0xffff0e9c>
 40225e8:	013fffc4 	movi	r4,-1
 40225ec:	003a0806 	br	4020e10 <__flash_rwdata_start+0xffff0afc>
 40225f0:	0023883a 	mov	r17,zero
 40225f4:	003d9d06 	br	4021c6c <__flash_rwdata_start+0xffff1958>
 40225f8:	d9002d17 	ldw	r4,180(sp)
 40225fc:	d9801e04 	addi	r6,sp,120
 4022600:	b80b883a 	mov	r5,r23
 4022604:	40276380 	call	4027638 <__sprint_r>
 4022608:	1039d31e 	bne	r2,zero,4020d58 <__flash_rwdata_start+0xffff0a44>
 402260c:	d8c02017 	ldw	r3,128(sp)
 4022610:	da000404 	addi	r8,sp,16
 4022614:	003d9406 	br	4021c68 <__flash_rwdata_start+0xffff1954>
 4022618:	01000034 	movhi	r4,0
 402261c:	21002284 	addi	r4,r4,138
 4022620:	d9002c15 	stw	r4,176(sp)
 4022624:	d9002c17 	ldw	r4,176(sp)
 4022628:	1c47883a 	add	r3,r3,r17
 402262c:	10800044 	addi	r2,r2,1
 4022630:	41000015 	stw	r4,0(r8)
 4022634:	44400115 	stw	r17,4(r8)
 4022638:	d8c02015 	stw	r3,128(sp)
 402263c:	d8801f15 	stw	r2,124(sp)
 4022640:	010001c4 	movi	r4,7
 4022644:	20bfd716 	blt	r4,r2,40225a4 <__flash_rwdata_start+0xffff2290>
 4022648:	42000204 	addi	r8,r8,8
 402264c:	003fdd06 	br	40225c4 <__flash_rwdata_start+0xffff22b0>
 4022650:	d9002d17 	ldw	r4,180(sp)
 4022654:	d9801e04 	addi	r6,sp,120
 4022658:	b80b883a 	mov	r5,r23
 402265c:	40276380 	call	4027638 <__sprint_r>
 4022660:	1039bd1e 	bne	r2,zero,4020d58 <__flash_rwdata_start+0xffff0a44>
 4022664:	d8802617 	ldw	r2,152(sp)
 4022668:	d8c02017 	ldw	r3,128(sp)
 402266c:	da000404 	addi	r8,sp,16
 4022670:	003e1006 	br	4021eb4 <__flash_rwdata_start+0xffff1ba0>
 4022674:	00800044 	movi	r2,1
 4022678:	10803fcc 	andi	r2,r2,255
 402267c:	00c00044 	movi	r3,1
 4022680:	10fa0d26 	beq	r2,r3,4020eb8 <__flash_rwdata_start+0xffff0ba4>
 4022684:	00c00084 	movi	r3,2
 4022688:	10fbaf26 	beq	r2,r3,4021548 <__flash_rwdata_start+0xffff1234>
 402268c:	003a6d06 	br	4021044 <__flash_rwdata_start+0xffff0d30>
 4022690:	01000034 	movhi	r4,0
 4022694:	21002684 	addi	r4,r4,154
 4022698:	d9003515 	stw	r4,212(sp)
 402269c:	003b5406 	br	40213f0 <__flash_rwdata_start+0xffff10dc>
 40226a0:	d8802a17 	ldw	r2,168(sp)
 40226a4:	00c00184 	movi	r3,6
 40226a8:	1880012e 	bgeu	r3,r2,40226b0 <___vfprintf_internal_r+0x1d68>
 40226ac:	1805883a 	mov	r2,r3
 40226b0:	d8802b15 	stw	r2,172(sp)
 40226b4:	1000ef16 	blt	r2,zero,4022a74 <___vfprintf_internal_r+0x212c>
 40226b8:	04000034 	movhi	r16,0
 40226bc:	d8802915 	stw	r2,164(sp)
 40226c0:	dcc02e15 	stw	r19,184(sp)
 40226c4:	d8002a15 	stw	zero,168(sp)
 40226c8:	d8003215 	stw	zero,200(sp)
 40226cc:	84002004 	addi	r16,r16,128
 40226d0:	0039883a 	mov	fp,zero
 40226d4:	003a8006 	br	40210d8 <__flash_rwdata_start+0xffff0dc4>
 40226d8:	0021883a 	mov	r16,zero
 40226dc:	003e0706 	br	4021efc <__flash_rwdata_start+0xffff1be8>
 40226e0:	d9002d17 	ldw	r4,180(sp)
 40226e4:	d9801e04 	addi	r6,sp,120
 40226e8:	b80b883a 	mov	r5,r23
 40226ec:	40276380 	call	4027638 <__sprint_r>
 40226f0:	1039991e 	bne	r2,zero,4020d58 <__flash_rwdata_start+0xffff0a44>
 40226f4:	d8802617 	ldw	r2,152(sp)
 40226f8:	d9403317 	ldw	r5,204(sp)
 40226fc:	d8c02017 	ldw	r3,128(sp)
 4022700:	da000404 	addi	r8,sp,16
 4022704:	2885c83a 	sub	r2,r5,r2
 4022708:	003dfb06 	br	4021ef8 <__flash_rwdata_start+0xffff1be4>
 402270c:	9080004c 	andi	r2,r18,1
 4022710:	103e8f1e 	bne	r2,zero,4022150 <__flash_rwdata_start+0xffff1e3c>
 4022714:	d8802117 	ldw	r2,132(sp)
 4022718:	003e9e06 	br	4022194 <__flash_rwdata_start+0xffff1e80>
 402271c:	1025883a 	mov	r18,r2
 4022720:	0039883a 	mov	fp,zero
 4022724:	00800084 	movi	r2,2
 4022728:	003fd306 	br	4022678 <__flash_rwdata_start+0xffff2364>
 402272c:	07000b44 	movi	fp,45
 4022730:	df002785 	stb	fp,158(sp)
 4022734:	003a1b06 	br	4020fa4 <__flash_rwdata_start+0xffff0c90>
 4022738:	00c00b44 	movi	r3,45
 402273c:	d8c02785 	stb	r3,158(sp)
 4022740:	d8802915 	stw	r2,164(sp)
 4022744:	dc802c17 	ldw	r18,176(sp)
 4022748:	d8002a15 	stw	zero,168(sp)
 402274c:	07000b44 	movi	fp,45
 4022750:	003a5e06 	br	40210cc <__flash_rwdata_start+0xffff0db8>
 4022754:	04000034 	movhi	r16,0
 4022758:	84001504 	addi	r16,r16,84
 402275c:	003f4706 	br	402247c <__flash_rwdata_start+0xffff2168>
 4022760:	d9002e17 	ldw	r4,184(sp)
 4022764:	d9402f17 	ldw	r5,188(sp)
 4022768:	20800017 	ldw	r2,0(r4)
 402276c:	21000104 	addi	r4,r4,4
 4022770:	d9002e15 	stw	r4,184(sp)
 4022774:	11400015 	stw	r5,0(r2)
 4022778:	0038ab06 	br	4020a28 <__flash_rwdata_start+0xffff0714>
 402277c:	dd802617 	ldw	r22,152(sp)
 4022780:	00bfff44 	movi	r2,-3
 4022784:	b0801c16 	blt	r22,r2,40227f8 <___vfprintf_internal_r+0x1eb0>
 4022788:	d9402a17 	ldw	r5,168(sp)
 402278c:	2d801a16 	blt	r5,r22,40227f8 <___vfprintf_internal_r+0x1eb0>
 4022790:	dd803215 	stw	r22,200(sp)
 4022794:	003e8906 	br	40221bc <__flash_rwdata_start+0xffff1ea8>
 4022798:	01000034 	movhi	r4,0
 402279c:	21002284 	addi	r4,r4,138
 40227a0:	d9002c15 	stw	r4,176(sp)
 40227a4:	003c9106 	br	40219ec <__flash_rwdata_start+0xffff16d8>
 40227a8:	e005883a 	mov	r2,fp
 40227ac:	003e7906 	br	4022194 <__flash_rwdata_start+0xffff1e80>
 40227b0:	d9002a17 	ldw	r4,168(sp)
 40227b4:	df002783 	ldbu	fp,158(sp)
 40227b8:	dcc02e15 	stw	r19,184(sp)
 40227bc:	d9002915 	stw	r4,164(sp)
 40227c0:	d9002b15 	stw	r4,172(sp)
 40227c4:	d8002a15 	stw	zero,168(sp)
 40227c8:	d8003215 	stw	zero,200(sp)
 40227cc:	003a3b06 	br	40210bc <__flash_rwdata_start+0xffff0da8>
 40227d0:	9080004c 	andi	r2,r18,1
 40227d4:	0039883a 	mov	fp,zero
 40227d8:	10000426 	beq	r2,zero,40227ec <___vfprintf_internal_r+0x1ea4>
 40227dc:	00800c04 	movi	r2,48
 40227e0:	dc001dc4 	addi	r16,sp,119
 40227e4:	d8801dc5 	stb	r2,119(sp)
 40227e8:	003b6406 	br	402157c <__flash_rwdata_start+0xffff1268>
 40227ec:	d8002b15 	stw	zero,172(sp)
 40227f0:	dc001e04 	addi	r16,sp,120
 40227f4:	003a2b06 	br	40210a4 <__flash_rwdata_start+0xffff0d90>
 40227f8:	8c7fff84 	addi	r17,r17,-2
 40227fc:	b5bfffc4 	addi	r22,r22,-1
 4022800:	dd802615 	stw	r22,152(sp)
 4022804:	dc4022c5 	stb	r17,139(sp)
 4022808:	b000bf16 	blt	r22,zero,4022b08 <___vfprintf_internal_r+0x21c0>
 402280c:	00800ac4 	movi	r2,43
 4022810:	d8802305 	stb	r2,140(sp)
 4022814:	00800244 	movi	r2,9
 4022818:	15807016 	blt	r2,r22,40229dc <___vfprintf_internal_r+0x2094>
 402281c:	00800c04 	movi	r2,48
 4022820:	b5800c04 	addi	r22,r22,48
 4022824:	d8802345 	stb	r2,141(sp)
 4022828:	dd802385 	stb	r22,142(sp)
 402282c:	d88023c4 	addi	r2,sp,143
 4022830:	df0022c4 	addi	fp,sp,139
 4022834:	d8c03317 	ldw	r3,204(sp)
 4022838:	1739c83a 	sub	fp,r2,fp
 402283c:	d9003317 	ldw	r4,204(sp)
 4022840:	e0c7883a 	add	r3,fp,r3
 4022844:	df003a15 	stw	fp,232(sp)
 4022848:	d8c02b15 	stw	r3,172(sp)
 402284c:	00800044 	movi	r2,1
 4022850:	1100b30e 	bge	r2,r4,4022b20 <___vfprintf_internal_r+0x21d8>
 4022854:	d8c02b17 	ldw	r3,172(sp)
 4022858:	18c00044 	addi	r3,r3,1
 402285c:	d8c02b15 	stw	r3,172(sp)
 4022860:	1805883a 	mov	r2,r3
 4022864:	1800ac16 	blt	r3,zero,4022b18 <___vfprintf_internal_r+0x21d0>
 4022868:	d8003215 	stw	zero,200(sp)
 402286c:	003e5d06 	br	40221e4 <__flash_rwdata_start+0xffff1ed0>
 4022870:	d9002d17 	ldw	r4,180(sp)
 4022874:	d9801e04 	addi	r6,sp,120
 4022878:	b80b883a 	mov	r5,r23
 402287c:	40276380 	call	4027638 <__sprint_r>
 4022880:	1039351e 	bne	r2,zero,4020d58 <__flash_rwdata_start+0xffff0a44>
 4022884:	dc402617 	ldw	r17,152(sp)
 4022888:	d8c02017 	ldw	r3,128(sp)
 402288c:	d8801f17 	ldw	r2,124(sp)
 4022890:	da000404 	addi	r8,sp,16
 4022894:	003ed606 	br	40223f0 <__flash_rwdata_start+0xffff20dc>
 4022898:	182b883a 	mov	r21,r3
 402289c:	d8002a15 	stw	zero,168(sp)
 40228a0:	00388c06 	br	4020ad4 <__flash_rwdata_start+0xffff07c0>
 40228a4:	d8802a17 	ldw	r2,168(sp)
 40228a8:	103e071e 	bne	r2,zero,40220c8 <__flash_rwdata_start+0xffff1db4>
 40228ac:	dc002a15 	stw	r16,168(sp)
 40228b0:	003e0506 	br	40220c8 <__flash_rwdata_start+0xffff1db4>
 40228b4:	d9002a17 	ldw	r4,168(sp)
 40228b8:	20c00044 	addi	r3,r4,1
 40228bc:	003e0f06 	br	40220fc <__flash_rwdata_start+0xffff1de8>
 40228c0:	01400184 	movi	r5,6
 40228c4:	d9402a15 	stw	r5,168(sp)
 40228c8:	003dff06 	br	40220c8 <__flash_rwdata_start+0xffff1db4>
 40228cc:	d8802104 	addi	r2,sp,132
 40228d0:	d8800315 	stw	r2,12(sp)
 40228d4:	d8802504 	addi	r2,sp,148
 40228d8:	d8800215 	stw	r2,8(sp)
 40228dc:	d8802604 	addi	r2,sp,152
 40228e0:	d8800115 	stw	r2,4(sp)
 40228e4:	d8802a17 	ldw	r2,168(sp)
 40228e8:	d9403617 	ldw	r5,216(sp)
 40228ec:	d9002d17 	ldw	r4,180(sp)
 40228f0:	d8800015 	stw	r2,0(sp)
 40228f4:	01c000c4 	movi	r7,3
 40228f8:	980d883a 	mov	r6,r19
 40228fc:	da003d15 	stw	r8,244(sp)
 4022900:	40230780 	call	4023078 <_dtoa_r>
 4022904:	d8c02a17 	ldw	r3,168(sp)
 4022908:	da003d17 	ldw	r8,244(sp)
 402290c:	1021883a 	mov	r16,r2
 4022910:	10f9883a 	add	fp,r2,r3
 4022914:	81000007 	ldb	r4,0(r16)
 4022918:	00800c04 	movi	r2,48
 402291c:	20805e26 	beq	r4,r2,4022a98 <___vfprintf_internal_r+0x2150>
 4022920:	d8c02617 	ldw	r3,152(sp)
 4022924:	e0f9883a 	add	fp,fp,r3
 4022928:	003e0a06 	br	4022154 <__flash_rwdata_start+0xffff1e40>
 402292c:	00c00b44 	movi	r3,45
 4022930:	24e0003c 	xorhi	r19,r4,32768
 4022934:	d8c02905 	stb	r3,164(sp)
 4022938:	003de906 	br	40220e0 <__flash_rwdata_start+0xffff1dcc>
 402293c:	d8c03217 	ldw	r3,200(sp)
 4022940:	00c07a0e 	bge	zero,r3,4022b2c <___vfprintf_internal_r+0x21e4>
 4022944:	00800044 	movi	r2,1
 4022948:	d9003317 	ldw	r4,204(sp)
 402294c:	1105883a 	add	r2,r2,r4
 4022950:	d8802b15 	stw	r2,172(sp)
 4022954:	10004e16 	blt	r2,zero,4022a90 <___vfprintf_internal_r+0x2148>
 4022958:	044019c4 	movi	r17,103
 402295c:	003e2106 	br	40221e4 <__flash_rwdata_start+0xffff1ed0>
 4022960:	d9002a17 	ldw	r4,168(sp)
 4022964:	d8802104 	addi	r2,sp,132
 4022968:	d8800315 	stw	r2,12(sp)
 402296c:	d9000015 	stw	r4,0(sp)
 4022970:	d8802504 	addi	r2,sp,148
 4022974:	d9403617 	ldw	r5,216(sp)
 4022978:	d9002d17 	ldw	r4,180(sp)
 402297c:	d8800215 	stw	r2,8(sp)
 4022980:	d8802604 	addi	r2,sp,152
 4022984:	d8800115 	stw	r2,4(sp)
 4022988:	01c000c4 	movi	r7,3
 402298c:	980d883a 	mov	r6,r19
 4022990:	da003d15 	stw	r8,244(sp)
 4022994:	40230780 	call	4023078 <_dtoa_r>
 4022998:	d8c02a17 	ldw	r3,168(sp)
 402299c:	da003d17 	ldw	r8,244(sp)
 40229a0:	1021883a 	mov	r16,r2
 40229a4:	00801184 	movi	r2,70
 40229a8:	80f9883a 	add	fp,r16,r3
 40229ac:	88bfd926 	beq	r17,r2,4022914 <__flash_rwdata_start+0xffff2600>
 40229b0:	003de806 	br	4022154 <__flash_rwdata_start+0xffff1e40>
 40229b4:	d9002a17 	ldw	r4,168(sp)
 40229b8:	00c04d0e 	bge	zero,r3,4022af0 <___vfprintf_internal_r+0x21a8>
 40229bc:	2000441e 	bne	r4,zero,4022ad0 <___vfprintf_internal_r+0x2188>
 40229c0:	9480004c 	andi	r18,r18,1
 40229c4:	9000421e 	bne	r18,zero,4022ad0 <___vfprintf_internal_r+0x2188>
 40229c8:	1805883a 	mov	r2,r3
 40229cc:	18006f16 	blt	r3,zero,4022b8c <___vfprintf_internal_r+0x2244>
 40229d0:	d8c03217 	ldw	r3,200(sp)
 40229d4:	d8c02b15 	stw	r3,172(sp)
 40229d8:	003e0206 	br	40221e4 <__flash_rwdata_start+0xffff1ed0>
 40229dc:	df0022c4 	addi	fp,sp,139
 40229e0:	dc002a15 	stw	r16,168(sp)
 40229e4:	4027883a 	mov	r19,r8
 40229e8:	e021883a 	mov	r16,fp
 40229ec:	b009883a 	mov	r4,r22
 40229f0:	01400284 	movi	r5,10
 40229f4:	40207080 	call	4020708 <__modsi3>
 40229f8:	10800c04 	addi	r2,r2,48
 40229fc:	843fffc4 	addi	r16,r16,-1
 4022a00:	b009883a 	mov	r4,r22
 4022a04:	01400284 	movi	r5,10
 4022a08:	80800005 	stb	r2,0(r16)
 4022a0c:	40206840 	call	4020684 <__divsi3>
 4022a10:	102d883a 	mov	r22,r2
 4022a14:	00800244 	movi	r2,9
 4022a18:	15bff416 	blt	r2,r22,40229ec <__flash_rwdata_start+0xffff26d8>
 4022a1c:	9811883a 	mov	r8,r19
 4022a20:	b0800c04 	addi	r2,r22,48
 4022a24:	8027883a 	mov	r19,r16
 4022a28:	997fffc4 	addi	r5,r19,-1
 4022a2c:	98bfffc5 	stb	r2,-1(r19)
 4022a30:	dc002a17 	ldw	r16,168(sp)
 4022a34:	2f006d2e 	bgeu	r5,fp,4022bec <___vfprintf_internal_r+0x22a4>
 4022a38:	d9c02384 	addi	r7,sp,142
 4022a3c:	3ccfc83a 	sub	r7,r7,r19
 4022a40:	d9002344 	addi	r4,sp,141
 4022a44:	e1cf883a 	add	r7,fp,r7
 4022a48:	00000106 	br	4022a50 <___vfprintf_internal_r+0x2108>
 4022a4c:	28800003 	ldbu	r2,0(r5)
 4022a50:	20800005 	stb	r2,0(r4)
 4022a54:	21000044 	addi	r4,r4,1
 4022a58:	29400044 	addi	r5,r5,1
 4022a5c:	393ffb1e 	bne	r7,r4,4022a4c <__flash_rwdata_start+0xffff2738>
 4022a60:	d8802304 	addi	r2,sp,140
 4022a64:	14c5c83a 	sub	r2,r2,r19
 4022a68:	d8c02344 	addi	r3,sp,141
 4022a6c:	1885883a 	add	r2,r3,r2
 4022a70:	003f7006 	br	4022834 <__flash_rwdata_start+0xffff2520>
 4022a74:	0005883a 	mov	r2,zero
 4022a78:	003f0f06 	br	40226b8 <__flash_rwdata_start+0xffff23a4>
 4022a7c:	d8c03217 	ldw	r3,200(sp)
 4022a80:	18c00044 	addi	r3,r3,1
 4022a84:	d8c02b15 	stw	r3,172(sp)
 4022a88:	1805883a 	mov	r2,r3
 4022a8c:	183fb20e 	bge	r3,zero,4022958 <__flash_rwdata_start+0xffff2644>
 4022a90:	0005883a 	mov	r2,zero
 4022a94:	003fb006 	br	4022958 <__flash_rwdata_start+0xffff2644>
 4022a98:	d9003617 	ldw	r4,216(sp)
 4022a9c:	000d883a 	mov	r6,zero
 4022aa0:	000f883a 	mov	r7,zero
 4022aa4:	980b883a 	mov	r5,r19
 4022aa8:	d8c03c15 	stw	r3,240(sp)
 4022aac:	da003d15 	stw	r8,244(sp)
 4022ab0:	402c0500 	call	402c050 <__eqdf2>
 4022ab4:	d8c03c17 	ldw	r3,240(sp)
 4022ab8:	da003d17 	ldw	r8,244(sp)
 4022abc:	103f9826 	beq	r2,zero,4022920 <__flash_rwdata_start+0xffff260c>
 4022ac0:	00800044 	movi	r2,1
 4022ac4:	10c7c83a 	sub	r3,r2,r3
 4022ac8:	d8c02615 	stw	r3,152(sp)
 4022acc:	003f9506 	br	4022924 <__flash_rwdata_start+0xffff2610>
 4022ad0:	d9002a17 	ldw	r4,168(sp)
 4022ad4:	d8c03217 	ldw	r3,200(sp)
 4022ad8:	20800044 	addi	r2,r4,1
 4022adc:	1885883a 	add	r2,r3,r2
 4022ae0:	d8802b15 	stw	r2,172(sp)
 4022ae4:	103dbf0e 	bge	r2,zero,40221e4 <__flash_rwdata_start+0xffff1ed0>
 4022ae8:	0005883a 	mov	r2,zero
 4022aec:	003dbd06 	br	40221e4 <__flash_rwdata_start+0xffff1ed0>
 4022af0:	2000201e 	bne	r4,zero,4022b74 <___vfprintf_internal_r+0x222c>
 4022af4:	9480004c 	andi	r18,r18,1
 4022af8:	90001e1e 	bne	r18,zero,4022b74 <___vfprintf_internal_r+0x222c>
 4022afc:	00800044 	movi	r2,1
 4022b00:	d8802b15 	stw	r2,172(sp)
 4022b04:	003db706 	br	40221e4 <__flash_rwdata_start+0xffff1ed0>
 4022b08:	00800b44 	movi	r2,45
 4022b0c:	05adc83a 	sub	r22,zero,r22
 4022b10:	d8802305 	stb	r2,140(sp)
 4022b14:	003f3f06 	br	4022814 <__flash_rwdata_start+0xffff2500>
 4022b18:	0005883a 	mov	r2,zero
 4022b1c:	003f5206 	br	4022868 <__flash_rwdata_start+0xffff2554>
 4022b20:	90a4703a 	and	r18,r18,r2
 4022b24:	903f4e26 	beq	r18,zero,4022860 <__flash_rwdata_start+0xffff254c>
 4022b28:	003f4a06 	br	4022854 <__flash_rwdata_start+0xffff2540>
 4022b2c:	00800084 	movi	r2,2
 4022b30:	10c5c83a 	sub	r2,r2,r3
 4022b34:	003f8406 	br	4022948 <__flash_rwdata_start+0xffff2634>
 4022b38:	d9402e17 	ldw	r5,184(sp)
 4022b3c:	d9002e17 	ldw	r4,184(sp)
 4022b40:	ac400043 	ldbu	r17,1(r21)
 4022b44:	29400017 	ldw	r5,0(r5)
 4022b48:	20800104 	addi	r2,r4,4
 4022b4c:	d8802e15 	stw	r2,184(sp)
 4022b50:	d9402a15 	stw	r5,168(sp)
 4022b54:	182b883a 	mov	r21,r3
 4022b58:	283e7b0e 	bge	r5,zero,4022548 <__flash_rwdata_start+0xffff2234>
 4022b5c:	8c403fcc 	andi	r17,r17,255
 4022b60:	017fffc4 	movi	r5,-1
 4022b64:	8c40201c 	xori	r17,r17,128
 4022b68:	d9402a15 	stw	r5,168(sp)
 4022b6c:	8c7fe004 	addi	r17,r17,-128
 4022b70:	0037d706 	br	4020ad0 <__flash_rwdata_start+0xffff07bc>
 4022b74:	d8c02a17 	ldw	r3,168(sp)
 4022b78:	18c00084 	addi	r3,r3,2
 4022b7c:	d8c02b15 	stw	r3,172(sp)
 4022b80:	1805883a 	mov	r2,r3
 4022b84:	183d970e 	bge	r3,zero,40221e4 <__flash_rwdata_start+0xffff1ed0>
 4022b88:	003fd706 	br	4022ae8 <__flash_rwdata_start+0xffff27d4>
 4022b8c:	0005883a 	mov	r2,zero
 4022b90:	003f8f06 	br	40229d0 <__flash_rwdata_start+0xffff26bc>
 4022b94:	9080004c 	andi	r2,r18,1
 4022b98:	103f821e 	bne	r2,zero,40229a4 <__flash_rwdata_start+0xffff2690>
 4022b9c:	d8802117 	ldw	r2,132(sp)
 4022ba0:	1405c83a 	sub	r2,r2,r16
 4022ba4:	d8803315 	stw	r2,204(sp)
 4022ba8:	b47ef426 	beq	r22,r17,402277c <__flash_rwdata_start+0xffff2468>
 4022bac:	dd802617 	ldw	r22,152(sp)
 4022bb0:	003f1206 	br	40227fc <__flash_rwdata_start+0xffff24e8>
 4022bb4:	d8c02b03 	ldbu	r3,172(sp)
 4022bb8:	d8c02785 	stb	r3,158(sp)
 4022bbc:	0038df06 	br	4020f3c <__flash_rwdata_start+0xffff0c28>
 4022bc0:	d8c02b03 	ldbu	r3,172(sp)
 4022bc4:	d8c02785 	stb	r3,158(sp)
 4022bc8:	0038aa06 	br	4020e74 <__flash_rwdata_start+0xffff0b60>
 4022bcc:	d8c02b03 	ldbu	r3,172(sp)
 4022bd0:	d8c02785 	stb	r3,158(sp)
 4022bd4:	003a4306 	br	40214e4 <__flash_rwdata_start+0xffff11d0>
 4022bd8:	d8c02b03 	ldbu	r3,172(sp)
 4022bdc:	d8c02785 	stb	r3,158(sp)
 4022be0:	003af506 	br	40217b8 <__flash_rwdata_start+0xffff14a4>
 4022be4:	0005883a 	mov	r2,zero
 4022be8:	003d7b06 	br	40221d8 <__flash_rwdata_start+0xffff1ec4>
 4022bec:	d8802344 	addi	r2,sp,141
 4022bf0:	003f1006 	br	4022834 <__flash_rwdata_start+0xffff2520>
 4022bf4:	d8c02b03 	ldbu	r3,172(sp)
 4022bf8:	d8c02785 	stb	r3,158(sp)
 4022bfc:	0038fd06 	br	4020ff4 <__flash_rwdata_start+0xffff0ce0>
 4022c00:	d8c02b03 	ldbu	r3,172(sp)
 4022c04:	d8c02785 	stb	r3,158(sp)
 4022c08:	003a9706 	br	4021668 <__flash_rwdata_start+0xffff1354>
 4022c0c:	d8c02b03 	ldbu	r3,172(sp)
 4022c10:	d8c02785 	stb	r3,158(sp)
 4022c14:	003a1806 	br	4021478 <__flash_rwdata_start+0xffff1164>
 4022c18:	d8c02b03 	ldbu	r3,172(sp)
 4022c1c:	d8c02785 	stb	r3,158(sp)
 4022c20:	003abe06 	br	402171c <__flash_rwdata_start+0xffff1408>

04022c24 <__vfprintf_internal>:
 4022c24:	00800034 	movhi	r2,0
 4022c28:	10878b04 	addi	r2,r2,7724
 4022c2c:	300f883a 	mov	r7,r6
 4022c30:	280d883a 	mov	r6,r5
 4022c34:	200b883a 	mov	r5,r4
 4022c38:	11000017 	ldw	r4,0(r2)
 4022c3c:	40209481 	jmpi	4020948 <___vfprintf_internal_r>

04022c40 <__sbprintf>:
 4022c40:	2880030b 	ldhu	r2,12(r5)
 4022c44:	2ac01917 	ldw	r11,100(r5)
 4022c48:	2a80038b 	ldhu	r10,14(r5)
 4022c4c:	2a400717 	ldw	r9,28(r5)
 4022c50:	2a000917 	ldw	r8,36(r5)
 4022c54:	defee204 	addi	sp,sp,-1144
 4022c58:	00c10004 	movi	r3,1024
 4022c5c:	dc011a15 	stw	r16,1128(sp)
 4022c60:	10bfff4c 	andi	r2,r2,65533
 4022c64:	2821883a 	mov	r16,r5
 4022c68:	d8cb883a 	add	r5,sp,r3
 4022c6c:	dc811c15 	stw	r18,1136(sp)
 4022c70:	dc411b15 	stw	r17,1132(sp)
 4022c74:	dfc11d15 	stw	ra,1140(sp)
 4022c78:	2025883a 	mov	r18,r4
 4022c7c:	d881030d 	sth	r2,1036(sp)
 4022c80:	dac11915 	stw	r11,1124(sp)
 4022c84:	da81038d 	sth	r10,1038(sp)
 4022c88:	da410715 	stw	r9,1052(sp)
 4022c8c:	da010915 	stw	r8,1060(sp)
 4022c90:	dec10015 	stw	sp,1024(sp)
 4022c94:	dec10415 	stw	sp,1040(sp)
 4022c98:	d8c10215 	stw	r3,1032(sp)
 4022c9c:	d8c10515 	stw	r3,1044(sp)
 4022ca0:	d8010615 	stw	zero,1048(sp)
 4022ca4:	40209480 	call	4020948 <___vfprintf_internal_r>
 4022ca8:	1023883a 	mov	r17,r2
 4022cac:	10000416 	blt	r2,zero,4022cc0 <__sbprintf+0x80>
 4022cb0:	d9410004 	addi	r5,sp,1024
 4022cb4:	9009883a 	mov	r4,r18
 4022cb8:	402491c0 	call	402491c <_fflush_r>
 4022cbc:	10000d1e 	bne	r2,zero,4022cf4 <__sbprintf+0xb4>
 4022cc0:	d881030b 	ldhu	r2,1036(sp)
 4022cc4:	1080100c 	andi	r2,r2,64
 4022cc8:	10000326 	beq	r2,zero,4022cd8 <__sbprintf+0x98>
 4022ccc:	8080030b 	ldhu	r2,12(r16)
 4022cd0:	10801014 	ori	r2,r2,64
 4022cd4:	8080030d 	sth	r2,12(r16)
 4022cd8:	8805883a 	mov	r2,r17
 4022cdc:	dfc11d17 	ldw	ra,1140(sp)
 4022ce0:	dc811c17 	ldw	r18,1136(sp)
 4022ce4:	dc411b17 	ldw	r17,1132(sp)
 4022ce8:	dc011a17 	ldw	r16,1128(sp)
 4022cec:	dec11e04 	addi	sp,sp,1144
 4022cf0:	f800283a 	ret
 4022cf4:	047fffc4 	movi	r17,-1
 4022cf8:	003ff106 	br	4022cc0 <__flash_rwdata_start+0xffff29ac>

04022cfc <__swsetup_r>:
 4022cfc:	00800034 	movhi	r2,0
 4022d00:	defffd04 	addi	sp,sp,-12
 4022d04:	10878b04 	addi	r2,r2,7724
 4022d08:	dc400115 	stw	r17,4(sp)
 4022d0c:	2023883a 	mov	r17,r4
 4022d10:	11000017 	ldw	r4,0(r2)
 4022d14:	dc000015 	stw	r16,0(sp)
 4022d18:	dfc00215 	stw	ra,8(sp)
 4022d1c:	2821883a 	mov	r16,r5
 4022d20:	20000226 	beq	r4,zero,4022d2c <__swsetup_r+0x30>
 4022d24:	20800e17 	ldw	r2,56(r4)
 4022d28:	10003126 	beq	r2,zero,4022df0 <__swsetup_r+0xf4>
 4022d2c:	8080030b 	ldhu	r2,12(r16)
 4022d30:	10c0020c 	andi	r3,r2,8
 4022d34:	1009883a 	mov	r4,r2
 4022d38:	18000f26 	beq	r3,zero,4022d78 <__swsetup_r+0x7c>
 4022d3c:	80c00417 	ldw	r3,16(r16)
 4022d40:	18001526 	beq	r3,zero,4022d98 <__swsetup_r+0x9c>
 4022d44:	1100004c 	andi	r4,r2,1
 4022d48:	20001c1e 	bne	r4,zero,4022dbc <__swsetup_r+0xc0>
 4022d4c:	1080008c 	andi	r2,r2,2
 4022d50:	1000291e 	bne	r2,zero,4022df8 <__swsetup_r+0xfc>
 4022d54:	80800517 	ldw	r2,20(r16)
 4022d58:	80800215 	stw	r2,8(r16)
 4022d5c:	18001c26 	beq	r3,zero,4022dd0 <__swsetup_r+0xd4>
 4022d60:	0005883a 	mov	r2,zero
 4022d64:	dfc00217 	ldw	ra,8(sp)
 4022d68:	dc400117 	ldw	r17,4(sp)
 4022d6c:	dc000017 	ldw	r16,0(sp)
 4022d70:	dec00304 	addi	sp,sp,12
 4022d74:	f800283a 	ret
 4022d78:	2080040c 	andi	r2,r4,16
 4022d7c:	10002e26 	beq	r2,zero,4022e38 <__swsetup_r+0x13c>
 4022d80:	2080010c 	andi	r2,r4,4
 4022d84:	10001e1e 	bne	r2,zero,4022e00 <__swsetup_r+0x104>
 4022d88:	80c00417 	ldw	r3,16(r16)
 4022d8c:	20800214 	ori	r2,r4,8
 4022d90:	8080030d 	sth	r2,12(r16)
 4022d94:	183feb1e 	bne	r3,zero,4022d44 <__flash_rwdata_start+0xffff2a30>
 4022d98:	1100a00c 	andi	r4,r2,640
 4022d9c:	01408004 	movi	r5,512
 4022da0:	217fe826 	beq	r4,r5,4022d44 <__flash_rwdata_start+0xffff2a30>
 4022da4:	800b883a 	mov	r5,r16
 4022da8:	8809883a 	mov	r4,r17
 4022dac:	40253f00 	call	40253f0 <__smakebuf_r>
 4022db0:	8080030b 	ldhu	r2,12(r16)
 4022db4:	80c00417 	ldw	r3,16(r16)
 4022db8:	003fe206 	br	4022d44 <__flash_rwdata_start+0xffff2a30>
 4022dbc:	80800517 	ldw	r2,20(r16)
 4022dc0:	80000215 	stw	zero,8(r16)
 4022dc4:	0085c83a 	sub	r2,zero,r2
 4022dc8:	80800615 	stw	r2,24(r16)
 4022dcc:	183fe41e 	bne	r3,zero,4022d60 <__flash_rwdata_start+0xffff2a4c>
 4022dd0:	80c0030b 	ldhu	r3,12(r16)
 4022dd4:	0005883a 	mov	r2,zero
 4022dd8:	1900200c 	andi	r4,r3,128
 4022ddc:	203fe126 	beq	r4,zero,4022d64 <__flash_rwdata_start+0xffff2a50>
 4022de0:	18c01014 	ori	r3,r3,64
 4022de4:	80c0030d 	sth	r3,12(r16)
 4022de8:	00bfffc4 	movi	r2,-1
 4022dec:	003fdd06 	br	4022d64 <__flash_rwdata_start+0xffff2a50>
 4022df0:	4024d080 	call	4024d08 <__sinit>
 4022df4:	003fcd06 	br	4022d2c <__flash_rwdata_start+0xffff2a18>
 4022df8:	0005883a 	mov	r2,zero
 4022dfc:	003fd606 	br	4022d58 <__flash_rwdata_start+0xffff2a44>
 4022e00:	81400c17 	ldw	r5,48(r16)
 4022e04:	28000626 	beq	r5,zero,4022e20 <__swsetup_r+0x124>
 4022e08:	80801004 	addi	r2,r16,64
 4022e0c:	28800326 	beq	r5,r2,4022e1c <__swsetup_r+0x120>
 4022e10:	8809883a 	mov	r4,r17
 4022e14:	4024e7c0 	call	4024e7c <_free_r>
 4022e18:	8100030b 	ldhu	r4,12(r16)
 4022e1c:	80000c15 	stw	zero,48(r16)
 4022e20:	80c00417 	ldw	r3,16(r16)
 4022e24:	00bff6c4 	movi	r2,-37
 4022e28:	1108703a 	and	r4,r2,r4
 4022e2c:	80000115 	stw	zero,4(r16)
 4022e30:	80c00015 	stw	r3,0(r16)
 4022e34:	003fd506 	br	4022d8c <__flash_rwdata_start+0xffff2a78>
 4022e38:	00800244 	movi	r2,9
 4022e3c:	88800015 	stw	r2,0(r17)
 4022e40:	20801014 	ori	r2,r4,64
 4022e44:	8080030d 	sth	r2,12(r16)
 4022e48:	00bfffc4 	movi	r2,-1
 4022e4c:	003fc506 	br	4022d64 <__flash_rwdata_start+0xffff2a50>

04022e50 <quorem>:
 4022e50:	defff204 	addi	sp,sp,-56
 4022e54:	ddc00b15 	stw	r23,44(sp)
 4022e58:	20800417 	ldw	r2,16(r4)
 4022e5c:	2dc00417 	ldw	r23,16(r5)
 4022e60:	dfc00d15 	stw	ra,52(sp)
 4022e64:	df000c15 	stw	fp,48(sp)
 4022e68:	dd800a15 	stw	r22,40(sp)
 4022e6c:	dd400915 	stw	r21,36(sp)
 4022e70:	dd000815 	stw	r20,32(sp)
 4022e74:	dcc00715 	stw	r19,28(sp)
 4022e78:	dc800615 	stw	r18,24(sp)
 4022e7c:	dc400515 	stw	r17,20(sp)
 4022e80:	dc000415 	stw	r16,16(sp)
 4022e84:	15c07a16 	blt	r2,r23,4023070 <quorem+0x220>
 4022e88:	bdffffc4 	addi	r23,r23,-1
 4022e8c:	bde9883a 	add	r20,r23,r23
 4022e90:	28c00504 	addi	r3,r5,20
 4022e94:	a529883a 	add	r20,r20,r20
 4022e98:	1d39883a 	add	fp,r3,r20
 4022e9c:	24c00504 	addi	r19,r4,20
 4022ea0:	d9400215 	stw	r5,8(sp)
 4022ea4:	9d29883a 	add	r20,r19,r20
 4022ea8:	e1400017 	ldw	r5,0(fp)
 4022eac:	d9000015 	stw	r4,0(sp)
 4022eb0:	a1000017 	ldw	r4,0(r20)
 4022eb4:	29400044 	addi	r5,r5,1
 4022eb8:	d8c00115 	stw	r3,4(sp)
 4022ebc:	dd000315 	stw	r20,12(sp)
 4022ec0:	402077c0 	call	402077c <__udivsi3>
 4022ec4:	1025883a 	mov	r18,r2
 4022ec8:	10003026 	beq	r2,zero,4022f8c <quorem+0x13c>
 4022ecc:	dc400117 	ldw	r17,4(sp)
 4022ed0:	9829883a 	mov	r20,r19
 4022ed4:	002d883a 	mov	r22,zero
 4022ed8:	0021883a 	mov	r16,zero
 4022edc:	8d400017 	ldw	r21,0(r17)
 4022ee0:	900b883a 	mov	r5,r18
 4022ee4:	8c400104 	addi	r17,r17,4
 4022ee8:	a93fffcc 	andi	r4,r21,65535
 4022eec:	40208380 	call	4020838 <__mulsi3>
 4022ef0:	a808d43a 	srli	r4,r21,16
 4022ef4:	900b883a 	mov	r5,r18
 4022ef8:	15ad883a 	add	r22,r2,r22
 4022efc:	40208380 	call	4020838 <__mulsi3>
 4022f00:	a1000017 	ldw	r4,0(r20)
 4022f04:	b00cd43a 	srli	r6,r22,16
 4022f08:	b0ffffcc 	andi	r3,r22,65535
 4022f0c:	217fffcc 	andi	r5,r4,65535
 4022f10:	2c21883a 	add	r16,r5,r16
 4022f14:	80c7c83a 	sub	r3,r16,r3
 4022f18:	2008d43a 	srli	r4,r4,16
 4022f1c:	1185883a 	add	r2,r2,r6
 4022f20:	1821d43a 	srai	r16,r3,16
 4022f24:	117fffcc 	andi	r5,r2,65535
 4022f28:	2149c83a 	sub	r4,r4,r5
 4022f2c:	2421883a 	add	r16,r4,r16
 4022f30:	8008943a 	slli	r4,r16,16
 4022f34:	18ffffcc 	andi	r3,r3,65535
 4022f38:	102cd43a 	srli	r22,r2,16
 4022f3c:	20c8b03a 	or	r4,r4,r3
 4022f40:	a1000015 	stw	r4,0(r20)
 4022f44:	8021d43a 	srai	r16,r16,16
 4022f48:	a5000104 	addi	r20,r20,4
 4022f4c:	e47fe32e 	bgeu	fp,r17,4022edc <__flash_rwdata_start+0xffff2bc8>
 4022f50:	d8c00317 	ldw	r3,12(sp)
 4022f54:	18800017 	ldw	r2,0(r3)
 4022f58:	10000c1e 	bne	r2,zero,4022f8c <quorem+0x13c>
 4022f5c:	18bfff04 	addi	r2,r3,-4
 4022f60:	9880082e 	bgeu	r19,r2,4022f84 <quorem+0x134>
 4022f64:	18ffff17 	ldw	r3,-4(r3)
 4022f68:	18000326 	beq	r3,zero,4022f78 <quorem+0x128>
 4022f6c:	00000506 	br	4022f84 <quorem+0x134>
 4022f70:	10c00017 	ldw	r3,0(r2)
 4022f74:	1800031e 	bne	r3,zero,4022f84 <quorem+0x134>
 4022f78:	10bfff04 	addi	r2,r2,-4
 4022f7c:	bdffffc4 	addi	r23,r23,-1
 4022f80:	98bffb36 	bltu	r19,r2,4022f70 <__flash_rwdata_start+0xffff2c5c>
 4022f84:	d8c00017 	ldw	r3,0(sp)
 4022f88:	1dc00415 	stw	r23,16(r3)
 4022f8c:	d9400217 	ldw	r5,8(sp)
 4022f90:	d9000017 	ldw	r4,0(sp)
 4022f94:	4026a900 	call	4026a90 <__mcmp>
 4022f98:	10002816 	blt	r2,zero,402303c <quorem+0x1ec>
 4022f9c:	dc400117 	ldw	r17,4(sp)
 4022fa0:	94800044 	addi	r18,r18,1
 4022fa4:	980d883a 	mov	r6,r19
 4022fa8:	0007883a 	mov	r3,zero
 4022fac:	31000017 	ldw	r4,0(r6)
 4022fb0:	89400017 	ldw	r5,0(r17)
 4022fb4:	31800104 	addi	r6,r6,4
 4022fb8:	20bfffcc 	andi	r2,r4,65535
 4022fbc:	10c7883a 	add	r3,r2,r3
 4022fc0:	28bfffcc 	andi	r2,r5,65535
 4022fc4:	1885c83a 	sub	r2,r3,r2
 4022fc8:	280ad43a 	srli	r5,r5,16
 4022fcc:	2008d43a 	srli	r4,r4,16
 4022fd0:	1007d43a 	srai	r3,r2,16
 4022fd4:	10bfffcc 	andi	r2,r2,65535
 4022fd8:	2149c83a 	sub	r4,r4,r5
 4022fdc:	20c9883a 	add	r4,r4,r3
 4022fe0:	200a943a 	slli	r5,r4,16
 4022fe4:	8c400104 	addi	r17,r17,4
 4022fe8:	2007d43a 	srai	r3,r4,16
 4022fec:	2884b03a 	or	r2,r5,r2
 4022ff0:	30bfff15 	stw	r2,-4(r6)
 4022ff4:	e47fed2e 	bgeu	fp,r17,4022fac <__flash_rwdata_start+0xffff2c98>
 4022ff8:	bdc5883a 	add	r2,r23,r23
 4022ffc:	1085883a 	add	r2,r2,r2
 4023000:	9887883a 	add	r3,r19,r2
 4023004:	18800017 	ldw	r2,0(r3)
 4023008:	10000c1e 	bne	r2,zero,402303c <quorem+0x1ec>
 402300c:	18bfff04 	addi	r2,r3,-4
 4023010:	9880082e 	bgeu	r19,r2,4023034 <quorem+0x1e4>
 4023014:	18ffff17 	ldw	r3,-4(r3)
 4023018:	18000326 	beq	r3,zero,4023028 <quorem+0x1d8>
 402301c:	00000506 	br	4023034 <quorem+0x1e4>
 4023020:	10c00017 	ldw	r3,0(r2)
 4023024:	1800031e 	bne	r3,zero,4023034 <quorem+0x1e4>
 4023028:	10bfff04 	addi	r2,r2,-4
 402302c:	bdffffc4 	addi	r23,r23,-1
 4023030:	98bffb36 	bltu	r19,r2,4023020 <__flash_rwdata_start+0xffff2d0c>
 4023034:	d8c00017 	ldw	r3,0(sp)
 4023038:	1dc00415 	stw	r23,16(r3)
 402303c:	9005883a 	mov	r2,r18
 4023040:	dfc00d17 	ldw	ra,52(sp)
 4023044:	df000c17 	ldw	fp,48(sp)
 4023048:	ddc00b17 	ldw	r23,44(sp)
 402304c:	dd800a17 	ldw	r22,40(sp)
 4023050:	dd400917 	ldw	r21,36(sp)
 4023054:	dd000817 	ldw	r20,32(sp)
 4023058:	dcc00717 	ldw	r19,28(sp)
 402305c:	dc800617 	ldw	r18,24(sp)
 4023060:	dc400517 	ldw	r17,20(sp)
 4023064:	dc000417 	ldw	r16,16(sp)
 4023068:	dec00e04 	addi	sp,sp,56
 402306c:	f800283a 	ret
 4023070:	0005883a 	mov	r2,zero
 4023074:	003ff206 	br	4023040 <__flash_rwdata_start+0xffff2d2c>

04023078 <_dtoa_r>:
 4023078:	20801017 	ldw	r2,64(r4)
 402307c:	deffde04 	addi	sp,sp,-136
 4023080:	df002015 	stw	fp,128(sp)
 4023084:	dcc01b15 	stw	r19,108(sp)
 4023088:	dc801a15 	stw	r18,104(sp)
 402308c:	dc401915 	stw	r17,100(sp)
 4023090:	dc001815 	stw	r16,96(sp)
 4023094:	dfc02115 	stw	ra,132(sp)
 4023098:	ddc01f15 	stw	r23,124(sp)
 402309c:	dd801e15 	stw	r22,120(sp)
 40230a0:	dd401d15 	stw	r21,116(sp)
 40230a4:	dd001c15 	stw	r20,112(sp)
 40230a8:	d9c00315 	stw	r7,12(sp)
 40230ac:	2039883a 	mov	fp,r4
 40230b0:	3023883a 	mov	r17,r6
 40230b4:	2825883a 	mov	r18,r5
 40230b8:	dc002417 	ldw	r16,144(sp)
 40230bc:	3027883a 	mov	r19,r6
 40230c0:	10000826 	beq	r2,zero,40230e4 <_dtoa_r+0x6c>
 40230c4:	21801117 	ldw	r6,68(r4)
 40230c8:	00c00044 	movi	r3,1
 40230cc:	100b883a 	mov	r5,r2
 40230d0:	1986983a 	sll	r3,r3,r6
 40230d4:	11800115 	stw	r6,4(r2)
 40230d8:	10c00215 	stw	r3,8(r2)
 40230dc:	40261b40 	call	40261b4 <_Bfree>
 40230e0:	e0001015 	stw	zero,64(fp)
 40230e4:	88002e16 	blt	r17,zero,40231a0 <_dtoa_r+0x128>
 40230e8:	80000015 	stw	zero,0(r16)
 40230ec:	889ffc2c 	andhi	r2,r17,32752
 40230f0:	00dffc34 	movhi	r3,32752
 40230f4:	10c01c26 	beq	r2,r3,4023168 <_dtoa_r+0xf0>
 40230f8:	000d883a 	mov	r6,zero
 40230fc:	000f883a 	mov	r7,zero
 4023100:	9009883a 	mov	r4,r18
 4023104:	980b883a 	mov	r5,r19
 4023108:	402c0500 	call	402c050 <__eqdf2>
 402310c:	10002b1e 	bne	r2,zero,40231bc <_dtoa_r+0x144>
 4023110:	d9c02317 	ldw	r7,140(sp)
 4023114:	00800044 	movi	r2,1
 4023118:	38800015 	stw	r2,0(r7)
 402311c:	d8802517 	ldw	r2,148(sp)
 4023120:	10019e26 	beq	r2,zero,402379c <_dtoa_r+0x724>
 4023124:	d8c02517 	ldw	r3,148(sp)
 4023128:	00800034 	movhi	r2,0
 402312c:	10802244 	addi	r2,r2,137
 4023130:	18800015 	stw	r2,0(r3)
 4023134:	10bfffc4 	addi	r2,r2,-1
 4023138:	dfc02117 	ldw	ra,132(sp)
 402313c:	df002017 	ldw	fp,128(sp)
 4023140:	ddc01f17 	ldw	r23,124(sp)
 4023144:	dd801e17 	ldw	r22,120(sp)
 4023148:	dd401d17 	ldw	r21,116(sp)
 402314c:	dd001c17 	ldw	r20,112(sp)
 4023150:	dcc01b17 	ldw	r19,108(sp)
 4023154:	dc801a17 	ldw	r18,104(sp)
 4023158:	dc401917 	ldw	r17,100(sp)
 402315c:	dc001817 	ldw	r16,96(sp)
 4023160:	dec02204 	addi	sp,sp,136
 4023164:	f800283a 	ret
 4023168:	d8c02317 	ldw	r3,140(sp)
 402316c:	0089c3c4 	movi	r2,9999
 4023170:	18800015 	stw	r2,0(r3)
 4023174:	90017726 	beq	r18,zero,4023754 <_dtoa_r+0x6dc>
 4023178:	00800034 	movhi	r2,0
 402317c:	10802e04 	addi	r2,r2,184
 4023180:	d9002517 	ldw	r4,148(sp)
 4023184:	203fec26 	beq	r4,zero,4023138 <__flash_rwdata_start+0xffff2e24>
 4023188:	10c000c7 	ldb	r3,3(r2)
 402318c:	1801781e 	bne	r3,zero,4023770 <_dtoa_r+0x6f8>
 4023190:	10c000c4 	addi	r3,r2,3
 4023194:	d9802517 	ldw	r6,148(sp)
 4023198:	30c00015 	stw	r3,0(r6)
 402319c:	003fe606 	br	4023138 <__flash_rwdata_start+0xffff2e24>
 40231a0:	04e00034 	movhi	r19,32768
 40231a4:	9cffffc4 	addi	r19,r19,-1
 40231a8:	00800044 	movi	r2,1
 40231ac:	8ce6703a 	and	r19,r17,r19
 40231b0:	80800015 	stw	r2,0(r16)
 40231b4:	9823883a 	mov	r17,r19
 40231b8:	003fcc06 	br	40230ec <__flash_rwdata_start+0xffff2dd8>
 40231bc:	d8800204 	addi	r2,sp,8
 40231c0:	d8800015 	stw	r2,0(sp)
 40231c4:	d9c00104 	addi	r7,sp,4
 40231c8:	900b883a 	mov	r5,r18
 40231cc:	980d883a 	mov	r6,r19
 40231d0:	e009883a 	mov	r4,fp
 40231d4:	8820d53a 	srli	r16,r17,20
 40231d8:	4026e5c0 	call	4026e5c <__d2b>
 40231dc:	d8800915 	stw	r2,36(sp)
 40231e0:	8001651e 	bne	r16,zero,4023778 <_dtoa_r+0x700>
 40231e4:	dd800217 	ldw	r22,8(sp)
 40231e8:	dc000117 	ldw	r16,4(sp)
 40231ec:	00800804 	movi	r2,32
 40231f0:	b421883a 	add	r16,r22,r16
 40231f4:	80c10c84 	addi	r3,r16,1074
 40231f8:	10c2d10e 	bge	r2,r3,4023d40 <_dtoa_r+0xcc8>
 40231fc:	00801004 	movi	r2,64
 4023200:	81010484 	addi	r4,r16,1042
 4023204:	10c7c83a 	sub	r3,r2,r3
 4023208:	9108d83a 	srl	r4,r18,r4
 402320c:	88e2983a 	sll	r17,r17,r3
 4023210:	2448b03a 	or	r4,r4,r17
 4023214:	402d56c0 	call	402d56c <__floatunsidf>
 4023218:	017f8434 	movhi	r5,65040
 402321c:	01800044 	movi	r6,1
 4023220:	1009883a 	mov	r4,r2
 4023224:	194b883a 	add	r5,r3,r5
 4023228:	843fffc4 	addi	r16,r16,-1
 402322c:	d9801115 	stw	r6,68(sp)
 4023230:	000d883a 	mov	r6,zero
 4023234:	01cffe34 	movhi	r7,16376
 4023238:	402cb140 	call	402cb14 <__subdf3>
 402323c:	0198dbf4 	movhi	r6,25455
 4023240:	01cff4f4 	movhi	r7,16339
 4023244:	3190d844 	addi	r6,r6,17249
 4023248:	39e1e9c4 	addi	r7,r7,-30809
 402324c:	1009883a 	mov	r4,r2
 4023250:	180b883a 	mov	r5,r3
 4023254:	402c2a80 	call	402c2a8 <__muldf3>
 4023258:	01a2d874 	movhi	r6,35681
 402325c:	01cff1f4 	movhi	r7,16327
 4023260:	31b22cc4 	addi	r6,r6,-14157
 4023264:	39e28a04 	addi	r7,r7,-30168
 4023268:	180b883a 	mov	r5,r3
 402326c:	1009883a 	mov	r4,r2
 4023270:	402add40 	call	402add4 <__adddf3>
 4023274:	8009883a 	mov	r4,r16
 4023278:	1029883a 	mov	r20,r2
 402327c:	1823883a 	mov	r17,r3
 4023280:	402d4900 	call	402d490 <__floatsidf>
 4023284:	019427f4 	movhi	r6,20639
 4023288:	01cff4f4 	movhi	r7,16339
 402328c:	319e7ec4 	addi	r6,r6,31227
 4023290:	39d104c4 	addi	r7,r7,17427
 4023294:	1009883a 	mov	r4,r2
 4023298:	180b883a 	mov	r5,r3
 402329c:	402c2a80 	call	402c2a8 <__muldf3>
 40232a0:	100d883a 	mov	r6,r2
 40232a4:	180f883a 	mov	r7,r3
 40232a8:	a009883a 	mov	r4,r20
 40232ac:	880b883a 	mov	r5,r17
 40232b0:	402add40 	call	402add4 <__adddf3>
 40232b4:	1009883a 	mov	r4,r2
 40232b8:	180b883a 	mov	r5,r3
 40232bc:	1029883a 	mov	r20,r2
 40232c0:	1823883a 	mov	r17,r3
 40232c4:	402d4100 	call	402d410 <__fixdfsi>
 40232c8:	000d883a 	mov	r6,zero
 40232cc:	000f883a 	mov	r7,zero
 40232d0:	a009883a 	mov	r4,r20
 40232d4:	880b883a 	mov	r5,r17
 40232d8:	d8800515 	stw	r2,20(sp)
 40232dc:	402c1b40 	call	402c1b4 <__ledf2>
 40232e0:	10028716 	blt	r2,zero,4023d00 <_dtoa_r+0xc88>
 40232e4:	d8c00517 	ldw	r3,20(sp)
 40232e8:	00800584 	movi	r2,22
 40232ec:	10c27536 	bltu	r2,r3,4023cc4 <_dtoa_r+0xc4c>
 40232f0:	180490fa 	slli	r2,r3,3
 40232f4:	00c00034 	movhi	r3,0
 40232f8:	18c04a04 	addi	r3,r3,296
 40232fc:	1885883a 	add	r2,r3,r2
 4023300:	11000017 	ldw	r4,0(r2)
 4023304:	11400117 	ldw	r5,4(r2)
 4023308:	900d883a 	mov	r6,r18
 402330c:	980f883a 	mov	r7,r19
 4023310:	402c0d80 	call	402c0d8 <__gedf2>
 4023314:	00828d0e 	bge	zero,r2,4023d4c <_dtoa_r+0xcd4>
 4023318:	d9000517 	ldw	r4,20(sp)
 402331c:	d8000e15 	stw	zero,56(sp)
 4023320:	213fffc4 	addi	r4,r4,-1
 4023324:	d9000515 	stw	r4,20(sp)
 4023328:	b42dc83a 	sub	r22,r22,r16
 402332c:	b5bfffc4 	addi	r22,r22,-1
 4023330:	b0026f16 	blt	r22,zero,4023cf0 <_dtoa_r+0xc78>
 4023334:	d8000815 	stw	zero,32(sp)
 4023338:	d9c00517 	ldw	r7,20(sp)
 402333c:	38026416 	blt	r7,zero,4023cd0 <_dtoa_r+0xc58>
 4023340:	b1ed883a 	add	r22,r22,r7
 4023344:	d9c00d15 	stw	r7,52(sp)
 4023348:	d8000a15 	stw	zero,40(sp)
 402334c:	d9800317 	ldw	r6,12(sp)
 4023350:	00800244 	movi	r2,9
 4023354:	11811436 	bltu	r2,r6,40237a8 <_dtoa_r+0x730>
 4023358:	00800144 	movi	r2,5
 402335c:	1184e10e 	bge	r2,r6,40246e4 <_dtoa_r+0x166c>
 4023360:	31bfff04 	addi	r6,r6,-4
 4023364:	d9800315 	stw	r6,12(sp)
 4023368:	0023883a 	mov	r17,zero
 402336c:	d9800317 	ldw	r6,12(sp)
 4023370:	008000c4 	movi	r2,3
 4023374:	30836726 	beq	r6,r2,4024114 <_dtoa_r+0x109c>
 4023378:	1183410e 	bge	r2,r6,4024080 <_dtoa_r+0x1008>
 402337c:	d9c00317 	ldw	r7,12(sp)
 4023380:	00800104 	movi	r2,4
 4023384:	38827c26 	beq	r7,r2,4023d78 <_dtoa_r+0xd00>
 4023388:	00800144 	movi	r2,5
 402338c:	3884c41e 	bne	r7,r2,40246a0 <_dtoa_r+0x1628>
 4023390:	00800044 	movi	r2,1
 4023394:	d8800b15 	stw	r2,44(sp)
 4023398:	d8c00517 	ldw	r3,20(sp)
 402339c:	d9002217 	ldw	r4,136(sp)
 40233a0:	1907883a 	add	r3,r3,r4
 40233a4:	19800044 	addi	r6,r3,1
 40233a8:	d8c00c15 	stw	r3,48(sp)
 40233ac:	d9800615 	stw	r6,24(sp)
 40233b0:	0183a40e 	bge	zero,r6,4024244 <_dtoa_r+0x11cc>
 40233b4:	d9800617 	ldw	r6,24(sp)
 40233b8:	3021883a 	mov	r16,r6
 40233bc:	e0001115 	stw	zero,68(fp)
 40233c0:	008005c4 	movi	r2,23
 40233c4:	1184c92e 	bgeu	r2,r6,40246ec <_dtoa_r+0x1674>
 40233c8:	00c00044 	movi	r3,1
 40233cc:	00800104 	movi	r2,4
 40233d0:	1085883a 	add	r2,r2,r2
 40233d4:	11000504 	addi	r4,r2,20
 40233d8:	180b883a 	mov	r5,r3
 40233dc:	18c00044 	addi	r3,r3,1
 40233e0:	313ffb2e 	bgeu	r6,r4,40233d0 <__flash_rwdata_start+0xffff30bc>
 40233e4:	e1401115 	stw	r5,68(fp)
 40233e8:	e009883a 	mov	r4,fp
 40233ec:	402610c0 	call	402610c <_Balloc>
 40233f0:	d8800715 	stw	r2,28(sp)
 40233f4:	e0801015 	stw	r2,64(fp)
 40233f8:	00800384 	movi	r2,14
 40233fc:	1400f736 	bltu	r2,r16,40237dc <_dtoa_r+0x764>
 4023400:	8800f626 	beq	r17,zero,40237dc <_dtoa_r+0x764>
 4023404:	d9c00517 	ldw	r7,20(sp)
 4023408:	01c39a0e 	bge	zero,r7,4024274 <_dtoa_r+0x11fc>
 402340c:	388003cc 	andi	r2,r7,15
 4023410:	100490fa 	slli	r2,r2,3
 4023414:	382bd13a 	srai	r21,r7,4
 4023418:	00c00034 	movhi	r3,0
 402341c:	18c04a04 	addi	r3,r3,296
 4023420:	1885883a 	add	r2,r3,r2
 4023424:	a8c0040c 	andi	r3,r21,16
 4023428:	12400017 	ldw	r9,0(r2)
 402342c:	12000117 	ldw	r8,4(r2)
 4023430:	18037926 	beq	r3,zero,4024218 <_dtoa_r+0x11a0>
 4023434:	00800034 	movhi	r2,0
 4023438:	10804004 	addi	r2,r2,256
 402343c:	11800817 	ldw	r6,32(r2)
 4023440:	11c00917 	ldw	r7,36(r2)
 4023444:	9009883a 	mov	r4,r18
 4023448:	980b883a 	mov	r5,r19
 402344c:	da001715 	stw	r8,92(sp)
 4023450:	da401615 	stw	r9,88(sp)
 4023454:	402b6800 	call	402b680 <__divdf3>
 4023458:	da001717 	ldw	r8,92(sp)
 402345c:	da401617 	ldw	r9,88(sp)
 4023460:	ad4003cc 	andi	r21,r21,15
 4023464:	040000c4 	movi	r16,3
 4023468:	1023883a 	mov	r17,r2
 402346c:	1829883a 	mov	r20,r3
 4023470:	a8001126 	beq	r21,zero,40234b8 <_dtoa_r+0x440>
 4023474:	05c00034 	movhi	r23,0
 4023478:	bdc04004 	addi	r23,r23,256
 402347c:	4805883a 	mov	r2,r9
 4023480:	4007883a 	mov	r3,r8
 4023484:	a980004c 	andi	r6,r21,1
 4023488:	1009883a 	mov	r4,r2
 402348c:	a82bd07a 	srai	r21,r21,1
 4023490:	180b883a 	mov	r5,r3
 4023494:	30000426 	beq	r6,zero,40234a8 <_dtoa_r+0x430>
 4023498:	b9800017 	ldw	r6,0(r23)
 402349c:	b9c00117 	ldw	r7,4(r23)
 40234a0:	84000044 	addi	r16,r16,1
 40234a4:	402c2a80 	call	402c2a8 <__muldf3>
 40234a8:	bdc00204 	addi	r23,r23,8
 40234ac:	a83ff51e 	bne	r21,zero,4023484 <__flash_rwdata_start+0xffff3170>
 40234b0:	1013883a 	mov	r9,r2
 40234b4:	1811883a 	mov	r8,r3
 40234b8:	480d883a 	mov	r6,r9
 40234bc:	400f883a 	mov	r7,r8
 40234c0:	8809883a 	mov	r4,r17
 40234c4:	a00b883a 	mov	r5,r20
 40234c8:	402b6800 	call	402b680 <__divdf3>
 40234cc:	d8800f15 	stw	r2,60(sp)
 40234d0:	d8c01015 	stw	r3,64(sp)
 40234d4:	d8c00e17 	ldw	r3,56(sp)
 40234d8:	18000626 	beq	r3,zero,40234f4 <_dtoa_r+0x47c>
 40234dc:	d9000f17 	ldw	r4,60(sp)
 40234e0:	d9401017 	ldw	r5,64(sp)
 40234e4:	000d883a 	mov	r6,zero
 40234e8:	01cffc34 	movhi	r7,16368
 40234ec:	402c1b40 	call	402c1b4 <__ledf2>
 40234f0:	10040b16 	blt	r2,zero,4024520 <_dtoa_r+0x14a8>
 40234f4:	8009883a 	mov	r4,r16
 40234f8:	402d4900 	call	402d490 <__floatsidf>
 40234fc:	d9800f17 	ldw	r6,60(sp)
 4023500:	d9c01017 	ldw	r7,64(sp)
 4023504:	1009883a 	mov	r4,r2
 4023508:	180b883a 	mov	r5,r3
 402350c:	402c2a80 	call	402c2a8 <__muldf3>
 4023510:	000d883a 	mov	r6,zero
 4023514:	01d00734 	movhi	r7,16412
 4023518:	1009883a 	mov	r4,r2
 402351c:	180b883a 	mov	r5,r3
 4023520:	402add40 	call	402add4 <__adddf3>
 4023524:	1021883a 	mov	r16,r2
 4023528:	d8800617 	ldw	r2,24(sp)
 402352c:	047f3034 	movhi	r17,64704
 4023530:	1c63883a 	add	r17,r3,r17
 4023534:	10031826 	beq	r2,zero,4024198 <_dtoa_r+0x1120>
 4023538:	d8c00517 	ldw	r3,20(sp)
 402353c:	db000617 	ldw	r12,24(sp)
 4023540:	d8c01315 	stw	r3,76(sp)
 4023544:	d9000b17 	ldw	r4,44(sp)
 4023548:	20038f26 	beq	r4,zero,4024388 <_dtoa_r+0x1310>
 402354c:	60bfffc4 	addi	r2,r12,-1
 4023550:	100490fa 	slli	r2,r2,3
 4023554:	00c00034 	movhi	r3,0
 4023558:	18c04a04 	addi	r3,r3,296
 402355c:	1885883a 	add	r2,r3,r2
 4023560:	11800017 	ldw	r6,0(r2)
 4023564:	11c00117 	ldw	r7,4(r2)
 4023568:	d8800717 	ldw	r2,28(sp)
 402356c:	0009883a 	mov	r4,zero
 4023570:	014ff834 	movhi	r5,16352
 4023574:	db001615 	stw	r12,88(sp)
 4023578:	15c00044 	addi	r23,r2,1
 402357c:	402b6800 	call	402b680 <__divdf3>
 4023580:	800d883a 	mov	r6,r16
 4023584:	880f883a 	mov	r7,r17
 4023588:	1009883a 	mov	r4,r2
 402358c:	180b883a 	mov	r5,r3
 4023590:	402cb140 	call	402cb14 <__subdf3>
 4023594:	d9401017 	ldw	r5,64(sp)
 4023598:	d9000f17 	ldw	r4,60(sp)
 402359c:	102b883a 	mov	r21,r2
 40235a0:	d8c01215 	stw	r3,72(sp)
 40235a4:	402d4100 	call	402d410 <__fixdfsi>
 40235a8:	1009883a 	mov	r4,r2
 40235ac:	1029883a 	mov	r20,r2
 40235b0:	402d4900 	call	402d490 <__floatsidf>
 40235b4:	d9000f17 	ldw	r4,60(sp)
 40235b8:	d9401017 	ldw	r5,64(sp)
 40235bc:	100d883a 	mov	r6,r2
 40235c0:	180f883a 	mov	r7,r3
 40235c4:	402cb140 	call	402cb14 <__subdf3>
 40235c8:	1823883a 	mov	r17,r3
 40235cc:	d8c00717 	ldw	r3,28(sp)
 40235d0:	d9401217 	ldw	r5,72(sp)
 40235d4:	a2000c04 	addi	r8,r20,48
 40235d8:	1021883a 	mov	r16,r2
 40235dc:	1a000005 	stb	r8,0(r3)
 40235e0:	800d883a 	mov	r6,r16
 40235e4:	880f883a 	mov	r7,r17
 40235e8:	a809883a 	mov	r4,r21
 40235ec:	4029883a 	mov	r20,r8
 40235f0:	402c0d80 	call	402c0d8 <__gedf2>
 40235f4:	00841d16 	blt	zero,r2,402466c <_dtoa_r+0x15f4>
 40235f8:	800d883a 	mov	r6,r16
 40235fc:	880f883a 	mov	r7,r17
 4023600:	0009883a 	mov	r4,zero
 4023604:	014ffc34 	movhi	r5,16368
 4023608:	402cb140 	call	402cb14 <__subdf3>
 402360c:	d9401217 	ldw	r5,72(sp)
 4023610:	100d883a 	mov	r6,r2
 4023614:	180f883a 	mov	r7,r3
 4023618:	a809883a 	mov	r4,r21
 402361c:	402c0d80 	call	402c0d8 <__gedf2>
 4023620:	db001617 	ldw	r12,88(sp)
 4023624:	00840e16 	blt	zero,r2,4024660 <_dtoa_r+0x15e8>
 4023628:	00800044 	movi	r2,1
 402362c:	13006b0e 	bge	r2,r12,40237dc <_dtoa_r+0x764>
 4023630:	d9000717 	ldw	r4,28(sp)
 4023634:	dd800f15 	stw	r22,60(sp)
 4023638:	dcc01015 	stw	r19,64(sp)
 402363c:	2319883a 	add	r12,r4,r12
 4023640:	dcc01217 	ldw	r19,72(sp)
 4023644:	602d883a 	mov	r22,r12
 4023648:	dc801215 	stw	r18,72(sp)
 402364c:	b825883a 	mov	r18,r23
 4023650:	00000906 	br	4023678 <_dtoa_r+0x600>
 4023654:	402cb140 	call	402cb14 <__subdf3>
 4023658:	a80d883a 	mov	r6,r21
 402365c:	980f883a 	mov	r7,r19
 4023660:	1009883a 	mov	r4,r2
 4023664:	180b883a 	mov	r5,r3
 4023668:	402c1b40 	call	402c1b4 <__ledf2>
 402366c:	1003e816 	blt	r2,zero,4024610 <_dtoa_r+0x1598>
 4023670:	b825883a 	mov	r18,r23
 4023674:	bd83e926 	beq	r23,r22,402461c <_dtoa_r+0x15a4>
 4023678:	a809883a 	mov	r4,r21
 402367c:	980b883a 	mov	r5,r19
 4023680:	000d883a 	mov	r6,zero
 4023684:	01d00934 	movhi	r7,16420
 4023688:	402c2a80 	call	402c2a8 <__muldf3>
 402368c:	000d883a 	mov	r6,zero
 4023690:	01d00934 	movhi	r7,16420
 4023694:	8009883a 	mov	r4,r16
 4023698:	880b883a 	mov	r5,r17
 402369c:	102b883a 	mov	r21,r2
 40236a0:	1827883a 	mov	r19,r3
 40236a4:	402c2a80 	call	402c2a8 <__muldf3>
 40236a8:	180b883a 	mov	r5,r3
 40236ac:	1009883a 	mov	r4,r2
 40236b0:	1821883a 	mov	r16,r3
 40236b4:	1023883a 	mov	r17,r2
 40236b8:	402d4100 	call	402d410 <__fixdfsi>
 40236bc:	1009883a 	mov	r4,r2
 40236c0:	1029883a 	mov	r20,r2
 40236c4:	402d4900 	call	402d490 <__floatsidf>
 40236c8:	8809883a 	mov	r4,r17
 40236cc:	800b883a 	mov	r5,r16
 40236d0:	100d883a 	mov	r6,r2
 40236d4:	180f883a 	mov	r7,r3
 40236d8:	402cb140 	call	402cb14 <__subdf3>
 40236dc:	a5000c04 	addi	r20,r20,48
 40236e0:	a80d883a 	mov	r6,r21
 40236e4:	980f883a 	mov	r7,r19
 40236e8:	1009883a 	mov	r4,r2
 40236ec:	180b883a 	mov	r5,r3
 40236f0:	95000005 	stb	r20,0(r18)
 40236f4:	1021883a 	mov	r16,r2
 40236f8:	1823883a 	mov	r17,r3
 40236fc:	402c1b40 	call	402c1b4 <__ledf2>
 4023700:	bdc00044 	addi	r23,r23,1
 4023704:	800d883a 	mov	r6,r16
 4023708:	880f883a 	mov	r7,r17
 402370c:	0009883a 	mov	r4,zero
 4023710:	014ffc34 	movhi	r5,16368
 4023714:	103fcf0e 	bge	r2,zero,4023654 <__flash_rwdata_start+0xffff3340>
 4023718:	d8c01317 	ldw	r3,76(sp)
 402371c:	d8c00515 	stw	r3,20(sp)
 4023720:	d9400917 	ldw	r5,36(sp)
 4023724:	e009883a 	mov	r4,fp
 4023728:	40261b40 	call	40261b4 <_Bfree>
 402372c:	d9000517 	ldw	r4,20(sp)
 4023730:	d9802317 	ldw	r6,140(sp)
 4023734:	d9c02517 	ldw	r7,148(sp)
 4023738:	b8000005 	stb	zero,0(r23)
 402373c:	20800044 	addi	r2,r4,1
 4023740:	30800015 	stw	r2,0(r6)
 4023744:	3802aa26 	beq	r7,zero,40241f0 <_dtoa_r+0x1178>
 4023748:	3dc00015 	stw	r23,0(r7)
 402374c:	d8800717 	ldw	r2,28(sp)
 4023750:	003e7906 	br	4023138 <__flash_rwdata_start+0xffff2e24>
 4023754:	00800434 	movhi	r2,16
 4023758:	10bfffc4 	addi	r2,r2,-1
 402375c:	88a2703a 	and	r17,r17,r2
 4023760:	883e851e 	bne	r17,zero,4023178 <__flash_rwdata_start+0xffff2e64>
 4023764:	00800034 	movhi	r2,0
 4023768:	10802b04 	addi	r2,r2,172
 402376c:	003e8406 	br	4023180 <__flash_rwdata_start+0xffff2e6c>
 4023770:	10c00204 	addi	r3,r2,8
 4023774:	003e8706 	br	4023194 <__flash_rwdata_start+0xffff2e80>
 4023778:	01400434 	movhi	r5,16
 402377c:	297fffc4 	addi	r5,r5,-1
 4023780:	994a703a 	and	r5,r19,r5
 4023784:	9009883a 	mov	r4,r18
 4023788:	843f0044 	addi	r16,r16,-1023
 402378c:	294ffc34 	orhi	r5,r5,16368
 4023790:	dd800217 	ldw	r22,8(sp)
 4023794:	d8001115 	stw	zero,68(sp)
 4023798:	003ea506 	br	4023230 <__flash_rwdata_start+0xffff2f1c>
 402379c:	00800034 	movhi	r2,0
 40237a0:	10802204 	addi	r2,r2,136
 40237a4:	003e6406 	br	4023138 <__flash_rwdata_start+0xffff2e24>
 40237a8:	e0001115 	stw	zero,68(fp)
 40237ac:	000b883a 	mov	r5,zero
 40237b0:	e009883a 	mov	r4,fp
 40237b4:	402610c0 	call	402610c <_Balloc>
 40237b8:	01bfffc4 	movi	r6,-1
 40237bc:	01c00044 	movi	r7,1
 40237c0:	d8800715 	stw	r2,28(sp)
 40237c4:	d9800c15 	stw	r6,48(sp)
 40237c8:	e0801015 	stw	r2,64(fp)
 40237cc:	d8000315 	stw	zero,12(sp)
 40237d0:	d9c00b15 	stw	r7,44(sp)
 40237d4:	d9800615 	stw	r6,24(sp)
 40237d8:	d8002215 	stw	zero,136(sp)
 40237dc:	d8800117 	ldw	r2,4(sp)
 40237e0:	10008916 	blt	r2,zero,4023a08 <_dtoa_r+0x990>
 40237e4:	d9000517 	ldw	r4,20(sp)
 40237e8:	00c00384 	movi	r3,14
 40237ec:	19008616 	blt	r3,r4,4023a08 <_dtoa_r+0x990>
 40237f0:	200490fa 	slli	r2,r4,3
 40237f4:	00c00034 	movhi	r3,0
 40237f8:	d9802217 	ldw	r6,136(sp)
 40237fc:	18c04a04 	addi	r3,r3,296
 4023800:	1885883a 	add	r2,r3,r2
 4023804:	14000017 	ldw	r16,0(r2)
 4023808:	14400117 	ldw	r17,4(r2)
 402380c:	30016316 	blt	r6,zero,4023d9c <_dtoa_r+0xd24>
 4023810:	800d883a 	mov	r6,r16
 4023814:	880f883a 	mov	r7,r17
 4023818:	9009883a 	mov	r4,r18
 402381c:	980b883a 	mov	r5,r19
 4023820:	402b6800 	call	402b680 <__divdf3>
 4023824:	180b883a 	mov	r5,r3
 4023828:	1009883a 	mov	r4,r2
 402382c:	402d4100 	call	402d410 <__fixdfsi>
 4023830:	1009883a 	mov	r4,r2
 4023834:	102b883a 	mov	r21,r2
 4023838:	402d4900 	call	402d490 <__floatsidf>
 402383c:	800d883a 	mov	r6,r16
 4023840:	880f883a 	mov	r7,r17
 4023844:	1009883a 	mov	r4,r2
 4023848:	180b883a 	mov	r5,r3
 402384c:	402c2a80 	call	402c2a8 <__muldf3>
 4023850:	100d883a 	mov	r6,r2
 4023854:	180f883a 	mov	r7,r3
 4023858:	9009883a 	mov	r4,r18
 402385c:	980b883a 	mov	r5,r19
 4023860:	402cb140 	call	402cb14 <__subdf3>
 4023864:	d9c00717 	ldw	r7,28(sp)
 4023868:	1009883a 	mov	r4,r2
 402386c:	a8800c04 	addi	r2,r21,48
 4023870:	38800005 	stb	r2,0(r7)
 4023874:	3dc00044 	addi	r23,r7,1
 4023878:	d9c00617 	ldw	r7,24(sp)
 402387c:	01800044 	movi	r6,1
 4023880:	180b883a 	mov	r5,r3
 4023884:	2005883a 	mov	r2,r4
 4023888:	39803826 	beq	r7,r6,402396c <_dtoa_r+0x8f4>
 402388c:	000d883a 	mov	r6,zero
 4023890:	01d00934 	movhi	r7,16420
 4023894:	402c2a80 	call	402c2a8 <__muldf3>
 4023898:	000d883a 	mov	r6,zero
 402389c:	000f883a 	mov	r7,zero
 40238a0:	1009883a 	mov	r4,r2
 40238a4:	180b883a 	mov	r5,r3
 40238a8:	1025883a 	mov	r18,r2
 40238ac:	1827883a 	mov	r19,r3
 40238b0:	402c0500 	call	402c050 <__eqdf2>
 40238b4:	103f9a26 	beq	r2,zero,4023720 <__flash_rwdata_start+0xffff340c>
 40238b8:	d9c00617 	ldw	r7,24(sp)
 40238bc:	d8c00717 	ldw	r3,28(sp)
 40238c0:	b829883a 	mov	r20,r23
 40238c4:	38bfffc4 	addi	r2,r7,-1
 40238c8:	18ad883a 	add	r22,r3,r2
 40238cc:	00000a06 	br	40238f8 <_dtoa_r+0x880>
 40238d0:	402c2a80 	call	402c2a8 <__muldf3>
 40238d4:	000d883a 	mov	r6,zero
 40238d8:	000f883a 	mov	r7,zero
 40238dc:	1009883a 	mov	r4,r2
 40238e0:	180b883a 	mov	r5,r3
 40238e4:	1025883a 	mov	r18,r2
 40238e8:	1827883a 	mov	r19,r3
 40238ec:	b829883a 	mov	r20,r23
 40238f0:	402c0500 	call	402c050 <__eqdf2>
 40238f4:	103f8a26 	beq	r2,zero,4023720 <__flash_rwdata_start+0xffff340c>
 40238f8:	800d883a 	mov	r6,r16
 40238fc:	880f883a 	mov	r7,r17
 4023900:	9009883a 	mov	r4,r18
 4023904:	980b883a 	mov	r5,r19
 4023908:	402b6800 	call	402b680 <__divdf3>
 402390c:	180b883a 	mov	r5,r3
 4023910:	1009883a 	mov	r4,r2
 4023914:	402d4100 	call	402d410 <__fixdfsi>
 4023918:	1009883a 	mov	r4,r2
 402391c:	102b883a 	mov	r21,r2
 4023920:	402d4900 	call	402d490 <__floatsidf>
 4023924:	800d883a 	mov	r6,r16
 4023928:	880f883a 	mov	r7,r17
 402392c:	1009883a 	mov	r4,r2
 4023930:	180b883a 	mov	r5,r3
 4023934:	402c2a80 	call	402c2a8 <__muldf3>
 4023938:	100d883a 	mov	r6,r2
 402393c:	180f883a 	mov	r7,r3
 4023940:	9009883a 	mov	r4,r18
 4023944:	980b883a 	mov	r5,r19
 4023948:	402cb140 	call	402cb14 <__subdf3>
 402394c:	aa000c04 	addi	r8,r21,48
 4023950:	a2000005 	stb	r8,0(r20)
 4023954:	000d883a 	mov	r6,zero
 4023958:	01d00934 	movhi	r7,16420
 402395c:	1009883a 	mov	r4,r2
 4023960:	180b883a 	mov	r5,r3
 4023964:	a5c00044 	addi	r23,r20,1
 4023968:	b53fd91e 	bne	r22,r20,40238d0 <__flash_rwdata_start+0xffff35bc>
 402396c:	100d883a 	mov	r6,r2
 4023970:	180f883a 	mov	r7,r3
 4023974:	1009883a 	mov	r4,r2
 4023978:	180b883a 	mov	r5,r3
 402397c:	402add40 	call	402add4 <__adddf3>
 4023980:	100d883a 	mov	r6,r2
 4023984:	180f883a 	mov	r7,r3
 4023988:	8009883a 	mov	r4,r16
 402398c:	880b883a 	mov	r5,r17
 4023990:	1027883a 	mov	r19,r2
 4023994:	1825883a 	mov	r18,r3
 4023998:	402c1b40 	call	402c1b4 <__ledf2>
 402399c:	10000816 	blt	r2,zero,40239c0 <_dtoa_r+0x948>
 40239a0:	980d883a 	mov	r6,r19
 40239a4:	900f883a 	mov	r7,r18
 40239a8:	8009883a 	mov	r4,r16
 40239ac:	880b883a 	mov	r5,r17
 40239b0:	402c0500 	call	402c050 <__eqdf2>
 40239b4:	103f5a1e 	bne	r2,zero,4023720 <__flash_rwdata_start+0xffff340c>
 40239b8:	ad40004c 	andi	r21,r21,1
 40239bc:	a83f5826 	beq	r21,zero,4023720 <__flash_rwdata_start+0xffff340c>
 40239c0:	bd3fffc3 	ldbu	r20,-1(r23)
 40239c4:	b8bfffc4 	addi	r2,r23,-1
 40239c8:	1007883a 	mov	r3,r2
 40239cc:	01400e44 	movi	r5,57
 40239d0:	d9800717 	ldw	r6,28(sp)
 40239d4:	00000506 	br	40239ec <_dtoa_r+0x974>
 40239d8:	18ffffc4 	addi	r3,r3,-1
 40239dc:	11824726 	beq	r2,r6,40242fc <_dtoa_r+0x1284>
 40239e0:	1d000003 	ldbu	r20,0(r3)
 40239e4:	102f883a 	mov	r23,r2
 40239e8:	10bfffc4 	addi	r2,r2,-1
 40239ec:	a1003fcc 	andi	r4,r20,255
 40239f0:	2100201c 	xori	r4,r4,128
 40239f4:	213fe004 	addi	r4,r4,-128
 40239f8:	217ff726 	beq	r4,r5,40239d8 <__flash_rwdata_start+0xffff36c4>
 40239fc:	a2000044 	addi	r8,r20,1
 4023a00:	12000005 	stb	r8,0(r2)
 4023a04:	003f4606 	br	4023720 <__flash_rwdata_start+0xffff340c>
 4023a08:	d9000b17 	ldw	r4,44(sp)
 4023a0c:	2000c826 	beq	r4,zero,4023d30 <_dtoa_r+0xcb8>
 4023a10:	d9800317 	ldw	r6,12(sp)
 4023a14:	00c00044 	movi	r3,1
 4023a18:	1980f90e 	bge	r3,r6,4023e00 <_dtoa_r+0xd88>
 4023a1c:	d8800617 	ldw	r2,24(sp)
 4023a20:	d8c00a17 	ldw	r3,40(sp)
 4023a24:	157fffc4 	addi	r21,r2,-1
 4023a28:	1d41f316 	blt	r3,r21,40241f8 <_dtoa_r+0x1180>
 4023a2c:	1d6bc83a 	sub	r21,r3,r21
 4023a30:	d9c00617 	ldw	r7,24(sp)
 4023a34:	3802aa16 	blt	r7,zero,40244e0 <_dtoa_r+0x1468>
 4023a38:	dd000817 	ldw	r20,32(sp)
 4023a3c:	d8800617 	ldw	r2,24(sp)
 4023a40:	d8c00817 	ldw	r3,32(sp)
 4023a44:	01400044 	movi	r5,1
 4023a48:	e009883a 	mov	r4,fp
 4023a4c:	1887883a 	add	r3,r3,r2
 4023a50:	d8c00815 	stw	r3,32(sp)
 4023a54:	b0ad883a 	add	r22,r22,r2
 4023a58:	40265400 	call	4026540 <__i2b>
 4023a5c:	1023883a 	mov	r17,r2
 4023a60:	a0000826 	beq	r20,zero,4023a84 <_dtoa_r+0xa0c>
 4023a64:	0580070e 	bge	zero,r22,4023a84 <_dtoa_r+0xa0c>
 4023a68:	a005883a 	mov	r2,r20
 4023a6c:	b500b916 	blt	r22,r20,4023d54 <_dtoa_r+0xcdc>
 4023a70:	d9000817 	ldw	r4,32(sp)
 4023a74:	a0a9c83a 	sub	r20,r20,r2
 4023a78:	b0adc83a 	sub	r22,r22,r2
 4023a7c:	2089c83a 	sub	r4,r4,r2
 4023a80:	d9000815 	stw	r4,32(sp)
 4023a84:	d9800a17 	ldw	r6,40(sp)
 4023a88:	0181810e 	bge	zero,r6,4024090 <_dtoa_r+0x1018>
 4023a8c:	d9c00b17 	ldw	r7,44(sp)
 4023a90:	3800b326 	beq	r7,zero,4023d60 <_dtoa_r+0xce8>
 4023a94:	a800b226 	beq	r21,zero,4023d60 <_dtoa_r+0xce8>
 4023a98:	880b883a 	mov	r5,r17
 4023a9c:	a80d883a 	mov	r6,r21
 4023aa0:	e009883a 	mov	r4,fp
 4023aa4:	40268080 	call	4026808 <__pow5mult>
 4023aa8:	d9800917 	ldw	r6,36(sp)
 4023aac:	100b883a 	mov	r5,r2
 4023ab0:	e009883a 	mov	r4,fp
 4023ab4:	1023883a 	mov	r17,r2
 4023ab8:	402657c0 	call	402657c <__multiply>
 4023abc:	1021883a 	mov	r16,r2
 4023ac0:	d8800a17 	ldw	r2,40(sp)
 4023ac4:	d9400917 	ldw	r5,36(sp)
 4023ac8:	e009883a 	mov	r4,fp
 4023acc:	1545c83a 	sub	r2,r2,r21
 4023ad0:	d8800a15 	stw	r2,40(sp)
 4023ad4:	40261b40 	call	40261b4 <_Bfree>
 4023ad8:	d8c00a17 	ldw	r3,40(sp)
 4023adc:	18009f1e 	bne	r3,zero,4023d5c <_dtoa_r+0xce4>
 4023ae0:	05c00044 	movi	r23,1
 4023ae4:	e009883a 	mov	r4,fp
 4023ae8:	b80b883a 	mov	r5,r23
 4023aec:	40265400 	call	4026540 <__i2b>
 4023af0:	d9000d17 	ldw	r4,52(sp)
 4023af4:	102b883a 	mov	r21,r2
 4023af8:	2000ce26 	beq	r4,zero,4023e34 <_dtoa_r+0xdbc>
 4023afc:	200d883a 	mov	r6,r4
 4023b00:	100b883a 	mov	r5,r2
 4023b04:	e009883a 	mov	r4,fp
 4023b08:	40268080 	call	4026808 <__pow5mult>
 4023b0c:	d9800317 	ldw	r6,12(sp)
 4023b10:	102b883a 	mov	r21,r2
 4023b14:	b981810e 	bge	r23,r6,402411c <_dtoa_r+0x10a4>
 4023b18:	0027883a 	mov	r19,zero
 4023b1c:	a8800417 	ldw	r2,16(r21)
 4023b20:	05c00804 	movi	r23,32
 4023b24:	10800104 	addi	r2,r2,4
 4023b28:	1085883a 	add	r2,r2,r2
 4023b2c:	1085883a 	add	r2,r2,r2
 4023b30:	a885883a 	add	r2,r21,r2
 4023b34:	11000017 	ldw	r4,0(r2)
 4023b38:	40264280 	call	4026428 <__hi0bits>
 4023b3c:	b885c83a 	sub	r2,r23,r2
 4023b40:	1585883a 	add	r2,r2,r22
 4023b44:	108007cc 	andi	r2,r2,31
 4023b48:	1000b326 	beq	r2,zero,4023e18 <_dtoa_r+0xda0>
 4023b4c:	00c00804 	movi	r3,32
 4023b50:	1887c83a 	sub	r3,r3,r2
 4023b54:	01000104 	movi	r4,4
 4023b58:	20c2cd0e 	bge	r4,r3,4024690 <_dtoa_r+0x1618>
 4023b5c:	00c00704 	movi	r3,28
 4023b60:	1885c83a 	sub	r2,r3,r2
 4023b64:	d8c00817 	ldw	r3,32(sp)
 4023b68:	a0a9883a 	add	r20,r20,r2
 4023b6c:	b0ad883a 	add	r22,r22,r2
 4023b70:	1887883a 	add	r3,r3,r2
 4023b74:	d8c00815 	stw	r3,32(sp)
 4023b78:	d9800817 	ldw	r6,32(sp)
 4023b7c:	0180040e 	bge	zero,r6,4023b90 <_dtoa_r+0xb18>
 4023b80:	800b883a 	mov	r5,r16
 4023b84:	e009883a 	mov	r4,fp
 4023b88:	40269480 	call	4026948 <__lshift>
 4023b8c:	1021883a 	mov	r16,r2
 4023b90:	0580050e 	bge	zero,r22,4023ba8 <_dtoa_r+0xb30>
 4023b94:	a80b883a 	mov	r5,r21
 4023b98:	b00d883a 	mov	r6,r22
 4023b9c:	e009883a 	mov	r4,fp
 4023ba0:	40269480 	call	4026948 <__lshift>
 4023ba4:	102b883a 	mov	r21,r2
 4023ba8:	d9c00e17 	ldw	r7,56(sp)
 4023bac:	3801211e 	bne	r7,zero,4024034 <_dtoa_r+0xfbc>
 4023bb0:	d9800617 	ldw	r6,24(sp)
 4023bb4:	0181380e 	bge	zero,r6,4024098 <_dtoa_r+0x1020>
 4023bb8:	d8c00b17 	ldw	r3,44(sp)
 4023bbc:	1800ab1e 	bne	r3,zero,4023e6c <_dtoa_r+0xdf4>
 4023bc0:	dc800717 	ldw	r18,28(sp)
 4023bc4:	dcc00617 	ldw	r19,24(sp)
 4023bc8:	9029883a 	mov	r20,r18
 4023bcc:	00000206 	br	4023bd8 <_dtoa_r+0xb60>
 4023bd0:	40261dc0 	call	40261dc <__multadd>
 4023bd4:	1021883a 	mov	r16,r2
 4023bd8:	a80b883a 	mov	r5,r21
 4023bdc:	8009883a 	mov	r4,r16
 4023be0:	4022e500 	call	4022e50 <quorem>
 4023be4:	10800c04 	addi	r2,r2,48
 4023be8:	90800005 	stb	r2,0(r18)
 4023bec:	94800044 	addi	r18,r18,1
 4023bf0:	9507c83a 	sub	r3,r18,r20
 4023bf4:	000f883a 	mov	r7,zero
 4023bf8:	01800284 	movi	r6,10
 4023bfc:	800b883a 	mov	r5,r16
 4023c00:	e009883a 	mov	r4,fp
 4023c04:	1cfff216 	blt	r3,r19,4023bd0 <__flash_rwdata_start+0xffff38bc>
 4023c08:	1011883a 	mov	r8,r2
 4023c0c:	d8800617 	ldw	r2,24(sp)
 4023c10:	0082370e 	bge	zero,r2,40244f0 <_dtoa_r+0x1478>
 4023c14:	d9000717 	ldw	r4,28(sp)
 4023c18:	0025883a 	mov	r18,zero
 4023c1c:	20af883a 	add	r23,r4,r2
 4023c20:	01800044 	movi	r6,1
 4023c24:	800b883a 	mov	r5,r16
 4023c28:	e009883a 	mov	r4,fp
 4023c2c:	da001715 	stw	r8,92(sp)
 4023c30:	40269480 	call	4026948 <__lshift>
 4023c34:	a80b883a 	mov	r5,r21
 4023c38:	1009883a 	mov	r4,r2
 4023c3c:	d8800915 	stw	r2,36(sp)
 4023c40:	4026a900 	call	4026a90 <__mcmp>
 4023c44:	da001717 	ldw	r8,92(sp)
 4023c48:	0081800e 	bge	zero,r2,402424c <_dtoa_r+0x11d4>
 4023c4c:	b93fffc3 	ldbu	r4,-1(r23)
 4023c50:	b8bfffc4 	addi	r2,r23,-1
 4023c54:	1007883a 	mov	r3,r2
 4023c58:	01800e44 	movi	r6,57
 4023c5c:	d9c00717 	ldw	r7,28(sp)
 4023c60:	00000506 	br	4023c78 <_dtoa_r+0xc00>
 4023c64:	18ffffc4 	addi	r3,r3,-1
 4023c68:	11c12326 	beq	r2,r7,40240f8 <_dtoa_r+0x1080>
 4023c6c:	19000003 	ldbu	r4,0(r3)
 4023c70:	102f883a 	mov	r23,r2
 4023c74:	10bfffc4 	addi	r2,r2,-1
 4023c78:	21403fcc 	andi	r5,r4,255
 4023c7c:	2940201c 	xori	r5,r5,128
 4023c80:	297fe004 	addi	r5,r5,-128
 4023c84:	29bff726 	beq	r5,r6,4023c64 <__flash_rwdata_start+0xffff3950>
 4023c88:	21000044 	addi	r4,r4,1
 4023c8c:	11000005 	stb	r4,0(r2)
 4023c90:	a80b883a 	mov	r5,r21
 4023c94:	e009883a 	mov	r4,fp
 4023c98:	40261b40 	call	40261b4 <_Bfree>
 4023c9c:	883ea026 	beq	r17,zero,4023720 <__flash_rwdata_start+0xffff340c>
 4023ca0:	90000426 	beq	r18,zero,4023cb4 <_dtoa_r+0xc3c>
 4023ca4:	94400326 	beq	r18,r17,4023cb4 <_dtoa_r+0xc3c>
 4023ca8:	900b883a 	mov	r5,r18
 4023cac:	e009883a 	mov	r4,fp
 4023cb0:	40261b40 	call	40261b4 <_Bfree>
 4023cb4:	880b883a 	mov	r5,r17
 4023cb8:	e009883a 	mov	r4,fp
 4023cbc:	40261b40 	call	40261b4 <_Bfree>
 4023cc0:	003e9706 	br	4023720 <__flash_rwdata_start+0xffff340c>
 4023cc4:	01800044 	movi	r6,1
 4023cc8:	d9800e15 	stw	r6,56(sp)
 4023ccc:	003d9606 	br	4023328 <__flash_rwdata_start+0xffff3014>
 4023cd0:	d8800817 	ldw	r2,32(sp)
 4023cd4:	d8c00517 	ldw	r3,20(sp)
 4023cd8:	d8000d15 	stw	zero,52(sp)
 4023cdc:	10c5c83a 	sub	r2,r2,r3
 4023ce0:	00c9c83a 	sub	r4,zero,r3
 4023ce4:	d8800815 	stw	r2,32(sp)
 4023ce8:	d9000a15 	stw	r4,40(sp)
 4023cec:	003d9706 	br	402334c <__flash_rwdata_start+0xffff3038>
 4023cf0:	05adc83a 	sub	r22,zero,r22
 4023cf4:	dd800815 	stw	r22,32(sp)
 4023cf8:	002d883a 	mov	r22,zero
 4023cfc:	003d8e06 	br	4023338 <__flash_rwdata_start+0xffff3024>
 4023d00:	d9000517 	ldw	r4,20(sp)
 4023d04:	402d4900 	call	402d490 <__floatsidf>
 4023d08:	100d883a 	mov	r6,r2
 4023d0c:	180f883a 	mov	r7,r3
 4023d10:	a009883a 	mov	r4,r20
 4023d14:	880b883a 	mov	r5,r17
 4023d18:	402c0500 	call	402c050 <__eqdf2>
 4023d1c:	103d7126 	beq	r2,zero,40232e4 <__flash_rwdata_start+0xffff2fd0>
 4023d20:	d9c00517 	ldw	r7,20(sp)
 4023d24:	39ffffc4 	addi	r7,r7,-1
 4023d28:	d9c00515 	stw	r7,20(sp)
 4023d2c:	003d6d06 	br	40232e4 <__flash_rwdata_start+0xffff2fd0>
 4023d30:	dd400a17 	ldw	r21,40(sp)
 4023d34:	dd000817 	ldw	r20,32(sp)
 4023d38:	0023883a 	mov	r17,zero
 4023d3c:	003f4806 	br	4023a60 <__flash_rwdata_start+0xffff374c>
 4023d40:	10e3c83a 	sub	r17,r2,r3
 4023d44:	9448983a 	sll	r4,r18,r17
 4023d48:	003d3206 	br	4023214 <__flash_rwdata_start+0xffff2f00>
 4023d4c:	d8000e15 	stw	zero,56(sp)
 4023d50:	003d7506 	br	4023328 <__flash_rwdata_start+0xffff3014>
 4023d54:	b005883a 	mov	r2,r22
 4023d58:	003f4506 	br	4023a70 <__flash_rwdata_start+0xffff375c>
 4023d5c:	dc000915 	stw	r16,36(sp)
 4023d60:	d9800a17 	ldw	r6,40(sp)
 4023d64:	d9400917 	ldw	r5,36(sp)
 4023d68:	e009883a 	mov	r4,fp
 4023d6c:	40268080 	call	4026808 <__pow5mult>
 4023d70:	1021883a 	mov	r16,r2
 4023d74:	003f5a06 	br	4023ae0 <__flash_rwdata_start+0xffff37cc>
 4023d78:	01c00044 	movi	r7,1
 4023d7c:	d9c00b15 	stw	r7,44(sp)
 4023d80:	d8802217 	ldw	r2,136(sp)
 4023d84:	0081280e 	bge	zero,r2,4024228 <_dtoa_r+0x11b0>
 4023d88:	100d883a 	mov	r6,r2
 4023d8c:	1021883a 	mov	r16,r2
 4023d90:	d8800c15 	stw	r2,48(sp)
 4023d94:	d8800615 	stw	r2,24(sp)
 4023d98:	003d8806 	br	40233bc <__flash_rwdata_start+0xffff30a8>
 4023d9c:	d8800617 	ldw	r2,24(sp)
 4023da0:	00be9b16 	blt	zero,r2,4023810 <__flash_rwdata_start+0xffff34fc>
 4023da4:	10010f1e 	bne	r2,zero,40241e4 <_dtoa_r+0x116c>
 4023da8:	880b883a 	mov	r5,r17
 4023dac:	000d883a 	mov	r6,zero
 4023db0:	01d00534 	movhi	r7,16404
 4023db4:	8009883a 	mov	r4,r16
 4023db8:	402c2a80 	call	402c2a8 <__muldf3>
 4023dbc:	900d883a 	mov	r6,r18
 4023dc0:	980f883a 	mov	r7,r19
 4023dc4:	1009883a 	mov	r4,r2
 4023dc8:	180b883a 	mov	r5,r3
 4023dcc:	402c0d80 	call	402c0d8 <__gedf2>
 4023dd0:	002b883a 	mov	r21,zero
 4023dd4:	0023883a 	mov	r17,zero
 4023dd8:	1000bf16 	blt	r2,zero,40240d8 <_dtoa_r+0x1060>
 4023ddc:	d9802217 	ldw	r6,136(sp)
 4023de0:	ddc00717 	ldw	r23,28(sp)
 4023de4:	018c303a 	nor	r6,zero,r6
 4023de8:	d9800515 	stw	r6,20(sp)
 4023dec:	a80b883a 	mov	r5,r21
 4023df0:	e009883a 	mov	r4,fp
 4023df4:	40261b40 	call	40261b4 <_Bfree>
 4023df8:	883e4926 	beq	r17,zero,4023720 <__flash_rwdata_start+0xffff340c>
 4023dfc:	003fad06 	br	4023cb4 <__flash_rwdata_start+0xffff39a0>
 4023e00:	d9c01117 	ldw	r7,68(sp)
 4023e04:	3801bc26 	beq	r7,zero,40244f8 <_dtoa_r+0x1480>
 4023e08:	10810cc4 	addi	r2,r2,1075
 4023e0c:	dd400a17 	ldw	r21,40(sp)
 4023e10:	dd000817 	ldw	r20,32(sp)
 4023e14:	003f0a06 	br	4023a40 <__flash_rwdata_start+0xffff372c>
 4023e18:	00800704 	movi	r2,28
 4023e1c:	d9000817 	ldw	r4,32(sp)
 4023e20:	a0a9883a 	add	r20,r20,r2
 4023e24:	b0ad883a 	add	r22,r22,r2
 4023e28:	2089883a 	add	r4,r4,r2
 4023e2c:	d9000815 	stw	r4,32(sp)
 4023e30:	003f5106 	br	4023b78 <__flash_rwdata_start+0xffff3864>
 4023e34:	d8c00317 	ldw	r3,12(sp)
 4023e38:	b8c1fc0e 	bge	r23,r3,402462c <_dtoa_r+0x15b4>
 4023e3c:	0027883a 	mov	r19,zero
 4023e40:	b805883a 	mov	r2,r23
 4023e44:	003f3e06 	br	4023b40 <__flash_rwdata_start+0xffff382c>
 4023e48:	880b883a 	mov	r5,r17
 4023e4c:	e009883a 	mov	r4,fp
 4023e50:	000f883a 	mov	r7,zero
 4023e54:	01800284 	movi	r6,10
 4023e58:	40261dc0 	call	40261dc <__multadd>
 4023e5c:	d9000c17 	ldw	r4,48(sp)
 4023e60:	1023883a 	mov	r17,r2
 4023e64:	0102040e 	bge	zero,r4,4024678 <_dtoa_r+0x1600>
 4023e68:	d9000615 	stw	r4,24(sp)
 4023e6c:	0500050e 	bge	zero,r20,4023e84 <_dtoa_r+0xe0c>
 4023e70:	880b883a 	mov	r5,r17
 4023e74:	a00d883a 	mov	r6,r20
 4023e78:	e009883a 	mov	r4,fp
 4023e7c:	40269480 	call	4026948 <__lshift>
 4023e80:	1023883a 	mov	r17,r2
 4023e84:	9801241e 	bne	r19,zero,4024318 <_dtoa_r+0x12a0>
 4023e88:	8829883a 	mov	r20,r17
 4023e8c:	d9000617 	ldw	r4,24(sp)
 4023e90:	dcc00717 	ldw	r19,28(sp)
 4023e94:	9480004c 	andi	r18,r18,1
 4023e98:	20bfffc4 	addi	r2,r4,-1
 4023e9c:	9885883a 	add	r2,r19,r2
 4023ea0:	d8800415 	stw	r2,16(sp)
 4023ea4:	dc800615 	stw	r18,24(sp)
 4023ea8:	a80b883a 	mov	r5,r21
 4023eac:	8009883a 	mov	r4,r16
 4023eb0:	4022e500 	call	4022e50 <quorem>
 4023eb4:	880b883a 	mov	r5,r17
 4023eb8:	8009883a 	mov	r4,r16
 4023ebc:	102f883a 	mov	r23,r2
 4023ec0:	4026a900 	call	4026a90 <__mcmp>
 4023ec4:	a80b883a 	mov	r5,r21
 4023ec8:	a00d883a 	mov	r6,r20
 4023ecc:	e009883a 	mov	r4,fp
 4023ed0:	102d883a 	mov	r22,r2
 4023ed4:	4026af00 	call	4026af0 <__mdiff>
 4023ed8:	1007883a 	mov	r3,r2
 4023edc:	10800317 	ldw	r2,12(r2)
 4023ee0:	bc800c04 	addi	r18,r23,48
 4023ee4:	180b883a 	mov	r5,r3
 4023ee8:	10004e1e 	bne	r2,zero,4024024 <_dtoa_r+0xfac>
 4023eec:	8009883a 	mov	r4,r16
 4023ef0:	d8c01615 	stw	r3,88(sp)
 4023ef4:	4026a900 	call	4026a90 <__mcmp>
 4023ef8:	d8c01617 	ldw	r3,88(sp)
 4023efc:	e009883a 	mov	r4,fp
 4023f00:	d8801615 	stw	r2,88(sp)
 4023f04:	180b883a 	mov	r5,r3
 4023f08:	40261b40 	call	40261b4 <_Bfree>
 4023f0c:	d8801617 	ldw	r2,88(sp)
 4023f10:	1000041e 	bne	r2,zero,4023f24 <_dtoa_r+0xeac>
 4023f14:	d9800317 	ldw	r6,12(sp)
 4023f18:	3000021e 	bne	r6,zero,4023f24 <_dtoa_r+0xeac>
 4023f1c:	d8c00617 	ldw	r3,24(sp)
 4023f20:	18003726 	beq	r3,zero,4024000 <_dtoa_r+0xf88>
 4023f24:	b0002016 	blt	r22,zero,4023fa8 <_dtoa_r+0xf30>
 4023f28:	b000041e 	bne	r22,zero,4023f3c <_dtoa_r+0xec4>
 4023f2c:	d9000317 	ldw	r4,12(sp)
 4023f30:	2000021e 	bne	r4,zero,4023f3c <_dtoa_r+0xec4>
 4023f34:	d8c00617 	ldw	r3,24(sp)
 4023f38:	18001b26 	beq	r3,zero,4023fa8 <_dtoa_r+0xf30>
 4023f3c:	00810716 	blt	zero,r2,402435c <_dtoa_r+0x12e4>
 4023f40:	d8c00417 	ldw	r3,16(sp)
 4023f44:	9d800044 	addi	r22,r19,1
 4023f48:	9c800005 	stb	r18,0(r19)
 4023f4c:	b02f883a 	mov	r23,r22
 4023f50:	98c10626 	beq	r19,r3,402436c <_dtoa_r+0x12f4>
 4023f54:	800b883a 	mov	r5,r16
 4023f58:	000f883a 	mov	r7,zero
 4023f5c:	01800284 	movi	r6,10
 4023f60:	e009883a 	mov	r4,fp
 4023f64:	40261dc0 	call	40261dc <__multadd>
 4023f68:	1021883a 	mov	r16,r2
 4023f6c:	000f883a 	mov	r7,zero
 4023f70:	01800284 	movi	r6,10
 4023f74:	880b883a 	mov	r5,r17
 4023f78:	e009883a 	mov	r4,fp
 4023f7c:	8d002526 	beq	r17,r20,4024014 <_dtoa_r+0xf9c>
 4023f80:	40261dc0 	call	40261dc <__multadd>
 4023f84:	a00b883a 	mov	r5,r20
 4023f88:	000f883a 	mov	r7,zero
 4023f8c:	01800284 	movi	r6,10
 4023f90:	e009883a 	mov	r4,fp
 4023f94:	1023883a 	mov	r17,r2
 4023f98:	40261dc0 	call	40261dc <__multadd>
 4023f9c:	1029883a 	mov	r20,r2
 4023fa0:	b027883a 	mov	r19,r22
 4023fa4:	003fc006 	br	4023ea8 <__flash_rwdata_start+0xffff3b94>
 4023fa8:	9011883a 	mov	r8,r18
 4023fac:	00800e0e 	bge	zero,r2,4023fe8 <_dtoa_r+0xf70>
 4023fb0:	800b883a 	mov	r5,r16
 4023fb4:	01800044 	movi	r6,1
 4023fb8:	e009883a 	mov	r4,fp
 4023fbc:	da001715 	stw	r8,92(sp)
 4023fc0:	40269480 	call	4026948 <__lshift>
 4023fc4:	a80b883a 	mov	r5,r21
 4023fc8:	1009883a 	mov	r4,r2
 4023fcc:	1021883a 	mov	r16,r2
 4023fd0:	4026a900 	call	4026a90 <__mcmp>
 4023fd4:	da001717 	ldw	r8,92(sp)
 4023fd8:	0081960e 	bge	zero,r2,4024634 <_dtoa_r+0x15bc>
 4023fdc:	00800e44 	movi	r2,57
 4023fe0:	40817026 	beq	r8,r2,40245a4 <_dtoa_r+0x152c>
 4023fe4:	ba000c44 	addi	r8,r23,49
 4023fe8:	8825883a 	mov	r18,r17
 4023fec:	9dc00044 	addi	r23,r19,1
 4023ff0:	9a000005 	stb	r8,0(r19)
 4023ff4:	a023883a 	mov	r17,r20
 4023ff8:	dc000915 	stw	r16,36(sp)
 4023ffc:	003f2406 	br	4023c90 <__flash_rwdata_start+0xffff397c>
 4024000:	00800e44 	movi	r2,57
 4024004:	9011883a 	mov	r8,r18
 4024008:	90816626 	beq	r18,r2,40245a4 <_dtoa_r+0x152c>
 402400c:	05bff516 	blt	zero,r22,4023fe4 <__flash_rwdata_start+0xffff3cd0>
 4024010:	003ff506 	br	4023fe8 <__flash_rwdata_start+0xffff3cd4>
 4024014:	40261dc0 	call	40261dc <__multadd>
 4024018:	1023883a 	mov	r17,r2
 402401c:	1029883a 	mov	r20,r2
 4024020:	003fdf06 	br	4023fa0 <__flash_rwdata_start+0xffff3c8c>
 4024024:	e009883a 	mov	r4,fp
 4024028:	40261b40 	call	40261b4 <_Bfree>
 402402c:	00800044 	movi	r2,1
 4024030:	003fbc06 	br	4023f24 <__flash_rwdata_start+0xffff3c10>
 4024034:	a80b883a 	mov	r5,r21
 4024038:	8009883a 	mov	r4,r16
 402403c:	4026a900 	call	4026a90 <__mcmp>
 4024040:	103edb0e 	bge	r2,zero,4023bb0 <__flash_rwdata_start+0xffff389c>
 4024044:	800b883a 	mov	r5,r16
 4024048:	000f883a 	mov	r7,zero
 402404c:	01800284 	movi	r6,10
 4024050:	e009883a 	mov	r4,fp
 4024054:	40261dc0 	call	40261dc <__multadd>
 4024058:	1021883a 	mov	r16,r2
 402405c:	d8800517 	ldw	r2,20(sp)
 4024060:	d8c00b17 	ldw	r3,44(sp)
 4024064:	10bfffc4 	addi	r2,r2,-1
 4024068:	d8800515 	stw	r2,20(sp)
 402406c:	183f761e 	bne	r3,zero,4023e48 <__flash_rwdata_start+0xffff3b34>
 4024070:	d9000c17 	ldw	r4,48(sp)
 4024074:	0101730e 	bge	zero,r4,4024644 <_dtoa_r+0x15cc>
 4024078:	d9000615 	stw	r4,24(sp)
 402407c:	003ed006 	br	4023bc0 <__flash_rwdata_start+0xffff38ac>
 4024080:	00800084 	movi	r2,2
 4024084:	3081861e 	bne	r6,r2,40246a0 <_dtoa_r+0x1628>
 4024088:	d8000b15 	stw	zero,44(sp)
 402408c:	003f3c06 	br	4023d80 <__flash_rwdata_start+0xffff3a6c>
 4024090:	dc000917 	ldw	r16,36(sp)
 4024094:	003e9206 	br	4023ae0 <__flash_rwdata_start+0xffff37cc>
 4024098:	d9c00317 	ldw	r7,12(sp)
 402409c:	00800084 	movi	r2,2
 40240a0:	11fec50e 	bge	r2,r7,4023bb8 <__flash_rwdata_start+0xffff38a4>
 40240a4:	d9000617 	ldw	r4,24(sp)
 40240a8:	20013c1e 	bne	r4,zero,402459c <_dtoa_r+0x1524>
 40240ac:	a80b883a 	mov	r5,r21
 40240b0:	000f883a 	mov	r7,zero
 40240b4:	01800144 	movi	r6,5
 40240b8:	e009883a 	mov	r4,fp
 40240bc:	40261dc0 	call	40261dc <__multadd>
 40240c0:	100b883a 	mov	r5,r2
 40240c4:	8009883a 	mov	r4,r16
 40240c8:	102b883a 	mov	r21,r2
 40240cc:	4026a900 	call	4026a90 <__mcmp>
 40240d0:	dc000915 	stw	r16,36(sp)
 40240d4:	00bf410e 	bge	zero,r2,4023ddc <__flash_rwdata_start+0xffff3ac8>
 40240d8:	d9c00717 	ldw	r7,28(sp)
 40240dc:	00800c44 	movi	r2,49
 40240e0:	38800005 	stb	r2,0(r7)
 40240e4:	d8800517 	ldw	r2,20(sp)
 40240e8:	3dc00044 	addi	r23,r7,1
 40240ec:	10800044 	addi	r2,r2,1
 40240f0:	d8800515 	stw	r2,20(sp)
 40240f4:	003f3d06 	br	4023dec <__flash_rwdata_start+0xffff3ad8>
 40240f8:	d9800517 	ldw	r6,20(sp)
 40240fc:	d9c00717 	ldw	r7,28(sp)
 4024100:	00800c44 	movi	r2,49
 4024104:	31800044 	addi	r6,r6,1
 4024108:	d9800515 	stw	r6,20(sp)
 402410c:	38800005 	stb	r2,0(r7)
 4024110:	003edf06 	br	4023c90 <__flash_rwdata_start+0xffff397c>
 4024114:	d8000b15 	stw	zero,44(sp)
 4024118:	003c9f06 	br	4023398 <__flash_rwdata_start+0xffff3084>
 402411c:	903e7e1e 	bne	r18,zero,4023b18 <__flash_rwdata_start+0xffff3804>
 4024120:	00800434 	movhi	r2,16
 4024124:	10bfffc4 	addi	r2,r2,-1
 4024128:	9884703a 	and	r2,r19,r2
 402412c:	1000ea1e 	bne	r2,zero,40244d8 <_dtoa_r+0x1460>
 4024130:	9cdffc2c 	andhi	r19,r19,32752
 4024134:	9800e826 	beq	r19,zero,40244d8 <_dtoa_r+0x1460>
 4024138:	d9c00817 	ldw	r7,32(sp)
 402413c:	b5800044 	addi	r22,r22,1
 4024140:	04c00044 	movi	r19,1
 4024144:	39c00044 	addi	r7,r7,1
 4024148:	d9c00815 	stw	r7,32(sp)
 402414c:	d8800d17 	ldw	r2,52(sp)
 4024150:	103e721e 	bne	r2,zero,4023b1c <__flash_rwdata_start+0xffff3808>
 4024154:	00800044 	movi	r2,1
 4024158:	003e7906 	br	4023b40 <__flash_rwdata_start+0xffff382c>
 402415c:	8009883a 	mov	r4,r16
 4024160:	402d4900 	call	402d490 <__floatsidf>
 4024164:	d9800f17 	ldw	r6,60(sp)
 4024168:	d9c01017 	ldw	r7,64(sp)
 402416c:	1009883a 	mov	r4,r2
 4024170:	180b883a 	mov	r5,r3
 4024174:	402c2a80 	call	402c2a8 <__muldf3>
 4024178:	000d883a 	mov	r6,zero
 402417c:	01d00734 	movhi	r7,16412
 4024180:	1009883a 	mov	r4,r2
 4024184:	180b883a 	mov	r5,r3
 4024188:	402add40 	call	402add4 <__adddf3>
 402418c:	047f3034 	movhi	r17,64704
 4024190:	1021883a 	mov	r16,r2
 4024194:	1c63883a 	add	r17,r3,r17
 4024198:	d9000f17 	ldw	r4,60(sp)
 402419c:	d9401017 	ldw	r5,64(sp)
 40241a0:	000d883a 	mov	r6,zero
 40241a4:	01d00534 	movhi	r7,16404
 40241a8:	402cb140 	call	402cb14 <__subdf3>
 40241ac:	800d883a 	mov	r6,r16
 40241b0:	880f883a 	mov	r7,r17
 40241b4:	1009883a 	mov	r4,r2
 40241b8:	180b883a 	mov	r5,r3
 40241bc:	102b883a 	mov	r21,r2
 40241c0:	1829883a 	mov	r20,r3
 40241c4:	402c0d80 	call	402c0d8 <__gedf2>
 40241c8:	00806c16 	blt	zero,r2,402437c <_dtoa_r+0x1304>
 40241cc:	89e0003c 	xorhi	r7,r17,32768
 40241d0:	800d883a 	mov	r6,r16
 40241d4:	a809883a 	mov	r4,r21
 40241d8:	a00b883a 	mov	r5,r20
 40241dc:	402c1b40 	call	402c1b4 <__ledf2>
 40241e0:	103d7e0e 	bge	r2,zero,40237dc <__flash_rwdata_start+0xffff34c8>
 40241e4:	002b883a 	mov	r21,zero
 40241e8:	0023883a 	mov	r17,zero
 40241ec:	003efb06 	br	4023ddc <__flash_rwdata_start+0xffff3ac8>
 40241f0:	d8800717 	ldw	r2,28(sp)
 40241f4:	003bd006 	br	4023138 <__flash_rwdata_start+0xffff2e24>
 40241f8:	d9000a17 	ldw	r4,40(sp)
 40241fc:	d9800d17 	ldw	r6,52(sp)
 4024200:	dd400a15 	stw	r21,40(sp)
 4024204:	a905c83a 	sub	r2,r21,r4
 4024208:	308d883a 	add	r6,r6,r2
 402420c:	d9800d15 	stw	r6,52(sp)
 4024210:	002b883a 	mov	r21,zero
 4024214:	003e0606 	br	4023a30 <__flash_rwdata_start+0xffff371c>
 4024218:	9023883a 	mov	r17,r18
 402421c:	9829883a 	mov	r20,r19
 4024220:	04000084 	movi	r16,2
 4024224:	003c9206 	br	4023470 <__flash_rwdata_start+0xffff315c>
 4024228:	04000044 	movi	r16,1
 402422c:	dc000c15 	stw	r16,48(sp)
 4024230:	dc000615 	stw	r16,24(sp)
 4024234:	dc002215 	stw	r16,136(sp)
 4024238:	e0001115 	stw	zero,68(fp)
 402423c:	000b883a 	mov	r5,zero
 4024240:	003c6906 	br	40233e8 <__flash_rwdata_start+0xffff30d4>
 4024244:	3021883a 	mov	r16,r6
 4024248:	003ffb06 	br	4024238 <__flash_rwdata_start+0xffff3f24>
 402424c:	1000021e 	bne	r2,zero,4024258 <_dtoa_r+0x11e0>
 4024250:	4200004c 	andi	r8,r8,1
 4024254:	403e7d1e 	bne	r8,zero,4023c4c <__flash_rwdata_start+0xffff3938>
 4024258:	01000c04 	movi	r4,48
 402425c:	00000106 	br	4024264 <_dtoa_r+0x11ec>
 4024260:	102f883a 	mov	r23,r2
 4024264:	b8bfffc4 	addi	r2,r23,-1
 4024268:	10c00007 	ldb	r3,0(r2)
 402426c:	193ffc26 	beq	r3,r4,4024260 <__flash_rwdata_start+0xffff3f4c>
 4024270:	003e8706 	br	4023c90 <__flash_rwdata_start+0xffff397c>
 4024274:	d8800517 	ldw	r2,20(sp)
 4024278:	00a3c83a 	sub	r17,zero,r2
 402427c:	8800a426 	beq	r17,zero,4024510 <_dtoa_r+0x1498>
 4024280:	888003cc 	andi	r2,r17,15
 4024284:	100490fa 	slli	r2,r2,3
 4024288:	00c00034 	movhi	r3,0
 402428c:	18c04a04 	addi	r3,r3,296
 4024290:	1885883a 	add	r2,r3,r2
 4024294:	11800017 	ldw	r6,0(r2)
 4024298:	11c00117 	ldw	r7,4(r2)
 402429c:	9009883a 	mov	r4,r18
 40242a0:	980b883a 	mov	r5,r19
 40242a4:	8823d13a 	srai	r17,r17,4
 40242a8:	402c2a80 	call	402c2a8 <__muldf3>
 40242ac:	d8800f15 	stw	r2,60(sp)
 40242b0:	d8c01015 	stw	r3,64(sp)
 40242b4:	8800e826 	beq	r17,zero,4024658 <_dtoa_r+0x15e0>
 40242b8:	05000034 	movhi	r20,0
 40242bc:	a5004004 	addi	r20,r20,256
 40242c0:	04000084 	movi	r16,2
 40242c4:	8980004c 	andi	r6,r17,1
 40242c8:	1009883a 	mov	r4,r2
 40242cc:	8823d07a 	srai	r17,r17,1
 40242d0:	180b883a 	mov	r5,r3
 40242d4:	30000426 	beq	r6,zero,40242e8 <_dtoa_r+0x1270>
 40242d8:	a1800017 	ldw	r6,0(r20)
 40242dc:	a1c00117 	ldw	r7,4(r20)
 40242e0:	84000044 	addi	r16,r16,1
 40242e4:	402c2a80 	call	402c2a8 <__muldf3>
 40242e8:	a5000204 	addi	r20,r20,8
 40242ec:	883ff51e 	bne	r17,zero,40242c4 <__flash_rwdata_start+0xffff3fb0>
 40242f0:	d8800f15 	stw	r2,60(sp)
 40242f4:	d8c01015 	stw	r3,64(sp)
 40242f8:	003c7606 	br	40234d4 <__flash_rwdata_start+0xffff31c0>
 40242fc:	00c00c04 	movi	r3,48
 4024300:	10c00005 	stb	r3,0(r2)
 4024304:	d8c00517 	ldw	r3,20(sp)
 4024308:	bd3fffc3 	ldbu	r20,-1(r23)
 402430c:	18c00044 	addi	r3,r3,1
 4024310:	d8c00515 	stw	r3,20(sp)
 4024314:	003db906 	br	40239fc <__flash_rwdata_start+0xffff36e8>
 4024318:	89400117 	ldw	r5,4(r17)
 402431c:	e009883a 	mov	r4,fp
 4024320:	402610c0 	call	402610c <_Balloc>
 4024324:	89800417 	ldw	r6,16(r17)
 4024328:	89400304 	addi	r5,r17,12
 402432c:	11000304 	addi	r4,r2,12
 4024330:	31800084 	addi	r6,r6,2
 4024334:	318d883a 	add	r6,r6,r6
 4024338:	318d883a 	add	r6,r6,r6
 402433c:	1027883a 	mov	r19,r2
 4024340:	4025e9c0 	call	4025e9c <memcpy>
 4024344:	01800044 	movi	r6,1
 4024348:	980b883a 	mov	r5,r19
 402434c:	e009883a 	mov	r4,fp
 4024350:	40269480 	call	4026948 <__lshift>
 4024354:	1029883a 	mov	r20,r2
 4024358:	003ecc06 	br	4023e8c <__flash_rwdata_start+0xffff3b78>
 402435c:	00800e44 	movi	r2,57
 4024360:	90809026 	beq	r18,r2,40245a4 <_dtoa_r+0x152c>
 4024364:	92000044 	addi	r8,r18,1
 4024368:	003f1f06 	br	4023fe8 <__flash_rwdata_start+0xffff3cd4>
 402436c:	9011883a 	mov	r8,r18
 4024370:	8825883a 	mov	r18,r17
 4024374:	a023883a 	mov	r17,r20
 4024378:	003e2906 	br	4023c20 <__flash_rwdata_start+0xffff390c>
 402437c:	002b883a 	mov	r21,zero
 4024380:	0023883a 	mov	r17,zero
 4024384:	003f5406 	br	40240d8 <__flash_rwdata_start+0xffff3dc4>
 4024388:	61bfffc4 	addi	r6,r12,-1
 402438c:	300490fa 	slli	r2,r6,3
 4024390:	00c00034 	movhi	r3,0
 4024394:	18c04a04 	addi	r3,r3,296
 4024398:	1885883a 	add	r2,r3,r2
 402439c:	11000017 	ldw	r4,0(r2)
 40243a0:	11400117 	ldw	r5,4(r2)
 40243a4:	d8800717 	ldw	r2,28(sp)
 40243a8:	880f883a 	mov	r7,r17
 40243ac:	d9801215 	stw	r6,72(sp)
 40243b0:	800d883a 	mov	r6,r16
 40243b4:	db001615 	stw	r12,88(sp)
 40243b8:	15c00044 	addi	r23,r2,1
 40243bc:	402c2a80 	call	402c2a8 <__muldf3>
 40243c0:	d9401017 	ldw	r5,64(sp)
 40243c4:	d9000f17 	ldw	r4,60(sp)
 40243c8:	d8c01515 	stw	r3,84(sp)
 40243cc:	d8801415 	stw	r2,80(sp)
 40243d0:	402d4100 	call	402d410 <__fixdfsi>
 40243d4:	1009883a 	mov	r4,r2
 40243d8:	1021883a 	mov	r16,r2
 40243dc:	402d4900 	call	402d490 <__floatsidf>
 40243e0:	d9000f17 	ldw	r4,60(sp)
 40243e4:	d9401017 	ldw	r5,64(sp)
 40243e8:	100d883a 	mov	r6,r2
 40243ec:	180f883a 	mov	r7,r3
 40243f0:	402cb140 	call	402cb14 <__subdf3>
 40243f4:	1829883a 	mov	r20,r3
 40243f8:	d8c00717 	ldw	r3,28(sp)
 40243fc:	84000c04 	addi	r16,r16,48
 4024400:	1023883a 	mov	r17,r2
 4024404:	1c000005 	stb	r16,0(r3)
 4024408:	db001617 	ldw	r12,88(sp)
 402440c:	00800044 	movi	r2,1
 4024410:	60802226 	beq	r12,r2,402449c <_dtoa_r+0x1424>
 4024414:	d9c00717 	ldw	r7,28(sp)
 4024418:	8805883a 	mov	r2,r17
 402441c:	b82b883a 	mov	r21,r23
 4024420:	3b19883a 	add	r12,r7,r12
 4024424:	6023883a 	mov	r17,r12
 4024428:	a007883a 	mov	r3,r20
 402442c:	dc800f15 	stw	r18,60(sp)
 4024430:	000d883a 	mov	r6,zero
 4024434:	01d00934 	movhi	r7,16420
 4024438:	1009883a 	mov	r4,r2
 402443c:	180b883a 	mov	r5,r3
 4024440:	402c2a80 	call	402c2a8 <__muldf3>
 4024444:	180b883a 	mov	r5,r3
 4024448:	1009883a 	mov	r4,r2
 402444c:	1829883a 	mov	r20,r3
 4024450:	1025883a 	mov	r18,r2
 4024454:	402d4100 	call	402d410 <__fixdfsi>
 4024458:	1009883a 	mov	r4,r2
 402445c:	1021883a 	mov	r16,r2
 4024460:	402d4900 	call	402d490 <__floatsidf>
 4024464:	100d883a 	mov	r6,r2
 4024468:	180f883a 	mov	r7,r3
 402446c:	9009883a 	mov	r4,r18
 4024470:	a00b883a 	mov	r5,r20
 4024474:	84000c04 	addi	r16,r16,48
 4024478:	402cb140 	call	402cb14 <__subdf3>
 402447c:	ad400044 	addi	r21,r21,1
 4024480:	ac3fffc5 	stb	r16,-1(r21)
 4024484:	ac7fea1e 	bne	r21,r17,4024430 <__flash_rwdata_start+0xffff411c>
 4024488:	1023883a 	mov	r17,r2
 402448c:	d8801217 	ldw	r2,72(sp)
 4024490:	dc800f17 	ldw	r18,60(sp)
 4024494:	1829883a 	mov	r20,r3
 4024498:	b8af883a 	add	r23,r23,r2
 402449c:	d9001417 	ldw	r4,80(sp)
 40244a0:	d9401517 	ldw	r5,84(sp)
 40244a4:	000d883a 	mov	r6,zero
 40244a8:	01cff834 	movhi	r7,16352
 40244ac:	402add40 	call	402add4 <__adddf3>
 40244b0:	880d883a 	mov	r6,r17
 40244b4:	a00f883a 	mov	r7,r20
 40244b8:	1009883a 	mov	r4,r2
 40244bc:	180b883a 	mov	r5,r3
 40244c0:	402c1b40 	call	402c1b4 <__ledf2>
 40244c4:	10003e0e 	bge	r2,zero,40245c0 <_dtoa_r+0x1548>
 40244c8:	d9001317 	ldw	r4,76(sp)
 40244cc:	bd3fffc3 	ldbu	r20,-1(r23)
 40244d0:	d9000515 	stw	r4,20(sp)
 40244d4:	003d3b06 	br	40239c4 <__flash_rwdata_start+0xffff36b0>
 40244d8:	0027883a 	mov	r19,zero
 40244dc:	003f1b06 	br	402414c <__flash_rwdata_start+0xffff3e38>
 40244e0:	d8800817 	ldw	r2,32(sp)
 40244e4:	11e9c83a 	sub	r20,r2,r7
 40244e8:	0005883a 	mov	r2,zero
 40244ec:	003d5406 	br	4023a40 <__flash_rwdata_start+0xffff372c>
 40244f0:	00800044 	movi	r2,1
 40244f4:	003dc706 	br	4023c14 <__flash_rwdata_start+0xffff3900>
 40244f8:	d8c00217 	ldw	r3,8(sp)
 40244fc:	00800d84 	movi	r2,54
 4024500:	dd400a17 	ldw	r21,40(sp)
 4024504:	10c5c83a 	sub	r2,r2,r3
 4024508:	dd000817 	ldw	r20,32(sp)
 402450c:	003d4c06 	br	4023a40 <__flash_rwdata_start+0xffff372c>
 4024510:	dc800f15 	stw	r18,60(sp)
 4024514:	dcc01015 	stw	r19,64(sp)
 4024518:	04000084 	movi	r16,2
 402451c:	003bed06 	br	40234d4 <__flash_rwdata_start+0xffff31c0>
 4024520:	d9000617 	ldw	r4,24(sp)
 4024524:	203f0d26 	beq	r4,zero,402415c <__flash_rwdata_start+0xffff3e48>
 4024528:	d9800c17 	ldw	r6,48(sp)
 402452c:	01bcab0e 	bge	zero,r6,40237dc <__flash_rwdata_start+0xffff34c8>
 4024530:	d9401017 	ldw	r5,64(sp)
 4024534:	d9000f17 	ldw	r4,60(sp)
 4024538:	000d883a 	mov	r6,zero
 402453c:	01d00934 	movhi	r7,16420
 4024540:	402c2a80 	call	402c2a8 <__muldf3>
 4024544:	81000044 	addi	r4,r16,1
 4024548:	d8800f15 	stw	r2,60(sp)
 402454c:	d8c01015 	stw	r3,64(sp)
 4024550:	402d4900 	call	402d490 <__floatsidf>
 4024554:	d9800f17 	ldw	r6,60(sp)
 4024558:	d9c01017 	ldw	r7,64(sp)
 402455c:	1009883a 	mov	r4,r2
 4024560:	180b883a 	mov	r5,r3
 4024564:	402c2a80 	call	402c2a8 <__muldf3>
 4024568:	01d00734 	movhi	r7,16412
 402456c:	000d883a 	mov	r6,zero
 4024570:	1009883a 	mov	r4,r2
 4024574:	180b883a 	mov	r5,r3
 4024578:	402add40 	call	402add4 <__adddf3>
 402457c:	d9c00517 	ldw	r7,20(sp)
 4024580:	047f3034 	movhi	r17,64704
 4024584:	1021883a 	mov	r16,r2
 4024588:	39ffffc4 	addi	r7,r7,-1
 402458c:	d9c01315 	stw	r7,76(sp)
 4024590:	1c63883a 	add	r17,r3,r17
 4024594:	db000c17 	ldw	r12,48(sp)
 4024598:	003bea06 	br	4023544 <__flash_rwdata_start+0xffff3230>
 402459c:	dc000915 	stw	r16,36(sp)
 40245a0:	003e0e06 	br	4023ddc <__flash_rwdata_start+0xffff3ac8>
 40245a4:	01000e44 	movi	r4,57
 40245a8:	8825883a 	mov	r18,r17
 40245ac:	9dc00044 	addi	r23,r19,1
 40245b0:	99000005 	stb	r4,0(r19)
 40245b4:	a023883a 	mov	r17,r20
 40245b8:	dc000915 	stw	r16,36(sp)
 40245bc:	003da406 	br	4023c50 <__flash_rwdata_start+0xffff393c>
 40245c0:	d9801417 	ldw	r6,80(sp)
 40245c4:	d9c01517 	ldw	r7,84(sp)
 40245c8:	0009883a 	mov	r4,zero
 40245cc:	014ff834 	movhi	r5,16352
 40245d0:	402cb140 	call	402cb14 <__subdf3>
 40245d4:	880d883a 	mov	r6,r17
 40245d8:	a00f883a 	mov	r7,r20
 40245dc:	1009883a 	mov	r4,r2
 40245e0:	180b883a 	mov	r5,r3
 40245e4:	402c0d80 	call	402c0d8 <__gedf2>
 40245e8:	00bc7c0e 	bge	zero,r2,40237dc <__flash_rwdata_start+0xffff34c8>
 40245ec:	01000c04 	movi	r4,48
 40245f0:	00000106 	br	40245f8 <_dtoa_r+0x1580>
 40245f4:	102f883a 	mov	r23,r2
 40245f8:	b8bfffc4 	addi	r2,r23,-1
 40245fc:	10c00007 	ldb	r3,0(r2)
 4024600:	193ffc26 	beq	r3,r4,40245f4 <__flash_rwdata_start+0xffff42e0>
 4024604:	d9801317 	ldw	r6,76(sp)
 4024608:	d9800515 	stw	r6,20(sp)
 402460c:	003c4406 	br	4023720 <__flash_rwdata_start+0xffff340c>
 4024610:	d9801317 	ldw	r6,76(sp)
 4024614:	d9800515 	stw	r6,20(sp)
 4024618:	003cea06 	br	40239c4 <__flash_rwdata_start+0xffff36b0>
 402461c:	dd800f17 	ldw	r22,60(sp)
 4024620:	dcc01017 	ldw	r19,64(sp)
 4024624:	dc801217 	ldw	r18,72(sp)
 4024628:	003c6c06 	br	40237dc <__flash_rwdata_start+0xffff34c8>
 402462c:	903e031e 	bne	r18,zero,4023e3c <__flash_rwdata_start+0xffff3b28>
 4024630:	003ebb06 	br	4024120 <__flash_rwdata_start+0xffff3e0c>
 4024634:	103e6c1e 	bne	r2,zero,4023fe8 <__flash_rwdata_start+0xffff3cd4>
 4024638:	4080004c 	andi	r2,r8,1
 402463c:	103e6a26 	beq	r2,zero,4023fe8 <__flash_rwdata_start+0xffff3cd4>
 4024640:	003e6606 	br	4023fdc <__flash_rwdata_start+0xffff3cc8>
 4024644:	d8c00317 	ldw	r3,12(sp)
 4024648:	00800084 	movi	r2,2
 402464c:	10c02916 	blt	r2,r3,40246f4 <_dtoa_r+0x167c>
 4024650:	d9000c17 	ldw	r4,48(sp)
 4024654:	003e8806 	br	4024078 <__flash_rwdata_start+0xffff3d64>
 4024658:	04000084 	movi	r16,2
 402465c:	003b9d06 	br	40234d4 <__flash_rwdata_start+0xffff31c0>
 4024660:	d9001317 	ldw	r4,76(sp)
 4024664:	d9000515 	stw	r4,20(sp)
 4024668:	003cd606 	br	40239c4 <__flash_rwdata_start+0xffff36b0>
 402466c:	d8801317 	ldw	r2,76(sp)
 4024670:	d8800515 	stw	r2,20(sp)
 4024674:	003c2a06 	br	4023720 <__flash_rwdata_start+0xffff340c>
 4024678:	d9800317 	ldw	r6,12(sp)
 402467c:	00800084 	movi	r2,2
 4024680:	11801516 	blt	r2,r6,40246d8 <_dtoa_r+0x1660>
 4024684:	d9c00c17 	ldw	r7,48(sp)
 4024688:	d9c00615 	stw	r7,24(sp)
 402468c:	003df706 	br	4023e6c <__flash_rwdata_start+0xffff3b58>
 4024690:	193d3926 	beq	r3,r4,4023b78 <__flash_rwdata_start+0xffff3864>
 4024694:	00c00f04 	movi	r3,60
 4024698:	1885c83a 	sub	r2,r3,r2
 402469c:	003ddf06 	br	4023e1c <__flash_rwdata_start+0xffff3b08>
 40246a0:	e009883a 	mov	r4,fp
 40246a4:	e0001115 	stw	zero,68(fp)
 40246a8:	000b883a 	mov	r5,zero
 40246ac:	402610c0 	call	402610c <_Balloc>
 40246b0:	d8800715 	stw	r2,28(sp)
 40246b4:	d8c00717 	ldw	r3,28(sp)
 40246b8:	00bfffc4 	movi	r2,-1
 40246bc:	01000044 	movi	r4,1
 40246c0:	d8800c15 	stw	r2,48(sp)
 40246c4:	e0c01015 	stw	r3,64(fp)
 40246c8:	d9000b15 	stw	r4,44(sp)
 40246cc:	d8800615 	stw	r2,24(sp)
 40246d0:	d8002215 	stw	zero,136(sp)
 40246d4:	003c4106 	br	40237dc <__flash_rwdata_start+0xffff34c8>
 40246d8:	d8c00c17 	ldw	r3,48(sp)
 40246dc:	d8c00615 	stw	r3,24(sp)
 40246e0:	003e7006 	br	40240a4 <__flash_rwdata_start+0xffff3d90>
 40246e4:	04400044 	movi	r17,1
 40246e8:	003b2006 	br	402336c <__flash_rwdata_start+0xffff3058>
 40246ec:	000b883a 	mov	r5,zero
 40246f0:	003b3d06 	br	40233e8 <__flash_rwdata_start+0xffff30d4>
 40246f4:	d8800c17 	ldw	r2,48(sp)
 40246f8:	d8800615 	stw	r2,24(sp)
 40246fc:	003e6906 	br	40240a4 <__flash_rwdata_start+0xffff3d90>

04024700 <__sflush_r>:
 4024700:	2880030b 	ldhu	r2,12(r5)
 4024704:	defffb04 	addi	sp,sp,-20
 4024708:	dcc00315 	stw	r19,12(sp)
 402470c:	dc400115 	stw	r17,4(sp)
 4024710:	dfc00415 	stw	ra,16(sp)
 4024714:	dc800215 	stw	r18,8(sp)
 4024718:	dc000015 	stw	r16,0(sp)
 402471c:	10c0020c 	andi	r3,r2,8
 4024720:	2823883a 	mov	r17,r5
 4024724:	2027883a 	mov	r19,r4
 4024728:	1800311e 	bne	r3,zero,40247f0 <__sflush_r+0xf0>
 402472c:	28c00117 	ldw	r3,4(r5)
 4024730:	10820014 	ori	r2,r2,2048
 4024734:	2880030d 	sth	r2,12(r5)
 4024738:	00c04b0e 	bge	zero,r3,4024868 <__sflush_r+0x168>
 402473c:	8a000a17 	ldw	r8,40(r17)
 4024740:	40002326 	beq	r8,zero,40247d0 <__sflush_r+0xd0>
 4024744:	9c000017 	ldw	r16,0(r19)
 4024748:	10c4000c 	andi	r3,r2,4096
 402474c:	98000015 	stw	zero,0(r19)
 4024750:	18004826 	beq	r3,zero,4024874 <__sflush_r+0x174>
 4024754:	89801417 	ldw	r6,80(r17)
 4024758:	10c0010c 	andi	r3,r2,4
 402475c:	18000626 	beq	r3,zero,4024778 <__sflush_r+0x78>
 4024760:	88c00117 	ldw	r3,4(r17)
 4024764:	88800c17 	ldw	r2,48(r17)
 4024768:	30cdc83a 	sub	r6,r6,r3
 402476c:	10000226 	beq	r2,zero,4024778 <__sflush_r+0x78>
 4024770:	88800f17 	ldw	r2,60(r17)
 4024774:	308dc83a 	sub	r6,r6,r2
 4024778:	89400717 	ldw	r5,28(r17)
 402477c:	000f883a 	mov	r7,zero
 4024780:	9809883a 	mov	r4,r19
 4024784:	403ee83a 	callr	r8
 4024788:	00ffffc4 	movi	r3,-1
 402478c:	10c04426 	beq	r2,r3,40248a0 <__sflush_r+0x1a0>
 4024790:	88c0030b 	ldhu	r3,12(r17)
 4024794:	89000417 	ldw	r4,16(r17)
 4024798:	88000115 	stw	zero,4(r17)
 402479c:	197dffcc 	andi	r5,r3,63487
 40247a0:	8940030d 	sth	r5,12(r17)
 40247a4:	89000015 	stw	r4,0(r17)
 40247a8:	18c4000c 	andi	r3,r3,4096
 40247ac:	18002c1e 	bne	r3,zero,4024860 <__sflush_r+0x160>
 40247b0:	89400c17 	ldw	r5,48(r17)
 40247b4:	9c000015 	stw	r16,0(r19)
 40247b8:	28000526 	beq	r5,zero,40247d0 <__sflush_r+0xd0>
 40247bc:	88801004 	addi	r2,r17,64
 40247c0:	28800226 	beq	r5,r2,40247cc <__sflush_r+0xcc>
 40247c4:	9809883a 	mov	r4,r19
 40247c8:	4024e7c0 	call	4024e7c <_free_r>
 40247cc:	88000c15 	stw	zero,48(r17)
 40247d0:	0005883a 	mov	r2,zero
 40247d4:	dfc00417 	ldw	ra,16(sp)
 40247d8:	dcc00317 	ldw	r19,12(sp)
 40247dc:	dc800217 	ldw	r18,8(sp)
 40247e0:	dc400117 	ldw	r17,4(sp)
 40247e4:	dc000017 	ldw	r16,0(sp)
 40247e8:	dec00504 	addi	sp,sp,20
 40247ec:	f800283a 	ret
 40247f0:	2c800417 	ldw	r18,16(r5)
 40247f4:	903ff626 	beq	r18,zero,40247d0 <__flash_rwdata_start+0xffff44bc>
 40247f8:	2c000017 	ldw	r16,0(r5)
 40247fc:	108000cc 	andi	r2,r2,3
 4024800:	2c800015 	stw	r18,0(r5)
 4024804:	84a1c83a 	sub	r16,r16,r18
 4024808:	1000131e 	bne	r2,zero,4024858 <__sflush_r+0x158>
 402480c:	28800517 	ldw	r2,20(r5)
 4024810:	88800215 	stw	r2,8(r17)
 4024814:	04000316 	blt	zero,r16,4024824 <__sflush_r+0x124>
 4024818:	003fed06 	br	40247d0 <__flash_rwdata_start+0xffff44bc>
 402481c:	90a5883a 	add	r18,r18,r2
 4024820:	043feb0e 	bge	zero,r16,40247d0 <__flash_rwdata_start+0xffff44bc>
 4024824:	88800917 	ldw	r2,36(r17)
 4024828:	89400717 	ldw	r5,28(r17)
 402482c:	800f883a 	mov	r7,r16
 4024830:	900d883a 	mov	r6,r18
 4024834:	9809883a 	mov	r4,r19
 4024838:	103ee83a 	callr	r2
 402483c:	80a1c83a 	sub	r16,r16,r2
 4024840:	00bff616 	blt	zero,r2,402481c <__flash_rwdata_start+0xffff4508>
 4024844:	88c0030b 	ldhu	r3,12(r17)
 4024848:	00bfffc4 	movi	r2,-1
 402484c:	18c01014 	ori	r3,r3,64
 4024850:	88c0030d 	sth	r3,12(r17)
 4024854:	003fdf06 	br	40247d4 <__flash_rwdata_start+0xffff44c0>
 4024858:	0005883a 	mov	r2,zero
 402485c:	003fec06 	br	4024810 <__flash_rwdata_start+0xffff44fc>
 4024860:	88801415 	stw	r2,80(r17)
 4024864:	003fd206 	br	40247b0 <__flash_rwdata_start+0xffff449c>
 4024868:	28c00f17 	ldw	r3,60(r5)
 402486c:	00ffb316 	blt	zero,r3,402473c <__flash_rwdata_start+0xffff4428>
 4024870:	003fd706 	br	40247d0 <__flash_rwdata_start+0xffff44bc>
 4024874:	89400717 	ldw	r5,28(r17)
 4024878:	000d883a 	mov	r6,zero
 402487c:	01c00044 	movi	r7,1
 4024880:	9809883a 	mov	r4,r19
 4024884:	403ee83a 	callr	r8
 4024888:	100d883a 	mov	r6,r2
 402488c:	00bfffc4 	movi	r2,-1
 4024890:	30801426 	beq	r6,r2,40248e4 <__sflush_r+0x1e4>
 4024894:	8880030b 	ldhu	r2,12(r17)
 4024898:	8a000a17 	ldw	r8,40(r17)
 402489c:	003fae06 	br	4024758 <__flash_rwdata_start+0xffff4444>
 40248a0:	98c00017 	ldw	r3,0(r19)
 40248a4:	183fba26 	beq	r3,zero,4024790 <__flash_rwdata_start+0xffff447c>
 40248a8:	01000744 	movi	r4,29
 40248ac:	19000626 	beq	r3,r4,40248c8 <__sflush_r+0x1c8>
 40248b0:	01000584 	movi	r4,22
 40248b4:	19000426 	beq	r3,r4,40248c8 <__sflush_r+0x1c8>
 40248b8:	88c0030b 	ldhu	r3,12(r17)
 40248bc:	18c01014 	ori	r3,r3,64
 40248c0:	88c0030d 	sth	r3,12(r17)
 40248c4:	003fc306 	br	40247d4 <__flash_rwdata_start+0xffff44c0>
 40248c8:	8880030b 	ldhu	r2,12(r17)
 40248cc:	88c00417 	ldw	r3,16(r17)
 40248d0:	88000115 	stw	zero,4(r17)
 40248d4:	10bdffcc 	andi	r2,r2,63487
 40248d8:	8880030d 	sth	r2,12(r17)
 40248dc:	88c00015 	stw	r3,0(r17)
 40248e0:	003fb306 	br	40247b0 <__flash_rwdata_start+0xffff449c>
 40248e4:	98800017 	ldw	r2,0(r19)
 40248e8:	103fea26 	beq	r2,zero,4024894 <__flash_rwdata_start+0xffff4580>
 40248ec:	00c00744 	movi	r3,29
 40248f0:	10c00226 	beq	r2,r3,40248fc <__sflush_r+0x1fc>
 40248f4:	00c00584 	movi	r3,22
 40248f8:	10c0031e 	bne	r2,r3,4024908 <__sflush_r+0x208>
 40248fc:	9c000015 	stw	r16,0(r19)
 4024900:	0005883a 	mov	r2,zero
 4024904:	003fb306 	br	40247d4 <__flash_rwdata_start+0xffff44c0>
 4024908:	88c0030b 	ldhu	r3,12(r17)
 402490c:	3005883a 	mov	r2,r6
 4024910:	18c01014 	ori	r3,r3,64
 4024914:	88c0030d 	sth	r3,12(r17)
 4024918:	003fae06 	br	40247d4 <__flash_rwdata_start+0xffff44c0>

0402491c <_fflush_r>:
 402491c:	defffd04 	addi	sp,sp,-12
 4024920:	dc000115 	stw	r16,4(sp)
 4024924:	dfc00215 	stw	ra,8(sp)
 4024928:	2021883a 	mov	r16,r4
 402492c:	20000226 	beq	r4,zero,4024938 <_fflush_r+0x1c>
 4024930:	20800e17 	ldw	r2,56(r4)
 4024934:	10000c26 	beq	r2,zero,4024968 <_fflush_r+0x4c>
 4024938:	2880030f 	ldh	r2,12(r5)
 402493c:	1000051e 	bne	r2,zero,4024954 <_fflush_r+0x38>
 4024940:	0005883a 	mov	r2,zero
 4024944:	dfc00217 	ldw	ra,8(sp)
 4024948:	dc000117 	ldw	r16,4(sp)
 402494c:	dec00304 	addi	sp,sp,12
 4024950:	f800283a 	ret
 4024954:	8009883a 	mov	r4,r16
 4024958:	dfc00217 	ldw	ra,8(sp)
 402495c:	dc000117 	ldw	r16,4(sp)
 4024960:	dec00304 	addi	sp,sp,12
 4024964:	40247001 	jmpi	4024700 <__sflush_r>
 4024968:	d9400015 	stw	r5,0(sp)
 402496c:	4024d080 	call	4024d08 <__sinit>
 4024970:	d9400017 	ldw	r5,0(sp)
 4024974:	003ff006 	br	4024938 <__flash_rwdata_start+0xffff4624>

04024978 <fflush>:
 4024978:	20000526 	beq	r4,zero,4024990 <fflush+0x18>
 402497c:	00800034 	movhi	r2,0
 4024980:	10878b04 	addi	r2,r2,7724
 4024984:	200b883a 	mov	r5,r4
 4024988:	11000017 	ldw	r4,0(r2)
 402498c:	402491c1 	jmpi	402491c <_fflush_r>
 4024990:	00800034 	movhi	r2,0
 4024994:	10878a04 	addi	r2,r2,7720
 4024998:	11000017 	ldw	r4,0(r2)
 402499c:	014100b4 	movhi	r5,1026
 40249a0:	29524704 	addi	r5,r5,18716
 40249a4:	40252501 	jmpi	4025250 <_fwalk_reent>

040249a8 <__fp_unlock>:
 40249a8:	0005883a 	mov	r2,zero
 40249ac:	f800283a 	ret

040249b0 <_cleanup_r>:
 40249b0:	014100f4 	movhi	r5,1027
 40249b4:	29637104 	addi	r5,r5,-29244
 40249b8:	40252501 	jmpi	4025250 <_fwalk_reent>

040249bc <__sinit.part.1>:
 40249bc:	defff704 	addi	sp,sp,-36
 40249c0:	00c100b4 	movhi	r3,1026
 40249c4:	dfc00815 	stw	ra,32(sp)
 40249c8:	ddc00715 	stw	r23,28(sp)
 40249cc:	dd800615 	stw	r22,24(sp)
 40249d0:	dd400515 	stw	r21,20(sp)
 40249d4:	dd000415 	stw	r20,16(sp)
 40249d8:	dcc00315 	stw	r19,12(sp)
 40249dc:	dc800215 	stw	r18,8(sp)
 40249e0:	dc400115 	stw	r17,4(sp)
 40249e4:	dc000015 	stw	r16,0(sp)
 40249e8:	18d26c04 	addi	r3,r3,18864
 40249ec:	24000117 	ldw	r16,4(r4)
 40249f0:	20c00f15 	stw	r3,60(r4)
 40249f4:	2080bb04 	addi	r2,r4,748
 40249f8:	00c000c4 	movi	r3,3
 40249fc:	20c0b915 	stw	r3,740(r4)
 4024a00:	2080ba15 	stw	r2,744(r4)
 4024a04:	2000b815 	stw	zero,736(r4)
 4024a08:	05c00204 	movi	r23,8
 4024a0c:	00800104 	movi	r2,4
 4024a10:	2025883a 	mov	r18,r4
 4024a14:	b80d883a 	mov	r6,r23
 4024a18:	81001704 	addi	r4,r16,92
 4024a1c:	000b883a 	mov	r5,zero
 4024a20:	80000015 	stw	zero,0(r16)
 4024a24:	80000115 	stw	zero,4(r16)
 4024a28:	80000215 	stw	zero,8(r16)
 4024a2c:	8080030d 	sth	r2,12(r16)
 4024a30:	80001915 	stw	zero,100(r16)
 4024a34:	8000038d 	sth	zero,14(r16)
 4024a38:	80000415 	stw	zero,16(r16)
 4024a3c:	80000515 	stw	zero,20(r16)
 4024a40:	80000615 	stw	zero,24(r16)
 4024a44:	4025fe40 	call	4025fe4 <memset>
 4024a48:	058100b4 	movhi	r22,1026
 4024a4c:	94400217 	ldw	r17,8(r18)
 4024a50:	054100b4 	movhi	r21,1026
 4024a54:	050100b4 	movhi	r20,1026
 4024a58:	04c100b4 	movhi	r19,1026
 4024a5c:	b59ca304 	addi	r22,r22,29324
 4024a60:	ad5cba04 	addi	r21,r21,29416
 4024a64:	a51cd904 	addi	r20,r20,29540
 4024a68:	9cdcf004 	addi	r19,r19,29632
 4024a6c:	85800815 	stw	r22,32(r16)
 4024a70:	85400915 	stw	r21,36(r16)
 4024a74:	85000a15 	stw	r20,40(r16)
 4024a78:	84c00b15 	stw	r19,44(r16)
 4024a7c:	84000715 	stw	r16,28(r16)
 4024a80:	00800284 	movi	r2,10
 4024a84:	8880030d 	sth	r2,12(r17)
 4024a88:	00800044 	movi	r2,1
 4024a8c:	b80d883a 	mov	r6,r23
 4024a90:	89001704 	addi	r4,r17,92
 4024a94:	000b883a 	mov	r5,zero
 4024a98:	88000015 	stw	zero,0(r17)
 4024a9c:	88000115 	stw	zero,4(r17)
 4024aa0:	88000215 	stw	zero,8(r17)
 4024aa4:	88001915 	stw	zero,100(r17)
 4024aa8:	8880038d 	sth	r2,14(r17)
 4024aac:	88000415 	stw	zero,16(r17)
 4024ab0:	88000515 	stw	zero,20(r17)
 4024ab4:	88000615 	stw	zero,24(r17)
 4024ab8:	4025fe40 	call	4025fe4 <memset>
 4024abc:	94000317 	ldw	r16,12(r18)
 4024ac0:	00800484 	movi	r2,18
 4024ac4:	8c400715 	stw	r17,28(r17)
 4024ac8:	8d800815 	stw	r22,32(r17)
 4024acc:	8d400915 	stw	r21,36(r17)
 4024ad0:	8d000a15 	stw	r20,40(r17)
 4024ad4:	8cc00b15 	stw	r19,44(r17)
 4024ad8:	8080030d 	sth	r2,12(r16)
 4024adc:	00800084 	movi	r2,2
 4024ae0:	80000015 	stw	zero,0(r16)
 4024ae4:	80000115 	stw	zero,4(r16)
 4024ae8:	80000215 	stw	zero,8(r16)
 4024aec:	80001915 	stw	zero,100(r16)
 4024af0:	8080038d 	sth	r2,14(r16)
 4024af4:	80000415 	stw	zero,16(r16)
 4024af8:	80000515 	stw	zero,20(r16)
 4024afc:	80000615 	stw	zero,24(r16)
 4024b00:	b80d883a 	mov	r6,r23
 4024b04:	000b883a 	mov	r5,zero
 4024b08:	81001704 	addi	r4,r16,92
 4024b0c:	4025fe40 	call	4025fe4 <memset>
 4024b10:	00800044 	movi	r2,1
 4024b14:	84000715 	stw	r16,28(r16)
 4024b18:	85800815 	stw	r22,32(r16)
 4024b1c:	85400915 	stw	r21,36(r16)
 4024b20:	85000a15 	stw	r20,40(r16)
 4024b24:	84c00b15 	stw	r19,44(r16)
 4024b28:	90800e15 	stw	r2,56(r18)
 4024b2c:	dfc00817 	ldw	ra,32(sp)
 4024b30:	ddc00717 	ldw	r23,28(sp)
 4024b34:	dd800617 	ldw	r22,24(sp)
 4024b38:	dd400517 	ldw	r21,20(sp)
 4024b3c:	dd000417 	ldw	r20,16(sp)
 4024b40:	dcc00317 	ldw	r19,12(sp)
 4024b44:	dc800217 	ldw	r18,8(sp)
 4024b48:	dc400117 	ldw	r17,4(sp)
 4024b4c:	dc000017 	ldw	r16,0(sp)
 4024b50:	dec00904 	addi	sp,sp,36
 4024b54:	f800283a 	ret

04024b58 <__fp_lock>:
 4024b58:	0005883a 	mov	r2,zero
 4024b5c:	f800283a 	ret

04024b60 <__sfmoreglue>:
 4024b60:	defffc04 	addi	sp,sp,-16
 4024b64:	dc800215 	stw	r18,8(sp)
 4024b68:	2825883a 	mov	r18,r5
 4024b6c:	dc000015 	stw	r16,0(sp)
 4024b70:	01401a04 	movi	r5,104
 4024b74:	2021883a 	mov	r16,r4
 4024b78:	913fffc4 	addi	r4,r18,-1
 4024b7c:	dfc00315 	stw	ra,12(sp)
 4024b80:	dc400115 	stw	r17,4(sp)
 4024b84:	40208380 	call	4020838 <__mulsi3>
 4024b88:	8009883a 	mov	r4,r16
 4024b8c:	11401d04 	addi	r5,r2,116
 4024b90:	1023883a 	mov	r17,r2
 4024b94:	40255ac0 	call	40255ac <_malloc_r>
 4024b98:	1021883a 	mov	r16,r2
 4024b9c:	10000726 	beq	r2,zero,4024bbc <__sfmoreglue+0x5c>
 4024ba0:	11000304 	addi	r4,r2,12
 4024ba4:	10000015 	stw	zero,0(r2)
 4024ba8:	14800115 	stw	r18,4(r2)
 4024bac:	11000215 	stw	r4,8(r2)
 4024bb0:	89801a04 	addi	r6,r17,104
 4024bb4:	000b883a 	mov	r5,zero
 4024bb8:	4025fe40 	call	4025fe4 <memset>
 4024bbc:	8005883a 	mov	r2,r16
 4024bc0:	dfc00317 	ldw	ra,12(sp)
 4024bc4:	dc800217 	ldw	r18,8(sp)
 4024bc8:	dc400117 	ldw	r17,4(sp)
 4024bcc:	dc000017 	ldw	r16,0(sp)
 4024bd0:	dec00404 	addi	sp,sp,16
 4024bd4:	f800283a 	ret

04024bd8 <__sfp>:
 4024bd8:	defffb04 	addi	sp,sp,-20
 4024bdc:	dc000015 	stw	r16,0(sp)
 4024be0:	04000034 	movhi	r16,0
 4024be4:	84078a04 	addi	r16,r16,7720
 4024be8:	dcc00315 	stw	r19,12(sp)
 4024bec:	2027883a 	mov	r19,r4
 4024bf0:	81000017 	ldw	r4,0(r16)
 4024bf4:	dfc00415 	stw	ra,16(sp)
 4024bf8:	dc800215 	stw	r18,8(sp)
 4024bfc:	20800e17 	ldw	r2,56(r4)
 4024c00:	dc400115 	stw	r17,4(sp)
 4024c04:	1000021e 	bne	r2,zero,4024c10 <__sfp+0x38>
 4024c08:	40249bc0 	call	40249bc <__sinit.part.1>
 4024c0c:	81000017 	ldw	r4,0(r16)
 4024c10:	2480b804 	addi	r18,r4,736
 4024c14:	047fffc4 	movi	r17,-1
 4024c18:	91000117 	ldw	r4,4(r18)
 4024c1c:	94000217 	ldw	r16,8(r18)
 4024c20:	213fffc4 	addi	r4,r4,-1
 4024c24:	20000a16 	blt	r4,zero,4024c50 <__sfp+0x78>
 4024c28:	8080030f 	ldh	r2,12(r16)
 4024c2c:	10000c26 	beq	r2,zero,4024c60 <__sfp+0x88>
 4024c30:	80c01d04 	addi	r3,r16,116
 4024c34:	00000206 	br	4024c40 <__sfp+0x68>
 4024c38:	18bfe60f 	ldh	r2,-104(r3)
 4024c3c:	10000826 	beq	r2,zero,4024c60 <__sfp+0x88>
 4024c40:	213fffc4 	addi	r4,r4,-1
 4024c44:	1c3ffd04 	addi	r16,r3,-12
 4024c48:	18c01a04 	addi	r3,r3,104
 4024c4c:	247ffa1e 	bne	r4,r17,4024c38 <__flash_rwdata_start+0xffff4924>
 4024c50:	90800017 	ldw	r2,0(r18)
 4024c54:	10001d26 	beq	r2,zero,4024ccc <__sfp+0xf4>
 4024c58:	1025883a 	mov	r18,r2
 4024c5c:	003fee06 	br	4024c18 <__flash_rwdata_start+0xffff4904>
 4024c60:	00bfffc4 	movi	r2,-1
 4024c64:	8080038d 	sth	r2,14(r16)
 4024c68:	00800044 	movi	r2,1
 4024c6c:	8080030d 	sth	r2,12(r16)
 4024c70:	80001915 	stw	zero,100(r16)
 4024c74:	80000015 	stw	zero,0(r16)
 4024c78:	80000215 	stw	zero,8(r16)
 4024c7c:	80000115 	stw	zero,4(r16)
 4024c80:	80000415 	stw	zero,16(r16)
 4024c84:	80000515 	stw	zero,20(r16)
 4024c88:	80000615 	stw	zero,24(r16)
 4024c8c:	01800204 	movi	r6,8
 4024c90:	000b883a 	mov	r5,zero
 4024c94:	81001704 	addi	r4,r16,92
 4024c98:	4025fe40 	call	4025fe4 <memset>
 4024c9c:	8005883a 	mov	r2,r16
 4024ca0:	80000c15 	stw	zero,48(r16)
 4024ca4:	80000d15 	stw	zero,52(r16)
 4024ca8:	80001115 	stw	zero,68(r16)
 4024cac:	80001215 	stw	zero,72(r16)
 4024cb0:	dfc00417 	ldw	ra,16(sp)
 4024cb4:	dcc00317 	ldw	r19,12(sp)
 4024cb8:	dc800217 	ldw	r18,8(sp)
 4024cbc:	dc400117 	ldw	r17,4(sp)
 4024cc0:	dc000017 	ldw	r16,0(sp)
 4024cc4:	dec00504 	addi	sp,sp,20
 4024cc8:	f800283a 	ret
 4024ccc:	01400104 	movi	r5,4
 4024cd0:	9809883a 	mov	r4,r19
 4024cd4:	4024b600 	call	4024b60 <__sfmoreglue>
 4024cd8:	90800015 	stw	r2,0(r18)
 4024cdc:	103fde1e 	bne	r2,zero,4024c58 <__flash_rwdata_start+0xffff4944>
 4024ce0:	00800304 	movi	r2,12
 4024ce4:	98800015 	stw	r2,0(r19)
 4024ce8:	0005883a 	mov	r2,zero
 4024cec:	003ff006 	br	4024cb0 <__flash_rwdata_start+0xffff499c>

04024cf0 <_cleanup>:
 4024cf0:	00800034 	movhi	r2,0
 4024cf4:	10878a04 	addi	r2,r2,7720
 4024cf8:	11000017 	ldw	r4,0(r2)
 4024cfc:	014100f4 	movhi	r5,1027
 4024d00:	29637104 	addi	r5,r5,-29244
 4024d04:	40252501 	jmpi	4025250 <_fwalk_reent>

04024d08 <__sinit>:
 4024d08:	20800e17 	ldw	r2,56(r4)
 4024d0c:	10000126 	beq	r2,zero,4024d14 <__sinit+0xc>
 4024d10:	f800283a 	ret
 4024d14:	40249bc1 	jmpi	40249bc <__sinit.part.1>

04024d18 <__sfp_lock_acquire>:
 4024d18:	f800283a 	ret

04024d1c <__sfp_lock_release>:
 4024d1c:	f800283a 	ret

04024d20 <__sinit_lock_acquire>:
 4024d20:	f800283a 	ret

04024d24 <__sinit_lock_release>:
 4024d24:	f800283a 	ret

04024d28 <__fp_lock_all>:
 4024d28:	00800034 	movhi	r2,0
 4024d2c:	10878b04 	addi	r2,r2,7724
 4024d30:	11000017 	ldw	r4,0(r2)
 4024d34:	014100b4 	movhi	r5,1026
 4024d38:	2952d604 	addi	r5,r5,19288
 4024d3c:	402518c1 	jmpi	402518c <_fwalk>

04024d40 <__fp_unlock_all>:
 4024d40:	00800034 	movhi	r2,0
 4024d44:	10878b04 	addi	r2,r2,7724
 4024d48:	11000017 	ldw	r4,0(r2)
 4024d4c:	014100b4 	movhi	r5,1026
 4024d50:	29526a04 	addi	r5,r5,18856
 4024d54:	402518c1 	jmpi	402518c <_fwalk>

04024d58 <_malloc_trim_r>:
 4024d58:	defffb04 	addi	sp,sp,-20
 4024d5c:	dcc00315 	stw	r19,12(sp)
 4024d60:	04c00034 	movhi	r19,0
 4024d64:	dc800215 	stw	r18,8(sp)
 4024d68:	dc400115 	stw	r17,4(sp)
 4024d6c:	dc000015 	stw	r16,0(sp)
 4024d70:	dfc00415 	stw	ra,16(sp)
 4024d74:	2821883a 	mov	r16,r5
 4024d78:	9cc1fb04 	addi	r19,r19,2028
 4024d7c:	2025883a 	mov	r18,r4
 4024d80:	402dc140 	call	402dc14 <__malloc_lock>
 4024d84:	98800217 	ldw	r2,8(r19)
 4024d88:	14400117 	ldw	r17,4(r2)
 4024d8c:	00bfff04 	movi	r2,-4
 4024d90:	88a2703a 	and	r17,r17,r2
 4024d94:	8c21c83a 	sub	r16,r17,r16
 4024d98:	8403fbc4 	addi	r16,r16,4079
 4024d9c:	8020d33a 	srli	r16,r16,12
 4024da0:	0083ffc4 	movi	r2,4095
 4024da4:	843fffc4 	addi	r16,r16,-1
 4024da8:	8020933a 	slli	r16,r16,12
 4024dac:	1400060e 	bge	r2,r16,4024dc8 <_malloc_trim_r+0x70>
 4024db0:	000b883a 	mov	r5,zero
 4024db4:	9009883a 	mov	r4,r18
 4024db8:	40272380 	call	4027238 <_sbrk_r>
 4024dbc:	98c00217 	ldw	r3,8(r19)
 4024dc0:	1c47883a 	add	r3,r3,r17
 4024dc4:	10c00a26 	beq	r2,r3,4024df0 <_malloc_trim_r+0x98>
 4024dc8:	9009883a 	mov	r4,r18
 4024dcc:	402dc380 	call	402dc38 <__malloc_unlock>
 4024dd0:	0005883a 	mov	r2,zero
 4024dd4:	dfc00417 	ldw	ra,16(sp)
 4024dd8:	dcc00317 	ldw	r19,12(sp)
 4024ddc:	dc800217 	ldw	r18,8(sp)
 4024de0:	dc400117 	ldw	r17,4(sp)
 4024de4:	dc000017 	ldw	r16,0(sp)
 4024de8:	dec00504 	addi	sp,sp,20
 4024dec:	f800283a 	ret
 4024df0:	040bc83a 	sub	r5,zero,r16
 4024df4:	9009883a 	mov	r4,r18
 4024df8:	40272380 	call	4027238 <_sbrk_r>
 4024dfc:	00ffffc4 	movi	r3,-1
 4024e00:	10c00d26 	beq	r2,r3,4024e38 <_malloc_trim_r+0xe0>
 4024e04:	00c00034 	movhi	r3,0
 4024e08:	18c7ab04 	addi	r3,r3,7852
 4024e0c:	18800017 	ldw	r2,0(r3)
 4024e10:	99000217 	ldw	r4,8(r19)
 4024e14:	8c23c83a 	sub	r17,r17,r16
 4024e18:	8c400054 	ori	r17,r17,1
 4024e1c:	1421c83a 	sub	r16,r2,r16
 4024e20:	24400115 	stw	r17,4(r4)
 4024e24:	9009883a 	mov	r4,r18
 4024e28:	1c000015 	stw	r16,0(r3)
 4024e2c:	402dc380 	call	402dc38 <__malloc_unlock>
 4024e30:	00800044 	movi	r2,1
 4024e34:	003fe706 	br	4024dd4 <__flash_rwdata_start+0xffff4ac0>
 4024e38:	000b883a 	mov	r5,zero
 4024e3c:	9009883a 	mov	r4,r18
 4024e40:	40272380 	call	4027238 <_sbrk_r>
 4024e44:	99000217 	ldw	r4,8(r19)
 4024e48:	014003c4 	movi	r5,15
 4024e4c:	1107c83a 	sub	r3,r2,r4
 4024e50:	28ffdd0e 	bge	r5,r3,4024dc8 <__flash_rwdata_start+0xffff4ab4>
 4024e54:	01400034 	movhi	r5,0
 4024e58:	29478d04 	addi	r5,r5,7732
 4024e5c:	29400017 	ldw	r5,0(r5)
 4024e60:	18c00054 	ori	r3,r3,1
 4024e64:	20c00115 	stw	r3,4(r4)
 4024e68:	00c00034 	movhi	r3,0
 4024e6c:	1145c83a 	sub	r2,r2,r5
 4024e70:	18c7ab04 	addi	r3,r3,7852
 4024e74:	18800015 	stw	r2,0(r3)
 4024e78:	003fd306 	br	4024dc8 <__flash_rwdata_start+0xffff4ab4>

04024e7c <_free_r>:
 4024e7c:	28004126 	beq	r5,zero,4024f84 <_free_r+0x108>
 4024e80:	defffd04 	addi	sp,sp,-12
 4024e84:	dc400115 	stw	r17,4(sp)
 4024e88:	dc000015 	stw	r16,0(sp)
 4024e8c:	2023883a 	mov	r17,r4
 4024e90:	2821883a 	mov	r16,r5
 4024e94:	dfc00215 	stw	ra,8(sp)
 4024e98:	402dc140 	call	402dc14 <__malloc_lock>
 4024e9c:	81ffff17 	ldw	r7,-4(r16)
 4024ea0:	00bfff84 	movi	r2,-2
 4024ea4:	01000034 	movhi	r4,0
 4024ea8:	81bffe04 	addi	r6,r16,-8
 4024eac:	3884703a 	and	r2,r7,r2
 4024eb0:	2101fb04 	addi	r4,r4,2028
 4024eb4:	308b883a 	add	r5,r6,r2
 4024eb8:	2a400117 	ldw	r9,4(r5)
 4024ebc:	22000217 	ldw	r8,8(r4)
 4024ec0:	00ffff04 	movi	r3,-4
 4024ec4:	48c6703a 	and	r3,r9,r3
 4024ec8:	2a005726 	beq	r5,r8,4025028 <_free_r+0x1ac>
 4024ecc:	28c00115 	stw	r3,4(r5)
 4024ed0:	39c0004c 	andi	r7,r7,1
 4024ed4:	3800091e 	bne	r7,zero,4024efc <_free_r+0x80>
 4024ed8:	823ffe17 	ldw	r8,-8(r16)
 4024edc:	22400204 	addi	r9,r4,8
 4024ee0:	320dc83a 	sub	r6,r6,r8
 4024ee4:	31c00217 	ldw	r7,8(r6)
 4024ee8:	1205883a 	add	r2,r2,r8
 4024eec:	3a406526 	beq	r7,r9,4025084 <_free_r+0x208>
 4024ef0:	32000317 	ldw	r8,12(r6)
 4024ef4:	3a000315 	stw	r8,12(r7)
 4024ef8:	41c00215 	stw	r7,8(r8)
 4024efc:	28cf883a 	add	r7,r5,r3
 4024f00:	39c00117 	ldw	r7,4(r7)
 4024f04:	39c0004c 	andi	r7,r7,1
 4024f08:	38003a26 	beq	r7,zero,4024ff4 <_free_r+0x178>
 4024f0c:	10c00054 	ori	r3,r2,1
 4024f10:	30c00115 	stw	r3,4(r6)
 4024f14:	3087883a 	add	r3,r6,r2
 4024f18:	18800015 	stw	r2,0(r3)
 4024f1c:	00c07fc4 	movi	r3,511
 4024f20:	18801936 	bltu	r3,r2,4024f88 <_free_r+0x10c>
 4024f24:	1004d0fa 	srli	r2,r2,3
 4024f28:	01c00044 	movi	r7,1
 4024f2c:	21400117 	ldw	r5,4(r4)
 4024f30:	10c00044 	addi	r3,r2,1
 4024f34:	18c7883a 	add	r3,r3,r3
 4024f38:	1005d0ba 	srai	r2,r2,2
 4024f3c:	18c7883a 	add	r3,r3,r3
 4024f40:	18c7883a 	add	r3,r3,r3
 4024f44:	1907883a 	add	r3,r3,r4
 4024f48:	3884983a 	sll	r2,r7,r2
 4024f4c:	19c00017 	ldw	r7,0(r3)
 4024f50:	1a3ffe04 	addi	r8,r3,-8
 4024f54:	1144b03a 	or	r2,r2,r5
 4024f58:	32000315 	stw	r8,12(r6)
 4024f5c:	31c00215 	stw	r7,8(r6)
 4024f60:	20800115 	stw	r2,4(r4)
 4024f64:	19800015 	stw	r6,0(r3)
 4024f68:	39800315 	stw	r6,12(r7)
 4024f6c:	8809883a 	mov	r4,r17
 4024f70:	dfc00217 	ldw	ra,8(sp)
 4024f74:	dc400117 	ldw	r17,4(sp)
 4024f78:	dc000017 	ldw	r16,0(sp)
 4024f7c:	dec00304 	addi	sp,sp,12
 4024f80:	402dc381 	jmpi	402dc38 <__malloc_unlock>
 4024f84:	f800283a 	ret
 4024f88:	100ad27a 	srli	r5,r2,9
 4024f8c:	00c00104 	movi	r3,4
 4024f90:	19404a36 	bltu	r3,r5,40250bc <_free_r+0x240>
 4024f94:	100ad1ba 	srli	r5,r2,6
 4024f98:	28c00e44 	addi	r3,r5,57
 4024f9c:	18c7883a 	add	r3,r3,r3
 4024fa0:	29400e04 	addi	r5,r5,56
 4024fa4:	18c7883a 	add	r3,r3,r3
 4024fa8:	18c7883a 	add	r3,r3,r3
 4024fac:	1909883a 	add	r4,r3,r4
 4024fb0:	20c00017 	ldw	r3,0(r4)
 4024fb4:	01c00034 	movhi	r7,0
 4024fb8:	213ffe04 	addi	r4,r4,-8
 4024fbc:	39c1fb04 	addi	r7,r7,2028
 4024fc0:	20c04426 	beq	r4,r3,40250d4 <_free_r+0x258>
 4024fc4:	01ffff04 	movi	r7,-4
 4024fc8:	19400117 	ldw	r5,4(r3)
 4024fcc:	29ca703a 	and	r5,r5,r7
 4024fd0:	1140022e 	bgeu	r2,r5,4024fdc <_free_r+0x160>
 4024fd4:	18c00217 	ldw	r3,8(r3)
 4024fd8:	20fffb1e 	bne	r4,r3,4024fc8 <__flash_rwdata_start+0xffff4cb4>
 4024fdc:	19000317 	ldw	r4,12(r3)
 4024fe0:	31000315 	stw	r4,12(r6)
 4024fe4:	30c00215 	stw	r3,8(r6)
 4024fe8:	21800215 	stw	r6,8(r4)
 4024fec:	19800315 	stw	r6,12(r3)
 4024ff0:	003fde06 	br	4024f6c <__flash_rwdata_start+0xffff4c58>
 4024ff4:	29c00217 	ldw	r7,8(r5)
 4024ff8:	10c5883a 	add	r2,r2,r3
 4024ffc:	00c00034 	movhi	r3,0
 4025000:	18c1fd04 	addi	r3,r3,2036
 4025004:	38c03b26 	beq	r7,r3,40250f4 <_free_r+0x278>
 4025008:	2a000317 	ldw	r8,12(r5)
 402500c:	11400054 	ori	r5,r2,1
 4025010:	3087883a 	add	r3,r6,r2
 4025014:	3a000315 	stw	r8,12(r7)
 4025018:	41c00215 	stw	r7,8(r8)
 402501c:	31400115 	stw	r5,4(r6)
 4025020:	18800015 	stw	r2,0(r3)
 4025024:	003fbd06 	br	4024f1c <__flash_rwdata_start+0xffff4c08>
 4025028:	39c0004c 	andi	r7,r7,1
 402502c:	10c5883a 	add	r2,r2,r3
 4025030:	3800071e 	bne	r7,zero,4025050 <_free_r+0x1d4>
 4025034:	81fffe17 	ldw	r7,-8(r16)
 4025038:	31cdc83a 	sub	r6,r6,r7
 402503c:	30c00317 	ldw	r3,12(r6)
 4025040:	31400217 	ldw	r5,8(r6)
 4025044:	11c5883a 	add	r2,r2,r7
 4025048:	28c00315 	stw	r3,12(r5)
 402504c:	19400215 	stw	r5,8(r3)
 4025050:	10c00054 	ori	r3,r2,1
 4025054:	30c00115 	stw	r3,4(r6)
 4025058:	00c00034 	movhi	r3,0
 402505c:	18c78e04 	addi	r3,r3,7736
 4025060:	18c00017 	ldw	r3,0(r3)
 4025064:	21800215 	stw	r6,8(r4)
 4025068:	10ffc036 	bltu	r2,r3,4024f6c <__flash_rwdata_start+0xffff4c58>
 402506c:	00800034 	movhi	r2,0
 4025070:	1087a004 	addi	r2,r2,7808
 4025074:	11400017 	ldw	r5,0(r2)
 4025078:	8809883a 	mov	r4,r17
 402507c:	4024d580 	call	4024d58 <_malloc_trim_r>
 4025080:	003fba06 	br	4024f6c <__flash_rwdata_start+0xffff4c58>
 4025084:	28c9883a 	add	r4,r5,r3
 4025088:	21000117 	ldw	r4,4(r4)
 402508c:	2100004c 	andi	r4,r4,1
 4025090:	2000391e 	bne	r4,zero,4025178 <_free_r+0x2fc>
 4025094:	29c00217 	ldw	r7,8(r5)
 4025098:	29000317 	ldw	r4,12(r5)
 402509c:	1885883a 	add	r2,r3,r2
 40250a0:	10c00054 	ori	r3,r2,1
 40250a4:	39000315 	stw	r4,12(r7)
 40250a8:	21c00215 	stw	r7,8(r4)
 40250ac:	30c00115 	stw	r3,4(r6)
 40250b0:	308d883a 	add	r6,r6,r2
 40250b4:	30800015 	stw	r2,0(r6)
 40250b8:	003fac06 	br	4024f6c <__flash_rwdata_start+0xffff4c58>
 40250bc:	00c00504 	movi	r3,20
 40250c0:	19401536 	bltu	r3,r5,4025118 <_free_r+0x29c>
 40250c4:	28c01704 	addi	r3,r5,92
 40250c8:	18c7883a 	add	r3,r3,r3
 40250cc:	294016c4 	addi	r5,r5,91
 40250d0:	003fb406 	br	4024fa4 <__flash_rwdata_start+0xffff4c90>
 40250d4:	280bd0ba 	srai	r5,r5,2
 40250d8:	00c00044 	movi	r3,1
 40250dc:	38800117 	ldw	r2,4(r7)
 40250e0:	194a983a 	sll	r5,r3,r5
 40250e4:	2007883a 	mov	r3,r4
 40250e8:	2884b03a 	or	r2,r5,r2
 40250ec:	38800115 	stw	r2,4(r7)
 40250f0:	003fbb06 	br	4024fe0 <__flash_rwdata_start+0xffff4ccc>
 40250f4:	21800515 	stw	r6,20(r4)
 40250f8:	21800415 	stw	r6,16(r4)
 40250fc:	10c00054 	ori	r3,r2,1
 4025100:	31c00315 	stw	r7,12(r6)
 4025104:	31c00215 	stw	r7,8(r6)
 4025108:	30c00115 	stw	r3,4(r6)
 402510c:	308d883a 	add	r6,r6,r2
 4025110:	30800015 	stw	r2,0(r6)
 4025114:	003f9506 	br	4024f6c <__flash_rwdata_start+0xffff4c58>
 4025118:	00c01504 	movi	r3,84
 402511c:	19400536 	bltu	r3,r5,4025134 <_free_r+0x2b8>
 4025120:	100ad33a 	srli	r5,r2,12
 4025124:	28c01bc4 	addi	r3,r5,111
 4025128:	18c7883a 	add	r3,r3,r3
 402512c:	29401b84 	addi	r5,r5,110
 4025130:	003f9c06 	br	4024fa4 <__flash_rwdata_start+0xffff4c90>
 4025134:	00c05504 	movi	r3,340
 4025138:	19400536 	bltu	r3,r5,4025150 <_free_r+0x2d4>
 402513c:	100ad3fa 	srli	r5,r2,15
 4025140:	28c01e04 	addi	r3,r5,120
 4025144:	18c7883a 	add	r3,r3,r3
 4025148:	29401dc4 	addi	r5,r5,119
 402514c:	003f9506 	br	4024fa4 <__flash_rwdata_start+0xffff4c90>
 4025150:	00c15504 	movi	r3,1364
 4025154:	19400536 	bltu	r3,r5,402516c <_free_r+0x2f0>
 4025158:	100ad4ba 	srli	r5,r2,18
 402515c:	28c01f44 	addi	r3,r5,125
 4025160:	18c7883a 	add	r3,r3,r3
 4025164:	29401f04 	addi	r5,r5,124
 4025168:	003f8e06 	br	4024fa4 <__flash_rwdata_start+0xffff4c90>
 402516c:	00c03f84 	movi	r3,254
 4025170:	01401f84 	movi	r5,126
 4025174:	003f8b06 	br	4024fa4 <__flash_rwdata_start+0xffff4c90>
 4025178:	10c00054 	ori	r3,r2,1
 402517c:	30c00115 	stw	r3,4(r6)
 4025180:	308d883a 	add	r6,r6,r2
 4025184:	30800015 	stw	r2,0(r6)
 4025188:	003f7806 	br	4024f6c <__flash_rwdata_start+0xffff4c58>

0402518c <_fwalk>:
 402518c:	defff704 	addi	sp,sp,-36
 4025190:	dd000415 	stw	r20,16(sp)
 4025194:	dfc00815 	stw	ra,32(sp)
 4025198:	ddc00715 	stw	r23,28(sp)
 402519c:	dd800615 	stw	r22,24(sp)
 40251a0:	dd400515 	stw	r21,20(sp)
 40251a4:	dcc00315 	stw	r19,12(sp)
 40251a8:	dc800215 	stw	r18,8(sp)
 40251ac:	dc400115 	stw	r17,4(sp)
 40251b0:	dc000015 	stw	r16,0(sp)
 40251b4:	2500b804 	addi	r20,r4,736
 40251b8:	a0002326 	beq	r20,zero,4025248 <_fwalk+0xbc>
 40251bc:	282b883a 	mov	r21,r5
 40251c0:	002f883a 	mov	r23,zero
 40251c4:	05800044 	movi	r22,1
 40251c8:	04ffffc4 	movi	r19,-1
 40251cc:	a4400117 	ldw	r17,4(r20)
 40251d0:	a4800217 	ldw	r18,8(r20)
 40251d4:	8c7fffc4 	addi	r17,r17,-1
 40251d8:	88000d16 	blt	r17,zero,4025210 <_fwalk+0x84>
 40251dc:	94000304 	addi	r16,r18,12
 40251e0:	94800384 	addi	r18,r18,14
 40251e4:	8080000b 	ldhu	r2,0(r16)
 40251e8:	8c7fffc4 	addi	r17,r17,-1
 40251ec:	813ffd04 	addi	r4,r16,-12
 40251f0:	b080042e 	bgeu	r22,r2,4025204 <_fwalk+0x78>
 40251f4:	9080000f 	ldh	r2,0(r18)
 40251f8:	14c00226 	beq	r2,r19,4025204 <_fwalk+0x78>
 40251fc:	a83ee83a 	callr	r21
 4025200:	b8aeb03a 	or	r23,r23,r2
 4025204:	84001a04 	addi	r16,r16,104
 4025208:	94801a04 	addi	r18,r18,104
 402520c:	8cfff51e 	bne	r17,r19,40251e4 <__flash_rwdata_start+0xffff4ed0>
 4025210:	a5000017 	ldw	r20,0(r20)
 4025214:	a03fed1e 	bne	r20,zero,40251cc <__flash_rwdata_start+0xffff4eb8>
 4025218:	b805883a 	mov	r2,r23
 402521c:	dfc00817 	ldw	ra,32(sp)
 4025220:	ddc00717 	ldw	r23,28(sp)
 4025224:	dd800617 	ldw	r22,24(sp)
 4025228:	dd400517 	ldw	r21,20(sp)
 402522c:	dd000417 	ldw	r20,16(sp)
 4025230:	dcc00317 	ldw	r19,12(sp)
 4025234:	dc800217 	ldw	r18,8(sp)
 4025238:	dc400117 	ldw	r17,4(sp)
 402523c:	dc000017 	ldw	r16,0(sp)
 4025240:	dec00904 	addi	sp,sp,36
 4025244:	f800283a 	ret
 4025248:	002f883a 	mov	r23,zero
 402524c:	003ff206 	br	4025218 <__flash_rwdata_start+0xffff4f04>

04025250 <_fwalk_reent>:
 4025250:	defff704 	addi	sp,sp,-36
 4025254:	dd000415 	stw	r20,16(sp)
 4025258:	dfc00815 	stw	ra,32(sp)
 402525c:	ddc00715 	stw	r23,28(sp)
 4025260:	dd800615 	stw	r22,24(sp)
 4025264:	dd400515 	stw	r21,20(sp)
 4025268:	dcc00315 	stw	r19,12(sp)
 402526c:	dc800215 	stw	r18,8(sp)
 4025270:	dc400115 	stw	r17,4(sp)
 4025274:	dc000015 	stw	r16,0(sp)
 4025278:	2500b804 	addi	r20,r4,736
 402527c:	a0002326 	beq	r20,zero,402530c <_fwalk_reent+0xbc>
 4025280:	282b883a 	mov	r21,r5
 4025284:	2027883a 	mov	r19,r4
 4025288:	002f883a 	mov	r23,zero
 402528c:	05800044 	movi	r22,1
 4025290:	04bfffc4 	movi	r18,-1
 4025294:	a4400117 	ldw	r17,4(r20)
 4025298:	a4000217 	ldw	r16,8(r20)
 402529c:	8c7fffc4 	addi	r17,r17,-1
 40252a0:	88000c16 	blt	r17,zero,40252d4 <_fwalk_reent+0x84>
 40252a4:	84000304 	addi	r16,r16,12
 40252a8:	8080000b 	ldhu	r2,0(r16)
 40252ac:	8c7fffc4 	addi	r17,r17,-1
 40252b0:	817ffd04 	addi	r5,r16,-12
 40252b4:	b080052e 	bgeu	r22,r2,40252cc <_fwalk_reent+0x7c>
 40252b8:	8080008f 	ldh	r2,2(r16)
 40252bc:	9809883a 	mov	r4,r19
 40252c0:	14800226 	beq	r2,r18,40252cc <_fwalk_reent+0x7c>
 40252c4:	a83ee83a 	callr	r21
 40252c8:	b8aeb03a 	or	r23,r23,r2
 40252cc:	84001a04 	addi	r16,r16,104
 40252d0:	8cbff51e 	bne	r17,r18,40252a8 <__flash_rwdata_start+0xffff4f94>
 40252d4:	a5000017 	ldw	r20,0(r20)
 40252d8:	a03fee1e 	bne	r20,zero,4025294 <__flash_rwdata_start+0xffff4f80>
 40252dc:	b805883a 	mov	r2,r23
 40252e0:	dfc00817 	ldw	ra,32(sp)
 40252e4:	ddc00717 	ldw	r23,28(sp)
 40252e8:	dd800617 	ldw	r22,24(sp)
 40252ec:	dd400517 	ldw	r21,20(sp)
 40252f0:	dd000417 	ldw	r20,16(sp)
 40252f4:	dcc00317 	ldw	r19,12(sp)
 40252f8:	dc800217 	ldw	r18,8(sp)
 40252fc:	dc400117 	ldw	r17,4(sp)
 4025300:	dc000017 	ldw	r16,0(sp)
 4025304:	dec00904 	addi	sp,sp,36
 4025308:	f800283a 	ret
 402530c:	002f883a 	mov	r23,zero
 4025310:	003ff206 	br	40252dc <__flash_rwdata_start+0xffff4fc8>

04025314 <_setlocale_r>:
 4025314:	30001b26 	beq	r6,zero,4025384 <_setlocale_r+0x70>
 4025318:	01400034 	movhi	r5,0
 402531c:	defffe04 	addi	sp,sp,-8
 4025320:	29403004 	addi	r5,r5,192
 4025324:	3009883a 	mov	r4,r6
 4025328:	dc000015 	stw	r16,0(sp)
 402532c:	dfc00115 	stw	ra,4(sp)
 4025330:	3021883a 	mov	r16,r6
 4025334:	40273c80 	call	40273c8 <strcmp>
 4025338:	1000061e 	bne	r2,zero,4025354 <_setlocale_r+0x40>
 402533c:	00800034 	movhi	r2,0
 4025340:	10802f04 	addi	r2,r2,188
 4025344:	dfc00117 	ldw	ra,4(sp)
 4025348:	dc000017 	ldw	r16,0(sp)
 402534c:	dec00204 	addi	sp,sp,8
 4025350:	f800283a 	ret
 4025354:	01400034 	movhi	r5,0
 4025358:	29402f04 	addi	r5,r5,188
 402535c:	8009883a 	mov	r4,r16
 4025360:	40273c80 	call	40273c8 <strcmp>
 4025364:	103ff526 	beq	r2,zero,402533c <__flash_rwdata_start+0xffff5028>
 4025368:	01400034 	movhi	r5,0
 402536c:	29401a04 	addi	r5,r5,104
 4025370:	8009883a 	mov	r4,r16
 4025374:	40273c80 	call	40273c8 <strcmp>
 4025378:	103ff026 	beq	r2,zero,402533c <__flash_rwdata_start+0xffff5028>
 402537c:	0005883a 	mov	r2,zero
 4025380:	003ff006 	br	4025344 <__flash_rwdata_start+0xffff5030>
 4025384:	00800034 	movhi	r2,0
 4025388:	10802f04 	addi	r2,r2,188
 402538c:	f800283a 	ret

04025390 <__locale_charset>:
 4025390:	00800034 	movhi	r2,0
 4025394:	1081e504 	addi	r2,r2,1940
 4025398:	f800283a 	ret

0402539c <__locale_mb_cur_max>:
 402539c:	00800034 	movhi	r2,0
 40253a0:	10878c04 	addi	r2,r2,7728
 40253a4:	10800017 	ldw	r2,0(r2)
 40253a8:	f800283a 	ret

040253ac <__locale_msgcharset>:
 40253ac:	00800034 	movhi	r2,0
 40253b0:	1081dd04 	addi	r2,r2,1908
 40253b4:	f800283a 	ret

040253b8 <__locale_cjk_lang>:
 40253b8:	0005883a 	mov	r2,zero
 40253bc:	f800283a 	ret

040253c0 <_localeconv_r>:
 40253c0:	00800034 	movhi	r2,0
 40253c4:	1081ed04 	addi	r2,r2,1972
 40253c8:	f800283a 	ret

040253cc <setlocale>:
 40253cc:	00800034 	movhi	r2,0
 40253d0:	10878b04 	addi	r2,r2,7724
 40253d4:	280d883a 	mov	r6,r5
 40253d8:	200b883a 	mov	r5,r4
 40253dc:	11000017 	ldw	r4,0(r2)
 40253e0:	40253141 	jmpi	4025314 <_setlocale_r>

040253e4 <localeconv>:
 40253e4:	00800034 	movhi	r2,0
 40253e8:	1081ed04 	addi	r2,r2,1972
 40253ec:	f800283a 	ret

040253f0 <__smakebuf_r>:
 40253f0:	2880030b 	ldhu	r2,12(r5)
 40253f4:	10c0008c 	andi	r3,r2,2
 40253f8:	1800411e 	bne	r3,zero,4025500 <__smakebuf_r+0x110>
 40253fc:	deffec04 	addi	sp,sp,-80
 4025400:	dc000f15 	stw	r16,60(sp)
 4025404:	2821883a 	mov	r16,r5
 4025408:	2940038f 	ldh	r5,14(r5)
 402540c:	dc401015 	stw	r17,64(sp)
 4025410:	dfc01315 	stw	ra,76(sp)
 4025414:	dcc01215 	stw	r19,72(sp)
 4025418:	dc801115 	stw	r18,68(sp)
 402541c:	2023883a 	mov	r17,r4
 4025420:	28001c16 	blt	r5,zero,4025494 <__smakebuf_r+0xa4>
 4025424:	d80d883a 	mov	r6,sp
 4025428:	40290d00 	call	40290d0 <_fstat_r>
 402542c:	10001816 	blt	r2,zero,4025490 <__smakebuf_r+0xa0>
 4025430:	d8800117 	ldw	r2,4(sp)
 4025434:	00e00014 	movui	r3,32768
 4025438:	10bc000c 	andi	r2,r2,61440
 402543c:	14c80020 	cmpeqi	r19,r2,8192
 4025440:	10c03726 	beq	r2,r3,4025520 <__smakebuf_r+0x130>
 4025444:	80c0030b 	ldhu	r3,12(r16)
 4025448:	18c20014 	ori	r3,r3,2048
 402544c:	80c0030d 	sth	r3,12(r16)
 4025450:	00c80004 	movi	r3,8192
 4025454:	10c0521e 	bne	r2,r3,40255a0 <__smakebuf_r+0x1b0>
 4025458:	8140038f 	ldh	r5,14(r16)
 402545c:	8809883a 	mov	r4,r17
 4025460:	40295f40 	call	40295f4 <_isatty_r>
 4025464:	10004c26 	beq	r2,zero,4025598 <__smakebuf_r+0x1a8>
 4025468:	8080030b 	ldhu	r2,12(r16)
 402546c:	80c010c4 	addi	r3,r16,67
 4025470:	80c00015 	stw	r3,0(r16)
 4025474:	10800054 	ori	r2,r2,1
 4025478:	8080030d 	sth	r2,12(r16)
 402547c:	00800044 	movi	r2,1
 4025480:	80c00415 	stw	r3,16(r16)
 4025484:	80800515 	stw	r2,20(r16)
 4025488:	04810004 	movi	r18,1024
 402548c:	00000706 	br	40254ac <__smakebuf_r+0xbc>
 4025490:	8080030b 	ldhu	r2,12(r16)
 4025494:	10c0200c 	andi	r3,r2,128
 4025498:	18001f1e 	bne	r3,zero,4025518 <__smakebuf_r+0x128>
 402549c:	04810004 	movi	r18,1024
 40254a0:	10820014 	ori	r2,r2,2048
 40254a4:	8080030d 	sth	r2,12(r16)
 40254a8:	0027883a 	mov	r19,zero
 40254ac:	900b883a 	mov	r5,r18
 40254b0:	8809883a 	mov	r4,r17
 40254b4:	40255ac0 	call	40255ac <_malloc_r>
 40254b8:	10002c26 	beq	r2,zero,402556c <__smakebuf_r+0x17c>
 40254bc:	80c0030b 	ldhu	r3,12(r16)
 40254c0:	010100b4 	movhi	r4,1026
 40254c4:	21126c04 	addi	r4,r4,18864
 40254c8:	89000f15 	stw	r4,60(r17)
 40254cc:	18c02014 	ori	r3,r3,128
 40254d0:	80c0030d 	sth	r3,12(r16)
 40254d4:	80800015 	stw	r2,0(r16)
 40254d8:	80800415 	stw	r2,16(r16)
 40254dc:	84800515 	stw	r18,20(r16)
 40254e0:	98001a1e 	bne	r19,zero,402554c <__smakebuf_r+0x15c>
 40254e4:	dfc01317 	ldw	ra,76(sp)
 40254e8:	dcc01217 	ldw	r19,72(sp)
 40254ec:	dc801117 	ldw	r18,68(sp)
 40254f0:	dc401017 	ldw	r17,64(sp)
 40254f4:	dc000f17 	ldw	r16,60(sp)
 40254f8:	dec01404 	addi	sp,sp,80
 40254fc:	f800283a 	ret
 4025500:	288010c4 	addi	r2,r5,67
 4025504:	28800015 	stw	r2,0(r5)
 4025508:	28800415 	stw	r2,16(r5)
 402550c:	00800044 	movi	r2,1
 4025510:	28800515 	stw	r2,20(r5)
 4025514:	f800283a 	ret
 4025518:	04801004 	movi	r18,64
 402551c:	003fe006 	br	40254a0 <__flash_rwdata_start+0xffff518c>
 4025520:	81000a17 	ldw	r4,40(r16)
 4025524:	00c100b4 	movhi	r3,1026
 4025528:	18dcd904 	addi	r3,r3,29540
 402552c:	20ffc51e 	bne	r4,r3,4025444 <__flash_rwdata_start+0xffff5130>
 4025530:	8080030b 	ldhu	r2,12(r16)
 4025534:	04810004 	movi	r18,1024
 4025538:	84801315 	stw	r18,76(r16)
 402553c:	1484b03a 	or	r2,r2,r18
 4025540:	8080030d 	sth	r2,12(r16)
 4025544:	0027883a 	mov	r19,zero
 4025548:	003fd806 	br	40254ac <__flash_rwdata_start+0xffff5198>
 402554c:	8140038f 	ldh	r5,14(r16)
 4025550:	8809883a 	mov	r4,r17
 4025554:	40295f40 	call	40295f4 <_isatty_r>
 4025558:	103fe226 	beq	r2,zero,40254e4 <__flash_rwdata_start+0xffff51d0>
 402555c:	8080030b 	ldhu	r2,12(r16)
 4025560:	10800054 	ori	r2,r2,1
 4025564:	8080030d 	sth	r2,12(r16)
 4025568:	003fde06 	br	40254e4 <__flash_rwdata_start+0xffff51d0>
 402556c:	8080030b 	ldhu	r2,12(r16)
 4025570:	10c0800c 	andi	r3,r2,512
 4025574:	183fdb1e 	bne	r3,zero,40254e4 <__flash_rwdata_start+0xffff51d0>
 4025578:	10800094 	ori	r2,r2,2
 402557c:	80c010c4 	addi	r3,r16,67
 4025580:	8080030d 	sth	r2,12(r16)
 4025584:	00800044 	movi	r2,1
 4025588:	80c00015 	stw	r3,0(r16)
 402558c:	80c00415 	stw	r3,16(r16)
 4025590:	80800515 	stw	r2,20(r16)
 4025594:	003fd306 	br	40254e4 <__flash_rwdata_start+0xffff51d0>
 4025598:	04810004 	movi	r18,1024
 402559c:	003fc306 	br	40254ac <__flash_rwdata_start+0xffff5198>
 40255a0:	0027883a 	mov	r19,zero
 40255a4:	04810004 	movi	r18,1024
 40255a8:	003fc006 	br	40254ac <__flash_rwdata_start+0xffff5198>

040255ac <_malloc_r>:
 40255ac:	defff504 	addi	sp,sp,-44
 40255b0:	dc800315 	stw	r18,12(sp)
 40255b4:	dfc00a15 	stw	ra,40(sp)
 40255b8:	df000915 	stw	fp,36(sp)
 40255bc:	ddc00815 	stw	r23,32(sp)
 40255c0:	dd800715 	stw	r22,28(sp)
 40255c4:	dd400615 	stw	r21,24(sp)
 40255c8:	dd000515 	stw	r20,20(sp)
 40255cc:	dcc00415 	stw	r19,16(sp)
 40255d0:	dc400215 	stw	r17,8(sp)
 40255d4:	dc000115 	stw	r16,4(sp)
 40255d8:	288002c4 	addi	r2,r5,11
 40255dc:	00c00584 	movi	r3,22
 40255e0:	2025883a 	mov	r18,r4
 40255e4:	18807f2e 	bgeu	r3,r2,40257e4 <_malloc_r+0x238>
 40255e8:	047ffe04 	movi	r17,-8
 40255ec:	1462703a 	and	r17,r2,r17
 40255f0:	8800a316 	blt	r17,zero,4025880 <_malloc_r+0x2d4>
 40255f4:	8940a236 	bltu	r17,r5,4025880 <_malloc_r+0x2d4>
 40255f8:	402dc140 	call	402dc14 <__malloc_lock>
 40255fc:	00807dc4 	movi	r2,503
 4025600:	1441e92e 	bgeu	r2,r17,4025da8 <_malloc_r+0x7fc>
 4025604:	8804d27a 	srli	r2,r17,9
 4025608:	1000a126 	beq	r2,zero,4025890 <_malloc_r+0x2e4>
 402560c:	00c00104 	movi	r3,4
 4025610:	18811e36 	bltu	r3,r2,4025a8c <_malloc_r+0x4e0>
 4025614:	8804d1ba 	srli	r2,r17,6
 4025618:	12000e44 	addi	r8,r2,57
 402561c:	11c00e04 	addi	r7,r2,56
 4025620:	4209883a 	add	r4,r8,r8
 4025624:	04c00034 	movhi	r19,0
 4025628:	2109883a 	add	r4,r4,r4
 402562c:	9cc1fb04 	addi	r19,r19,2028
 4025630:	2109883a 	add	r4,r4,r4
 4025634:	9909883a 	add	r4,r19,r4
 4025638:	24000117 	ldw	r16,4(r4)
 402563c:	213ffe04 	addi	r4,r4,-8
 4025640:	24009726 	beq	r4,r16,40258a0 <_malloc_r+0x2f4>
 4025644:	80800117 	ldw	r2,4(r16)
 4025648:	01bfff04 	movi	r6,-4
 402564c:	014003c4 	movi	r5,15
 4025650:	1184703a 	and	r2,r2,r6
 4025654:	1447c83a 	sub	r3,r2,r17
 4025658:	28c00716 	blt	r5,r3,4025678 <_malloc_r+0xcc>
 402565c:	1800920e 	bge	r3,zero,40258a8 <_malloc_r+0x2fc>
 4025660:	84000317 	ldw	r16,12(r16)
 4025664:	24008e26 	beq	r4,r16,40258a0 <_malloc_r+0x2f4>
 4025668:	80800117 	ldw	r2,4(r16)
 402566c:	1184703a 	and	r2,r2,r6
 4025670:	1447c83a 	sub	r3,r2,r17
 4025674:	28fff90e 	bge	r5,r3,402565c <__flash_rwdata_start+0xffff5348>
 4025678:	3809883a 	mov	r4,r7
 402567c:	01800034 	movhi	r6,0
 4025680:	9c000417 	ldw	r16,16(r19)
 4025684:	3181fb04 	addi	r6,r6,2028
 4025688:	32000204 	addi	r8,r6,8
 402568c:	82013426 	beq	r16,r8,4025b60 <_malloc_r+0x5b4>
 4025690:	80c00117 	ldw	r3,4(r16)
 4025694:	00bfff04 	movi	r2,-4
 4025698:	188e703a 	and	r7,r3,r2
 402569c:	3c45c83a 	sub	r2,r7,r17
 40256a0:	00c003c4 	movi	r3,15
 40256a4:	18811f16 	blt	r3,r2,4025b24 <_malloc_r+0x578>
 40256a8:	32000515 	stw	r8,20(r6)
 40256ac:	32000415 	stw	r8,16(r6)
 40256b0:	10007f0e 	bge	r2,zero,40258b0 <_malloc_r+0x304>
 40256b4:	00807fc4 	movi	r2,511
 40256b8:	11c0fd36 	bltu	r2,r7,4025ab0 <_malloc_r+0x504>
 40256bc:	3806d0fa 	srli	r3,r7,3
 40256c0:	01c00044 	movi	r7,1
 40256c4:	30800117 	ldw	r2,4(r6)
 40256c8:	19400044 	addi	r5,r3,1
 40256cc:	294b883a 	add	r5,r5,r5
 40256d0:	1807d0ba 	srai	r3,r3,2
 40256d4:	294b883a 	add	r5,r5,r5
 40256d8:	294b883a 	add	r5,r5,r5
 40256dc:	298b883a 	add	r5,r5,r6
 40256e0:	38c6983a 	sll	r3,r7,r3
 40256e4:	29c00017 	ldw	r7,0(r5)
 40256e8:	2a7ffe04 	addi	r9,r5,-8
 40256ec:	1886b03a 	or	r3,r3,r2
 40256f0:	82400315 	stw	r9,12(r16)
 40256f4:	81c00215 	stw	r7,8(r16)
 40256f8:	30c00115 	stw	r3,4(r6)
 40256fc:	2c000015 	stw	r16,0(r5)
 4025700:	3c000315 	stw	r16,12(r7)
 4025704:	2005d0ba 	srai	r2,r4,2
 4025708:	01400044 	movi	r5,1
 402570c:	288a983a 	sll	r5,r5,r2
 4025710:	19406f36 	bltu	r3,r5,40258d0 <_malloc_r+0x324>
 4025714:	28c4703a 	and	r2,r5,r3
 4025718:	10000a1e 	bne	r2,zero,4025744 <_malloc_r+0x198>
 402571c:	00bfff04 	movi	r2,-4
 4025720:	294b883a 	add	r5,r5,r5
 4025724:	2088703a 	and	r4,r4,r2
 4025728:	28c4703a 	and	r2,r5,r3
 402572c:	21000104 	addi	r4,r4,4
 4025730:	1000041e 	bne	r2,zero,4025744 <_malloc_r+0x198>
 4025734:	294b883a 	add	r5,r5,r5
 4025738:	28c4703a 	and	r2,r5,r3
 402573c:	21000104 	addi	r4,r4,4
 4025740:	103ffc26 	beq	r2,zero,4025734 <__flash_rwdata_start+0xffff5420>
 4025744:	02bfff04 	movi	r10,-4
 4025748:	024003c4 	movi	r9,15
 402574c:	21800044 	addi	r6,r4,1
 4025750:	318d883a 	add	r6,r6,r6
 4025754:	318d883a 	add	r6,r6,r6
 4025758:	318d883a 	add	r6,r6,r6
 402575c:	998d883a 	add	r6,r19,r6
 4025760:	333ffe04 	addi	r12,r6,-8
 4025764:	2017883a 	mov	r11,r4
 4025768:	31800104 	addi	r6,r6,4
 402576c:	34000017 	ldw	r16,0(r6)
 4025770:	31fffd04 	addi	r7,r6,-12
 4025774:	81c0041e 	bne	r16,r7,4025788 <_malloc_r+0x1dc>
 4025778:	0000fb06 	br	4025b68 <_malloc_r+0x5bc>
 402577c:	1801030e 	bge	r3,zero,4025b8c <_malloc_r+0x5e0>
 4025780:	84000317 	ldw	r16,12(r16)
 4025784:	81c0f826 	beq	r16,r7,4025b68 <_malloc_r+0x5bc>
 4025788:	80800117 	ldw	r2,4(r16)
 402578c:	1284703a 	and	r2,r2,r10
 4025790:	1447c83a 	sub	r3,r2,r17
 4025794:	48fff90e 	bge	r9,r3,402577c <__flash_rwdata_start+0xffff5468>
 4025798:	80800317 	ldw	r2,12(r16)
 402579c:	81000217 	ldw	r4,8(r16)
 40257a0:	89400054 	ori	r5,r17,1
 40257a4:	81400115 	stw	r5,4(r16)
 40257a8:	20800315 	stw	r2,12(r4)
 40257ac:	11000215 	stw	r4,8(r2)
 40257b0:	8463883a 	add	r17,r16,r17
 40257b4:	9c400515 	stw	r17,20(r19)
 40257b8:	9c400415 	stw	r17,16(r19)
 40257bc:	18800054 	ori	r2,r3,1
 40257c0:	88800115 	stw	r2,4(r17)
 40257c4:	8a000315 	stw	r8,12(r17)
 40257c8:	8a000215 	stw	r8,8(r17)
 40257cc:	88e3883a 	add	r17,r17,r3
 40257d0:	88c00015 	stw	r3,0(r17)
 40257d4:	9009883a 	mov	r4,r18
 40257d8:	402dc380 	call	402dc38 <__malloc_unlock>
 40257dc:	80800204 	addi	r2,r16,8
 40257e0:	00001b06 	br	4025850 <_malloc_r+0x2a4>
 40257e4:	04400404 	movi	r17,16
 40257e8:	89402536 	bltu	r17,r5,4025880 <_malloc_r+0x2d4>
 40257ec:	402dc140 	call	402dc14 <__malloc_lock>
 40257f0:	00800184 	movi	r2,6
 40257f4:	01000084 	movi	r4,2
 40257f8:	04c00034 	movhi	r19,0
 40257fc:	1085883a 	add	r2,r2,r2
 4025800:	9cc1fb04 	addi	r19,r19,2028
 4025804:	1085883a 	add	r2,r2,r2
 4025808:	9885883a 	add	r2,r19,r2
 402580c:	14000117 	ldw	r16,4(r2)
 4025810:	10fffe04 	addi	r3,r2,-8
 4025814:	80c0d926 	beq	r16,r3,4025b7c <_malloc_r+0x5d0>
 4025818:	80c00117 	ldw	r3,4(r16)
 402581c:	81000317 	ldw	r4,12(r16)
 4025820:	00bfff04 	movi	r2,-4
 4025824:	1884703a 	and	r2,r3,r2
 4025828:	81400217 	ldw	r5,8(r16)
 402582c:	8085883a 	add	r2,r16,r2
 4025830:	10c00117 	ldw	r3,4(r2)
 4025834:	29000315 	stw	r4,12(r5)
 4025838:	21400215 	stw	r5,8(r4)
 402583c:	18c00054 	ori	r3,r3,1
 4025840:	10c00115 	stw	r3,4(r2)
 4025844:	9009883a 	mov	r4,r18
 4025848:	402dc380 	call	402dc38 <__malloc_unlock>
 402584c:	80800204 	addi	r2,r16,8
 4025850:	dfc00a17 	ldw	ra,40(sp)
 4025854:	df000917 	ldw	fp,36(sp)
 4025858:	ddc00817 	ldw	r23,32(sp)
 402585c:	dd800717 	ldw	r22,28(sp)
 4025860:	dd400617 	ldw	r21,24(sp)
 4025864:	dd000517 	ldw	r20,20(sp)
 4025868:	dcc00417 	ldw	r19,16(sp)
 402586c:	dc800317 	ldw	r18,12(sp)
 4025870:	dc400217 	ldw	r17,8(sp)
 4025874:	dc000117 	ldw	r16,4(sp)
 4025878:	dec00b04 	addi	sp,sp,44
 402587c:	f800283a 	ret
 4025880:	00800304 	movi	r2,12
 4025884:	90800015 	stw	r2,0(r18)
 4025888:	0005883a 	mov	r2,zero
 402588c:	003ff006 	br	4025850 <__flash_rwdata_start+0xffff553c>
 4025890:	01002004 	movi	r4,128
 4025894:	02001004 	movi	r8,64
 4025898:	01c00fc4 	movi	r7,63
 402589c:	003f6106 	br	4025624 <__flash_rwdata_start+0xffff5310>
 40258a0:	4009883a 	mov	r4,r8
 40258a4:	003f7506 	br	402567c <__flash_rwdata_start+0xffff5368>
 40258a8:	81000317 	ldw	r4,12(r16)
 40258ac:	003fde06 	br	4025828 <__flash_rwdata_start+0xffff5514>
 40258b0:	81c5883a 	add	r2,r16,r7
 40258b4:	11400117 	ldw	r5,4(r2)
 40258b8:	9009883a 	mov	r4,r18
 40258bc:	29400054 	ori	r5,r5,1
 40258c0:	11400115 	stw	r5,4(r2)
 40258c4:	402dc380 	call	402dc38 <__malloc_unlock>
 40258c8:	80800204 	addi	r2,r16,8
 40258cc:	003fe006 	br	4025850 <__flash_rwdata_start+0xffff553c>
 40258d0:	9c000217 	ldw	r16,8(r19)
 40258d4:	00bfff04 	movi	r2,-4
 40258d8:	85800117 	ldw	r22,4(r16)
 40258dc:	b0ac703a 	and	r22,r22,r2
 40258e0:	b4400336 	bltu	r22,r17,40258f0 <_malloc_r+0x344>
 40258e4:	b445c83a 	sub	r2,r22,r17
 40258e8:	00c003c4 	movi	r3,15
 40258ec:	18805d16 	blt	r3,r2,4025a64 <_malloc_r+0x4b8>
 40258f0:	05c00034 	movhi	r23,0
 40258f4:	00800034 	movhi	r2,0
 40258f8:	1087a004 	addi	r2,r2,7808
 40258fc:	bdc78d04 	addi	r23,r23,7732
 4025900:	15400017 	ldw	r21,0(r2)
 4025904:	b8c00017 	ldw	r3,0(r23)
 4025908:	00bfffc4 	movi	r2,-1
 402590c:	858d883a 	add	r6,r16,r22
 4025910:	8d6b883a 	add	r21,r17,r21
 4025914:	1880ea26 	beq	r3,r2,4025cc0 <_malloc_r+0x714>
 4025918:	ad4403c4 	addi	r21,r21,4111
 402591c:	00bc0004 	movi	r2,-4096
 4025920:	a8aa703a 	and	r21,r21,r2
 4025924:	a80b883a 	mov	r5,r21
 4025928:	9009883a 	mov	r4,r18
 402592c:	d9800015 	stw	r6,0(sp)
 4025930:	40272380 	call	4027238 <_sbrk_r>
 4025934:	1029883a 	mov	r20,r2
 4025938:	00bfffc4 	movi	r2,-1
 402593c:	d9800017 	ldw	r6,0(sp)
 4025940:	a080e826 	beq	r20,r2,4025ce4 <_malloc_r+0x738>
 4025944:	a180a636 	bltu	r20,r6,4025be0 <_malloc_r+0x634>
 4025948:	07000034 	movhi	fp,0
 402594c:	e707ab04 	addi	fp,fp,7852
 4025950:	e0800017 	ldw	r2,0(fp)
 4025954:	a887883a 	add	r3,r21,r2
 4025958:	e0c00015 	stw	r3,0(fp)
 402595c:	3500e626 	beq	r6,r20,4025cf8 <_malloc_r+0x74c>
 4025960:	b9000017 	ldw	r4,0(r23)
 4025964:	00bfffc4 	movi	r2,-1
 4025968:	2080ee26 	beq	r4,r2,4025d24 <_malloc_r+0x778>
 402596c:	a185c83a 	sub	r2,r20,r6
 4025970:	10c5883a 	add	r2,r2,r3
 4025974:	e0800015 	stw	r2,0(fp)
 4025978:	a0c001cc 	andi	r3,r20,7
 402597c:	1800bc26 	beq	r3,zero,4025c70 <_malloc_r+0x6c4>
 4025980:	a0e9c83a 	sub	r20,r20,r3
 4025984:	00840204 	movi	r2,4104
 4025988:	a5000204 	addi	r20,r20,8
 402598c:	10c7c83a 	sub	r3,r2,r3
 4025990:	a545883a 	add	r2,r20,r21
 4025994:	1083ffcc 	andi	r2,r2,4095
 4025998:	18abc83a 	sub	r21,r3,r2
 402599c:	a80b883a 	mov	r5,r21
 40259a0:	9009883a 	mov	r4,r18
 40259a4:	40272380 	call	4027238 <_sbrk_r>
 40259a8:	00ffffc4 	movi	r3,-1
 40259ac:	10c0e126 	beq	r2,r3,4025d34 <_malloc_r+0x788>
 40259b0:	1505c83a 	sub	r2,r2,r20
 40259b4:	1545883a 	add	r2,r2,r21
 40259b8:	10800054 	ori	r2,r2,1
 40259bc:	e0c00017 	ldw	r3,0(fp)
 40259c0:	9d000215 	stw	r20,8(r19)
 40259c4:	a0800115 	stw	r2,4(r20)
 40259c8:	a8c7883a 	add	r3,r21,r3
 40259cc:	e0c00015 	stw	r3,0(fp)
 40259d0:	84c00e26 	beq	r16,r19,4025a0c <_malloc_r+0x460>
 40259d4:	018003c4 	movi	r6,15
 40259d8:	3580a72e 	bgeu	r6,r22,4025c78 <_malloc_r+0x6cc>
 40259dc:	81400117 	ldw	r5,4(r16)
 40259e0:	013ffe04 	movi	r4,-8
 40259e4:	b0bffd04 	addi	r2,r22,-12
 40259e8:	1104703a 	and	r2,r2,r4
 40259ec:	2900004c 	andi	r4,r5,1
 40259f0:	2088b03a 	or	r4,r4,r2
 40259f4:	81000115 	stw	r4,4(r16)
 40259f8:	01400144 	movi	r5,5
 40259fc:	8089883a 	add	r4,r16,r2
 4025a00:	21400115 	stw	r5,4(r4)
 4025a04:	21400215 	stw	r5,8(r4)
 4025a08:	3080cd36 	bltu	r6,r2,4025d40 <_malloc_r+0x794>
 4025a0c:	00800034 	movhi	r2,0
 4025a10:	10879f04 	addi	r2,r2,7804
 4025a14:	11000017 	ldw	r4,0(r2)
 4025a18:	20c0012e 	bgeu	r4,r3,4025a20 <_malloc_r+0x474>
 4025a1c:	10c00015 	stw	r3,0(r2)
 4025a20:	00800034 	movhi	r2,0
 4025a24:	10879e04 	addi	r2,r2,7800
 4025a28:	11000017 	ldw	r4,0(r2)
 4025a2c:	9c000217 	ldw	r16,8(r19)
 4025a30:	20c0012e 	bgeu	r4,r3,4025a38 <_malloc_r+0x48c>
 4025a34:	10c00015 	stw	r3,0(r2)
 4025a38:	80c00117 	ldw	r3,4(r16)
 4025a3c:	00bfff04 	movi	r2,-4
 4025a40:	1886703a 	and	r3,r3,r2
 4025a44:	1c45c83a 	sub	r2,r3,r17
 4025a48:	1c400236 	bltu	r3,r17,4025a54 <_malloc_r+0x4a8>
 4025a4c:	00c003c4 	movi	r3,15
 4025a50:	18800416 	blt	r3,r2,4025a64 <_malloc_r+0x4b8>
 4025a54:	9009883a 	mov	r4,r18
 4025a58:	402dc380 	call	402dc38 <__malloc_unlock>
 4025a5c:	0005883a 	mov	r2,zero
 4025a60:	003f7b06 	br	4025850 <__flash_rwdata_start+0xffff553c>
 4025a64:	88c00054 	ori	r3,r17,1
 4025a68:	80c00115 	stw	r3,4(r16)
 4025a6c:	8463883a 	add	r17,r16,r17
 4025a70:	10800054 	ori	r2,r2,1
 4025a74:	9c400215 	stw	r17,8(r19)
 4025a78:	88800115 	stw	r2,4(r17)
 4025a7c:	9009883a 	mov	r4,r18
 4025a80:	402dc380 	call	402dc38 <__malloc_unlock>
 4025a84:	80800204 	addi	r2,r16,8
 4025a88:	003f7106 	br	4025850 <__flash_rwdata_start+0xffff553c>
 4025a8c:	00c00504 	movi	r3,20
 4025a90:	18804a2e 	bgeu	r3,r2,4025bbc <_malloc_r+0x610>
 4025a94:	00c01504 	movi	r3,84
 4025a98:	18806e36 	bltu	r3,r2,4025c54 <_malloc_r+0x6a8>
 4025a9c:	8804d33a 	srli	r2,r17,12
 4025aa0:	12001bc4 	addi	r8,r2,111
 4025aa4:	11c01b84 	addi	r7,r2,110
 4025aa8:	4209883a 	add	r4,r8,r8
 4025aac:	003edd06 	br	4025624 <__flash_rwdata_start+0xffff5310>
 4025ab0:	3804d27a 	srli	r2,r7,9
 4025ab4:	00c00104 	movi	r3,4
 4025ab8:	1880442e 	bgeu	r3,r2,4025bcc <_malloc_r+0x620>
 4025abc:	00c00504 	movi	r3,20
 4025ac0:	18808136 	bltu	r3,r2,4025cc8 <_malloc_r+0x71c>
 4025ac4:	11401704 	addi	r5,r2,92
 4025ac8:	10c016c4 	addi	r3,r2,91
 4025acc:	294b883a 	add	r5,r5,r5
 4025ad0:	294b883a 	add	r5,r5,r5
 4025ad4:	294b883a 	add	r5,r5,r5
 4025ad8:	994b883a 	add	r5,r19,r5
 4025adc:	28800017 	ldw	r2,0(r5)
 4025ae0:	01800034 	movhi	r6,0
 4025ae4:	297ffe04 	addi	r5,r5,-8
 4025ae8:	3181fb04 	addi	r6,r6,2028
 4025aec:	28806526 	beq	r5,r2,4025c84 <_malloc_r+0x6d8>
 4025af0:	01bfff04 	movi	r6,-4
 4025af4:	10c00117 	ldw	r3,4(r2)
 4025af8:	1986703a 	and	r3,r3,r6
 4025afc:	38c0022e 	bgeu	r7,r3,4025b08 <_malloc_r+0x55c>
 4025b00:	10800217 	ldw	r2,8(r2)
 4025b04:	28bffb1e 	bne	r5,r2,4025af4 <__flash_rwdata_start+0xffff57e0>
 4025b08:	11400317 	ldw	r5,12(r2)
 4025b0c:	98c00117 	ldw	r3,4(r19)
 4025b10:	81400315 	stw	r5,12(r16)
 4025b14:	80800215 	stw	r2,8(r16)
 4025b18:	2c000215 	stw	r16,8(r5)
 4025b1c:	14000315 	stw	r16,12(r2)
 4025b20:	003ef806 	br	4025704 <__flash_rwdata_start+0xffff53f0>
 4025b24:	88c00054 	ori	r3,r17,1
 4025b28:	80c00115 	stw	r3,4(r16)
 4025b2c:	8463883a 	add	r17,r16,r17
 4025b30:	34400515 	stw	r17,20(r6)
 4025b34:	34400415 	stw	r17,16(r6)
 4025b38:	10c00054 	ori	r3,r2,1
 4025b3c:	8a000315 	stw	r8,12(r17)
 4025b40:	8a000215 	stw	r8,8(r17)
 4025b44:	88c00115 	stw	r3,4(r17)
 4025b48:	88a3883a 	add	r17,r17,r2
 4025b4c:	88800015 	stw	r2,0(r17)
 4025b50:	9009883a 	mov	r4,r18
 4025b54:	402dc380 	call	402dc38 <__malloc_unlock>
 4025b58:	80800204 	addi	r2,r16,8
 4025b5c:	003f3c06 	br	4025850 <__flash_rwdata_start+0xffff553c>
 4025b60:	30c00117 	ldw	r3,4(r6)
 4025b64:	003ee706 	br	4025704 <__flash_rwdata_start+0xffff53f0>
 4025b68:	5ac00044 	addi	r11,r11,1
 4025b6c:	588000cc 	andi	r2,r11,3
 4025b70:	31800204 	addi	r6,r6,8
 4025b74:	103efd1e 	bne	r2,zero,402576c <__flash_rwdata_start+0xffff5458>
 4025b78:	00002406 	br	4025c0c <_malloc_r+0x660>
 4025b7c:	14000317 	ldw	r16,12(r2)
 4025b80:	143f251e 	bne	r2,r16,4025818 <__flash_rwdata_start+0xffff5504>
 4025b84:	21000084 	addi	r4,r4,2
 4025b88:	003ebc06 	br	402567c <__flash_rwdata_start+0xffff5368>
 4025b8c:	8085883a 	add	r2,r16,r2
 4025b90:	10c00117 	ldw	r3,4(r2)
 4025b94:	81000317 	ldw	r4,12(r16)
 4025b98:	81400217 	ldw	r5,8(r16)
 4025b9c:	18c00054 	ori	r3,r3,1
 4025ba0:	10c00115 	stw	r3,4(r2)
 4025ba4:	29000315 	stw	r4,12(r5)
 4025ba8:	21400215 	stw	r5,8(r4)
 4025bac:	9009883a 	mov	r4,r18
 4025bb0:	402dc380 	call	402dc38 <__malloc_unlock>
 4025bb4:	80800204 	addi	r2,r16,8
 4025bb8:	003f2506 	br	4025850 <__flash_rwdata_start+0xffff553c>
 4025bbc:	12001704 	addi	r8,r2,92
 4025bc0:	11c016c4 	addi	r7,r2,91
 4025bc4:	4209883a 	add	r4,r8,r8
 4025bc8:	003e9606 	br	4025624 <__flash_rwdata_start+0xffff5310>
 4025bcc:	3804d1ba 	srli	r2,r7,6
 4025bd0:	11400e44 	addi	r5,r2,57
 4025bd4:	10c00e04 	addi	r3,r2,56
 4025bd8:	294b883a 	add	r5,r5,r5
 4025bdc:	003fbc06 	br	4025ad0 <__flash_rwdata_start+0xffff57bc>
 4025be0:	84ff5926 	beq	r16,r19,4025948 <__flash_rwdata_start+0xffff5634>
 4025be4:	00800034 	movhi	r2,0
 4025be8:	1081fb04 	addi	r2,r2,2028
 4025bec:	14000217 	ldw	r16,8(r2)
 4025bf0:	00bfff04 	movi	r2,-4
 4025bf4:	80c00117 	ldw	r3,4(r16)
 4025bf8:	1886703a 	and	r3,r3,r2
 4025bfc:	003f9106 	br	4025a44 <__flash_rwdata_start+0xffff5730>
 4025c00:	60800217 	ldw	r2,8(r12)
 4025c04:	213fffc4 	addi	r4,r4,-1
 4025c08:	1300651e 	bne	r2,r12,4025da0 <_malloc_r+0x7f4>
 4025c0c:	208000cc 	andi	r2,r4,3
 4025c10:	633ffe04 	addi	r12,r12,-8
 4025c14:	103ffa1e 	bne	r2,zero,4025c00 <__flash_rwdata_start+0xffff58ec>
 4025c18:	98800117 	ldw	r2,4(r19)
 4025c1c:	0146303a 	nor	r3,zero,r5
 4025c20:	1884703a 	and	r2,r3,r2
 4025c24:	98800115 	stw	r2,4(r19)
 4025c28:	294b883a 	add	r5,r5,r5
 4025c2c:	117f2836 	bltu	r2,r5,40258d0 <__flash_rwdata_start+0xffff55bc>
 4025c30:	283f2726 	beq	r5,zero,40258d0 <__flash_rwdata_start+0xffff55bc>
 4025c34:	2886703a 	and	r3,r5,r2
 4025c38:	5809883a 	mov	r4,r11
 4025c3c:	183ec31e 	bne	r3,zero,402574c <__flash_rwdata_start+0xffff5438>
 4025c40:	294b883a 	add	r5,r5,r5
 4025c44:	2886703a 	and	r3,r5,r2
 4025c48:	21000104 	addi	r4,r4,4
 4025c4c:	183ffc26 	beq	r3,zero,4025c40 <__flash_rwdata_start+0xffff592c>
 4025c50:	003ebe06 	br	402574c <__flash_rwdata_start+0xffff5438>
 4025c54:	00c05504 	movi	r3,340
 4025c58:	18801236 	bltu	r3,r2,4025ca4 <_malloc_r+0x6f8>
 4025c5c:	8804d3fa 	srli	r2,r17,15
 4025c60:	12001e04 	addi	r8,r2,120
 4025c64:	11c01dc4 	addi	r7,r2,119
 4025c68:	4209883a 	add	r4,r8,r8
 4025c6c:	003e6d06 	br	4025624 <__flash_rwdata_start+0xffff5310>
 4025c70:	00c40004 	movi	r3,4096
 4025c74:	003f4606 	br	4025990 <__flash_rwdata_start+0xffff567c>
 4025c78:	00800044 	movi	r2,1
 4025c7c:	a0800115 	stw	r2,4(r20)
 4025c80:	003f7406 	br	4025a54 <__flash_rwdata_start+0xffff5740>
 4025c84:	1805d0ba 	srai	r2,r3,2
 4025c88:	01c00044 	movi	r7,1
 4025c8c:	30c00117 	ldw	r3,4(r6)
 4025c90:	388e983a 	sll	r7,r7,r2
 4025c94:	2805883a 	mov	r2,r5
 4025c98:	38c6b03a 	or	r3,r7,r3
 4025c9c:	30c00115 	stw	r3,4(r6)
 4025ca0:	003f9b06 	br	4025b10 <__flash_rwdata_start+0xffff57fc>
 4025ca4:	00c15504 	movi	r3,1364
 4025ca8:	18801a36 	bltu	r3,r2,4025d14 <_malloc_r+0x768>
 4025cac:	8804d4ba 	srli	r2,r17,18
 4025cb0:	12001f44 	addi	r8,r2,125
 4025cb4:	11c01f04 	addi	r7,r2,124
 4025cb8:	4209883a 	add	r4,r8,r8
 4025cbc:	003e5906 	br	4025624 <__flash_rwdata_start+0xffff5310>
 4025cc0:	ad400404 	addi	r21,r21,16
 4025cc4:	003f1706 	br	4025924 <__flash_rwdata_start+0xffff5610>
 4025cc8:	00c01504 	movi	r3,84
 4025ccc:	18802336 	bltu	r3,r2,4025d5c <_malloc_r+0x7b0>
 4025cd0:	3804d33a 	srli	r2,r7,12
 4025cd4:	11401bc4 	addi	r5,r2,111
 4025cd8:	10c01b84 	addi	r3,r2,110
 4025cdc:	294b883a 	add	r5,r5,r5
 4025ce0:	003f7b06 	br	4025ad0 <__flash_rwdata_start+0xffff57bc>
 4025ce4:	9c000217 	ldw	r16,8(r19)
 4025ce8:	00bfff04 	movi	r2,-4
 4025cec:	80c00117 	ldw	r3,4(r16)
 4025cf0:	1886703a 	and	r3,r3,r2
 4025cf4:	003f5306 	br	4025a44 <__flash_rwdata_start+0xffff5730>
 4025cf8:	3083ffcc 	andi	r2,r6,4095
 4025cfc:	103f181e 	bne	r2,zero,4025960 <__flash_rwdata_start+0xffff564c>
 4025d00:	99000217 	ldw	r4,8(r19)
 4025d04:	b545883a 	add	r2,r22,r21
 4025d08:	10800054 	ori	r2,r2,1
 4025d0c:	20800115 	stw	r2,4(r4)
 4025d10:	003f3e06 	br	4025a0c <__flash_rwdata_start+0xffff56f8>
 4025d14:	01003f84 	movi	r4,254
 4025d18:	02001fc4 	movi	r8,127
 4025d1c:	01c01f84 	movi	r7,126
 4025d20:	003e4006 	br	4025624 <__flash_rwdata_start+0xffff5310>
 4025d24:	00800034 	movhi	r2,0
 4025d28:	10878d04 	addi	r2,r2,7732
 4025d2c:	15000015 	stw	r20,0(r2)
 4025d30:	003f1106 	br	4025978 <__flash_rwdata_start+0xffff5664>
 4025d34:	00800044 	movi	r2,1
 4025d38:	002b883a 	mov	r21,zero
 4025d3c:	003f1f06 	br	40259bc <__flash_rwdata_start+0xffff56a8>
 4025d40:	81400204 	addi	r5,r16,8
 4025d44:	9009883a 	mov	r4,r18
 4025d48:	4024e7c0 	call	4024e7c <_free_r>
 4025d4c:	00800034 	movhi	r2,0
 4025d50:	1087ab04 	addi	r2,r2,7852
 4025d54:	10c00017 	ldw	r3,0(r2)
 4025d58:	003f2c06 	br	4025a0c <__flash_rwdata_start+0xffff56f8>
 4025d5c:	00c05504 	movi	r3,340
 4025d60:	18800536 	bltu	r3,r2,4025d78 <_malloc_r+0x7cc>
 4025d64:	3804d3fa 	srli	r2,r7,15
 4025d68:	11401e04 	addi	r5,r2,120
 4025d6c:	10c01dc4 	addi	r3,r2,119
 4025d70:	294b883a 	add	r5,r5,r5
 4025d74:	003f5606 	br	4025ad0 <__flash_rwdata_start+0xffff57bc>
 4025d78:	00c15504 	movi	r3,1364
 4025d7c:	18800536 	bltu	r3,r2,4025d94 <_malloc_r+0x7e8>
 4025d80:	3804d4ba 	srli	r2,r7,18
 4025d84:	11401f44 	addi	r5,r2,125
 4025d88:	10c01f04 	addi	r3,r2,124
 4025d8c:	294b883a 	add	r5,r5,r5
 4025d90:	003f4f06 	br	4025ad0 <__flash_rwdata_start+0xffff57bc>
 4025d94:	01403f84 	movi	r5,254
 4025d98:	00c01f84 	movi	r3,126
 4025d9c:	003f4c06 	br	4025ad0 <__flash_rwdata_start+0xffff57bc>
 4025da0:	98800117 	ldw	r2,4(r19)
 4025da4:	003fa006 	br	4025c28 <__flash_rwdata_start+0xffff5914>
 4025da8:	8808d0fa 	srli	r4,r17,3
 4025dac:	20800044 	addi	r2,r4,1
 4025db0:	1085883a 	add	r2,r2,r2
 4025db4:	003e9006 	br	40257f8 <__flash_rwdata_start+0xffff54e4>

04025db8 <memchr>:
 4025db8:	208000cc 	andi	r2,r4,3
 4025dbc:	280f883a 	mov	r7,r5
 4025dc0:	10003426 	beq	r2,zero,4025e94 <memchr+0xdc>
 4025dc4:	30bfffc4 	addi	r2,r6,-1
 4025dc8:	30001a26 	beq	r6,zero,4025e34 <memchr+0x7c>
 4025dcc:	20c00003 	ldbu	r3,0(r4)
 4025dd0:	29803fcc 	andi	r6,r5,255
 4025dd4:	30c0051e 	bne	r6,r3,4025dec <memchr+0x34>
 4025dd8:	00001806 	br	4025e3c <memchr+0x84>
 4025ddc:	10001526 	beq	r2,zero,4025e34 <memchr+0x7c>
 4025de0:	20c00003 	ldbu	r3,0(r4)
 4025de4:	10bfffc4 	addi	r2,r2,-1
 4025de8:	30c01426 	beq	r6,r3,4025e3c <memchr+0x84>
 4025dec:	21000044 	addi	r4,r4,1
 4025df0:	20c000cc 	andi	r3,r4,3
 4025df4:	183ff91e 	bne	r3,zero,4025ddc <__flash_rwdata_start+0xffff5ac8>
 4025df8:	020000c4 	movi	r8,3
 4025dfc:	40801136 	bltu	r8,r2,4025e44 <memchr+0x8c>
 4025e00:	10000c26 	beq	r2,zero,4025e34 <memchr+0x7c>
 4025e04:	20c00003 	ldbu	r3,0(r4)
 4025e08:	29403fcc 	andi	r5,r5,255
 4025e0c:	28c00b26 	beq	r5,r3,4025e3c <memchr+0x84>
 4025e10:	20c00044 	addi	r3,r4,1
 4025e14:	39803fcc 	andi	r6,r7,255
 4025e18:	2089883a 	add	r4,r4,r2
 4025e1c:	00000306 	br	4025e2c <memchr+0x74>
 4025e20:	18c00044 	addi	r3,r3,1
 4025e24:	197fffc3 	ldbu	r5,-1(r3)
 4025e28:	31400526 	beq	r6,r5,4025e40 <memchr+0x88>
 4025e2c:	1805883a 	mov	r2,r3
 4025e30:	20fffb1e 	bne	r4,r3,4025e20 <__flash_rwdata_start+0xffff5b0c>
 4025e34:	0005883a 	mov	r2,zero
 4025e38:	f800283a 	ret
 4025e3c:	2005883a 	mov	r2,r4
 4025e40:	f800283a 	ret
 4025e44:	28c03fcc 	andi	r3,r5,255
 4025e48:	1812923a 	slli	r9,r3,8
 4025e4c:	02ffbff4 	movhi	r11,65279
 4025e50:	02a02074 	movhi	r10,32897
 4025e54:	48d2b03a 	or	r9,r9,r3
 4025e58:	4806943a 	slli	r3,r9,16
 4025e5c:	5affbfc4 	addi	r11,r11,-257
 4025e60:	52a02004 	addi	r10,r10,-32640
 4025e64:	48d2b03a 	or	r9,r9,r3
 4025e68:	20c00017 	ldw	r3,0(r4)
 4025e6c:	48c6f03a 	xor	r3,r9,r3
 4025e70:	1acd883a 	add	r6,r3,r11
 4025e74:	00c6303a 	nor	r3,zero,r3
 4025e78:	30c6703a 	and	r3,r6,r3
 4025e7c:	1a86703a 	and	r3,r3,r10
 4025e80:	183fe01e 	bne	r3,zero,4025e04 <__flash_rwdata_start+0xffff5af0>
 4025e84:	10bfff04 	addi	r2,r2,-4
 4025e88:	21000104 	addi	r4,r4,4
 4025e8c:	40bff636 	bltu	r8,r2,4025e68 <__flash_rwdata_start+0xffff5b54>
 4025e90:	003fdb06 	br	4025e00 <__flash_rwdata_start+0xffff5aec>
 4025e94:	3005883a 	mov	r2,r6
 4025e98:	003fd706 	br	4025df8 <__flash_rwdata_start+0xffff5ae4>

04025e9c <memcpy>:
 4025e9c:	defffd04 	addi	sp,sp,-12
 4025ea0:	dfc00215 	stw	ra,8(sp)
 4025ea4:	dc400115 	stw	r17,4(sp)
 4025ea8:	dc000015 	stw	r16,0(sp)
 4025eac:	00c003c4 	movi	r3,15
 4025eb0:	2005883a 	mov	r2,r4
 4025eb4:	1980452e 	bgeu	r3,r6,4025fcc <memcpy+0x130>
 4025eb8:	2906b03a 	or	r3,r5,r4
 4025ebc:	18c000cc 	andi	r3,r3,3
 4025ec0:	1800441e 	bne	r3,zero,4025fd4 <memcpy+0x138>
 4025ec4:	347ffc04 	addi	r17,r6,-16
 4025ec8:	8822d13a 	srli	r17,r17,4
 4025ecc:	28c00104 	addi	r3,r5,4
 4025ed0:	23400104 	addi	r13,r4,4
 4025ed4:	8820913a 	slli	r16,r17,4
 4025ed8:	2b000204 	addi	r12,r5,8
 4025edc:	22c00204 	addi	r11,r4,8
 4025ee0:	84000504 	addi	r16,r16,20
 4025ee4:	2a800304 	addi	r10,r5,12
 4025ee8:	22400304 	addi	r9,r4,12
 4025eec:	2c21883a 	add	r16,r5,r16
 4025ef0:	2811883a 	mov	r8,r5
 4025ef4:	200f883a 	mov	r7,r4
 4025ef8:	41000017 	ldw	r4,0(r8)
 4025efc:	1fc00017 	ldw	ra,0(r3)
 4025f00:	63c00017 	ldw	r15,0(r12)
 4025f04:	39000015 	stw	r4,0(r7)
 4025f08:	53800017 	ldw	r14,0(r10)
 4025f0c:	6fc00015 	stw	ra,0(r13)
 4025f10:	5bc00015 	stw	r15,0(r11)
 4025f14:	4b800015 	stw	r14,0(r9)
 4025f18:	18c00404 	addi	r3,r3,16
 4025f1c:	39c00404 	addi	r7,r7,16
 4025f20:	42000404 	addi	r8,r8,16
 4025f24:	6b400404 	addi	r13,r13,16
 4025f28:	63000404 	addi	r12,r12,16
 4025f2c:	5ac00404 	addi	r11,r11,16
 4025f30:	52800404 	addi	r10,r10,16
 4025f34:	4a400404 	addi	r9,r9,16
 4025f38:	1c3fef1e 	bne	r3,r16,4025ef8 <__flash_rwdata_start+0xffff5be4>
 4025f3c:	89c00044 	addi	r7,r17,1
 4025f40:	380e913a 	slli	r7,r7,4
 4025f44:	310003cc 	andi	r4,r6,15
 4025f48:	02c000c4 	movi	r11,3
 4025f4c:	11c7883a 	add	r3,r2,r7
 4025f50:	29cb883a 	add	r5,r5,r7
 4025f54:	5900212e 	bgeu	r11,r4,4025fdc <memcpy+0x140>
 4025f58:	1813883a 	mov	r9,r3
 4025f5c:	2811883a 	mov	r8,r5
 4025f60:	200f883a 	mov	r7,r4
 4025f64:	42800017 	ldw	r10,0(r8)
 4025f68:	4a400104 	addi	r9,r9,4
 4025f6c:	39ffff04 	addi	r7,r7,-4
 4025f70:	4abfff15 	stw	r10,-4(r9)
 4025f74:	42000104 	addi	r8,r8,4
 4025f78:	59fffa36 	bltu	r11,r7,4025f64 <__flash_rwdata_start+0xffff5c50>
 4025f7c:	213fff04 	addi	r4,r4,-4
 4025f80:	2008d0ba 	srli	r4,r4,2
 4025f84:	318000cc 	andi	r6,r6,3
 4025f88:	21000044 	addi	r4,r4,1
 4025f8c:	2109883a 	add	r4,r4,r4
 4025f90:	2109883a 	add	r4,r4,r4
 4025f94:	1907883a 	add	r3,r3,r4
 4025f98:	290b883a 	add	r5,r5,r4
 4025f9c:	30000626 	beq	r6,zero,4025fb8 <memcpy+0x11c>
 4025fa0:	198d883a 	add	r6,r3,r6
 4025fa4:	29c00003 	ldbu	r7,0(r5)
 4025fa8:	18c00044 	addi	r3,r3,1
 4025fac:	29400044 	addi	r5,r5,1
 4025fb0:	19ffffc5 	stb	r7,-1(r3)
 4025fb4:	19bffb1e 	bne	r3,r6,4025fa4 <__flash_rwdata_start+0xffff5c90>
 4025fb8:	dfc00217 	ldw	ra,8(sp)
 4025fbc:	dc400117 	ldw	r17,4(sp)
 4025fc0:	dc000017 	ldw	r16,0(sp)
 4025fc4:	dec00304 	addi	sp,sp,12
 4025fc8:	f800283a 	ret
 4025fcc:	2007883a 	mov	r3,r4
 4025fd0:	003ff206 	br	4025f9c <__flash_rwdata_start+0xffff5c88>
 4025fd4:	2007883a 	mov	r3,r4
 4025fd8:	003ff106 	br	4025fa0 <__flash_rwdata_start+0xffff5c8c>
 4025fdc:	200d883a 	mov	r6,r4
 4025fe0:	003fee06 	br	4025f9c <__flash_rwdata_start+0xffff5c88>

04025fe4 <memset>:
 4025fe4:	20c000cc 	andi	r3,r4,3
 4025fe8:	2005883a 	mov	r2,r4
 4025fec:	18004426 	beq	r3,zero,4026100 <memset+0x11c>
 4025ff0:	31ffffc4 	addi	r7,r6,-1
 4025ff4:	30004026 	beq	r6,zero,40260f8 <memset+0x114>
 4025ff8:	2813883a 	mov	r9,r5
 4025ffc:	200d883a 	mov	r6,r4
 4026000:	2007883a 	mov	r3,r4
 4026004:	00000406 	br	4026018 <memset+0x34>
 4026008:	3a3fffc4 	addi	r8,r7,-1
 402600c:	31800044 	addi	r6,r6,1
 4026010:	38003926 	beq	r7,zero,40260f8 <memset+0x114>
 4026014:	400f883a 	mov	r7,r8
 4026018:	18c00044 	addi	r3,r3,1
 402601c:	32400005 	stb	r9,0(r6)
 4026020:	1a0000cc 	andi	r8,r3,3
 4026024:	403ff81e 	bne	r8,zero,4026008 <__flash_rwdata_start+0xffff5cf4>
 4026028:	010000c4 	movi	r4,3
 402602c:	21c02d2e 	bgeu	r4,r7,40260e4 <memset+0x100>
 4026030:	29003fcc 	andi	r4,r5,255
 4026034:	200c923a 	slli	r6,r4,8
 4026038:	3108b03a 	or	r4,r6,r4
 402603c:	200c943a 	slli	r6,r4,16
 4026040:	218cb03a 	or	r6,r4,r6
 4026044:	010003c4 	movi	r4,15
 4026048:	21c0182e 	bgeu	r4,r7,40260ac <memset+0xc8>
 402604c:	3b3ffc04 	addi	r12,r7,-16
 4026050:	6018d13a 	srli	r12,r12,4
 4026054:	1a000104 	addi	r8,r3,4
 4026058:	1ac00204 	addi	r11,r3,8
 402605c:	6008913a 	slli	r4,r12,4
 4026060:	1a800304 	addi	r10,r3,12
 4026064:	1813883a 	mov	r9,r3
 4026068:	21000504 	addi	r4,r4,20
 402606c:	1909883a 	add	r4,r3,r4
 4026070:	49800015 	stw	r6,0(r9)
 4026074:	41800015 	stw	r6,0(r8)
 4026078:	59800015 	stw	r6,0(r11)
 402607c:	51800015 	stw	r6,0(r10)
 4026080:	42000404 	addi	r8,r8,16
 4026084:	4a400404 	addi	r9,r9,16
 4026088:	5ac00404 	addi	r11,r11,16
 402608c:	52800404 	addi	r10,r10,16
 4026090:	413ff71e 	bne	r8,r4,4026070 <__flash_rwdata_start+0xffff5d5c>
 4026094:	63000044 	addi	r12,r12,1
 4026098:	6018913a 	slli	r12,r12,4
 402609c:	39c003cc 	andi	r7,r7,15
 40260a0:	010000c4 	movi	r4,3
 40260a4:	1b07883a 	add	r3,r3,r12
 40260a8:	21c00e2e 	bgeu	r4,r7,40260e4 <memset+0x100>
 40260ac:	1813883a 	mov	r9,r3
 40260b0:	3811883a 	mov	r8,r7
 40260b4:	010000c4 	movi	r4,3
 40260b8:	49800015 	stw	r6,0(r9)
 40260bc:	423fff04 	addi	r8,r8,-4
 40260c0:	4a400104 	addi	r9,r9,4
 40260c4:	223ffc36 	bltu	r4,r8,40260b8 <__flash_rwdata_start+0xffff5da4>
 40260c8:	393fff04 	addi	r4,r7,-4
 40260cc:	2008d0ba 	srli	r4,r4,2
 40260d0:	39c000cc 	andi	r7,r7,3
 40260d4:	21000044 	addi	r4,r4,1
 40260d8:	2109883a 	add	r4,r4,r4
 40260dc:	2109883a 	add	r4,r4,r4
 40260e0:	1907883a 	add	r3,r3,r4
 40260e4:	38000526 	beq	r7,zero,40260fc <memset+0x118>
 40260e8:	19cf883a 	add	r7,r3,r7
 40260ec:	19400005 	stb	r5,0(r3)
 40260f0:	18c00044 	addi	r3,r3,1
 40260f4:	38fffd1e 	bne	r7,r3,40260ec <__flash_rwdata_start+0xffff5dd8>
 40260f8:	f800283a 	ret
 40260fc:	f800283a 	ret
 4026100:	2007883a 	mov	r3,r4
 4026104:	300f883a 	mov	r7,r6
 4026108:	003fc706 	br	4026028 <__flash_rwdata_start+0xffff5d14>

0402610c <_Balloc>:
 402610c:	20801317 	ldw	r2,76(r4)
 4026110:	defffc04 	addi	sp,sp,-16
 4026114:	dc400115 	stw	r17,4(sp)
 4026118:	dc000015 	stw	r16,0(sp)
 402611c:	dfc00315 	stw	ra,12(sp)
 4026120:	dc800215 	stw	r18,8(sp)
 4026124:	2023883a 	mov	r17,r4
 4026128:	2821883a 	mov	r16,r5
 402612c:	10000f26 	beq	r2,zero,402616c <_Balloc+0x60>
 4026130:	8407883a 	add	r3,r16,r16
 4026134:	18c7883a 	add	r3,r3,r3
 4026138:	10c7883a 	add	r3,r2,r3
 402613c:	18800017 	ldw	r2,0(r3)
 4026140:	10001126 	beq	r2,zero,4026188 <_Balloc+0x7c>
 4026144:	11000017 	ldw	r4,0(r2)
 4026148:	19000015 	stw	r4,0(r3)
 402614c:	10000415 	stw	zero,16(r2)
 4026150:	10000315 	stw	zero,12(r2)
 4026154:	dfc00317 	ldw	ra,12(sp)
 4026158:	dc800217 	ldw	r18,8(sp)
 402615c:	dc400117 	ldw	r17,4(sp)
 4026160:	dc000017 	ldw	r16,0(sp)
 4026164:	dec00404 	addi	sp,sp,16
 4026168:	f800283a 	ret
 402616c:	01800844 	movi	r6,33
 4026170:	01400104 	movi	r5,4
 4026174:	4028ce80 	call	4028ce8 <_calloc_r>
 4026178:	88801315 	stw	r2,76(r17)
 402617c:	103fec1e 	bne	r2,zero,4026130 <__flash_rwdata_start+0xffff5e1c>
 4026180:	0005883a 	mov	r2,zero
 4026184:	003ff306 	br	4026154 <__flash_rwdata_start+0xffff5e40>
 4026188:	01400044 	movi	r5,1
 402618c:	2c24983a 	sll	r18,r5,r16
 4026190:	8809883a 	mov	r4,r17
 4026194:	91800144 	addi	r6,r18,5
 4026198:	318d883a 	add	r6,r6,r6
 402619c:	318d883a 	add	r6,r6,r6
 40261a0:	4028ce80 	call	4028ce8 <_calloc_r>
 40261a4:	103ff626 	beq	r2,zero,4026180 <__flash_rwdata_start+0xffff5e6c>
 40261a8:	14000115 	stw	r16,4(r2)
 40261ac:	14800215 	stw	r18,8(r2)
 40261b0:	003fe606 	br	402614c <__flash_rwdata_start+0xffff5e38>

040261b4 <_Bfree>:
 40261b4:	28000826 	beq	r5,zero,40261d8 <_Bfree+0x24>
 40261b8:	28c00117 	ldw	r3,4(r5)
 40261bc:	20801317 	ldw	r2,76(r4)
 40261c0:	18c7883a 	add	r3,r3,r3
 40261c4:	18c7883a 	add	r3,r3,r3
 40261c8:	10c5883a 	add	r2,r2,r3
 40261cc:	10c00017 	ldw	r3,0(r2)
 40261d0:	28c00015 	stw	r3,0(r5)
 40261d4:	11400015 	stw	r5,0(r2)
 40261d8:	f800283a 	ret

040261dc <__multadd>:
 40261dc:	defff704 	addi	sp,sp,-36
 40261e0:	dc800215 	stw	r18,8(sp)
 40261e4:	2c800417 	ldw	r18,16(r5)
 40261e8:	dd800615 	stw	r22,24(sp)
 40261ec:	dd400515 	stw	r21,20(sp)
 40261f0:	dd000415 	stw	r20,16(sp)
 40261f4:	dcc00315 	stw	r19,12(sp)
 40261f8:	dc400115 	stw	r17,4(sp)
 40261fc:	dc000015 	stw	r16,0(sp)
 4026200:	dfc00815 	stw	ra,32(sp)
 4026204:	ddc00715 	stw	r23,28(sp)
 4026208:	2827883a 	mov	r19,r5
 402620c:	2029883a 	mov	r20,r4
 4026210:	3023883a 	mov	r17,r6
 4026214:	3821883a 	mov	r16,r7
 4026218:	2d400504 	addi	r21,r5,20
 402621c:	002d883a 	mov	r22,zero
 4026220:	adc00017 	ldw	r23,0(r21)
 4026224:	880b883a 	mov	r5,r17
 4026228:	ad400104 	addi	r21,r21,4
 402622c:	b93fffcc 	andi	r4,r23,65535
 4026230:	40208380 	call	4020838 <__mulsi3>
 4026234:	b808d43a 	srli	r4,r23,16
 4026238:	880b883a 	mov	r5,r17
 402623c:	1421883a 	add	r16,r2,r16
 4026240:	40208380 	call	4020838 <__mulsi3>
 4026244:	800ed43a 	srli	r7,r16,16
 4026248:	80ffffcc 	andi	r3,r16,65535
 402624c:	b5800044 	addi	r22,r22,1
 4026250:	11c5883a 	add	r2,r2,r7
 4026254:	100e943a 	slli	r7,r2,16
 4026258:	1020d43a 	srli	r16,r2,16
 402625c:	38c7883a 	add	r3,r7,r3
 4026260:	a8ffff15 	stw	r3,-4(r21)
 4026264:	b4bfee16 	blt	r22,r18,4026220 <__flash_rwdata_start+0xffff5f0c>
 4026268:	80000926 	beq	r16,zero,4026290 <__multadd+0xb4>
 402626c:	98800217 	ldw	r2,8(r19)
 4026270:	9080130e 	bge	r18,r2,40262c0 <__multadd+0xe4>
 4026274:	90800144 	addi	r2,r18,5
 4026278:	1085883a 	add	r2,r2,r2
 402627c:	1085883a 	add	r2,r2,r2
 4026280:	9885883a 	add	r2,r19,r2
 4026284:	14000015 	stw	r16,0(r2)
 4026288:	94800044 	addi	r18,r18,1
 402628c:	9c800415 	stw	r18,16(r19)
 4026290:	9805883a 	mov	r2,r19
 4026294:	dfc00817 	ldw	ra,32(sp)
 4026298:	ddc00717 	ldw	r23,28(sp)
 402629c:	dd800617 	ldw	r22,24(sp)
 40262a0:	dd400517 	ldw	r21,20(sp)
 40262a4:	dd000417 	ldw	r20,16(sp)
 40262a8:	dcc00317 	ldw	r19,12(sp)
 40262ac:	dc800217 	ldw	r18,8(sp)
 40262b0:	dc400117 	ldw	r17,4(sp)
 40262b4:	dc000017 	ldw	r16,0(sp)
 40262b8:	dec00904 	addi	sp,sp,36
 40262bc:	f800283a 	ret
 40262c0:	99400117 	ldw	r5,4(r19)
 40262c4:	a009883a 	mov	r4,r20
 40262c8:	29400044 	addi	r5,r5,1
 40262cc:	402610c0 	call	402610c <_Balloc>
 40262d0:	99800417 	ldw	r6,16(r19)
 40262d4:	99400304 	addi	r5,r19,12
 40262d8:	11000304 	addi	r4,r2,12
 40262dc:	31800084 	addi	r6,r6,2
 40262e0:	318d883a 	add	r6,r6,r6
 40262e4:	318d883a 	add	r6,r6,r6
 40262e8:	1023883a 	mov	r17,r2
 40262ec:	4025e9c0 	call	4025e9c <memcpy>
 40262f0:	98000a26 	beq	r19,zero,402631c <__multadd+0x140>
 40262f4:	98c00117 	ldw	r3,4(r19)
 40262f8:	a0801317 	ldw	r2,76(r20)
 40262fc:	18c7883a 	add	r3,r3,r3
 4026300:	18c7883a 	add	r3,r3,r3
 4026304:	10c5883a 	add	r2,r2,r3
 4026308:	10c00017 	ldw	r3,0(r2)
 402630c:	98c00015 	stw	r3,0(r19)
 4026310:	14c00015 	stw	r19,0(r2)
 4026314:	8827883a 	mov	r19,r17
 4026318:	003fd606 	br	4026274 <__flash_rwdata_start+0xffff5f60>
 402631c:	8827883a 	mov	r19,r17
 4026320:	003fd406 	br	4026274 <__flash_rwdata_start+0xffff5f60>

04026324 <__s2b>:
 4026324:	defff904 	addi	sp,sp,-28
 4026328:	dc400115 	stw	r17,4(sp)
 402632c:	dc000015 	stw	r16,0(sp)
 4026330:	2023883a 	mov	r17,r4
 4026334:	2821883a 	mov	r16,r5
 4026338:	39000204 	addi	r4,r7,8
 402633c:	01400244 	movi	r5,9
 4026340:	dcc00315 	stw	r19,12(sp)
 4026344:	dc800215 	stw	r18,8(sp)
 4026348:	dfc00615 	stw	ra,24(sp)
 402634c:	dd400515 	stw	r21,20(sp)
 4026350:	dd000415 	stw	r20,16(sp)
 4026354:	3825883a 	mov	r18,r7
 4026358:	3027883a 	mov	r19,r6
 402635c:	40206840 	call	4020684 <__divsi3>
 4026360:	00c00044 	movi	r3,1
 4026364:	000b883a 	mov	r5,zero
 4026368:	1880030e 	bge	r3,r2,4026378 <__s2b+0x54>
 402636c:	18c7883a 	add	r3,r3,r3
 4026370:	29400044 	addi	r5,r5,1
 4026374:	18bffd16 	blt	r3,r2,402636c <__flash_rwdata_start+0xffff6058>
 4026378:	8809883a 	mov	r4,r17
 402637c:	402610c0 	call	402610c <_Balloc>
 4026380:	d8c00717 	ldw	r3,28(sp)
 4026384:	10c00515 	stw	r3,20(r2)
 4026388:	00c00044 	movi	r3,1
 402638c:	10c00415 	stw	r3,16(r2)
 4026390:	00c00244 	movi	r3,9
 4026394:	1cc0210e 	bge	r3,r19,402641c <__s2b+0xf8>
 4026398:	80eb883a 	add	r21,r16,r3
 402639c:	a829883a 	mov	r20,r21
 40263a0:	84e1883a 	add	r16,r16,r19
 40263a4:	a1c00007 	ldb	r7,0(r20)
 40263a8:	01800284 	movi	r6,10
 40263ac:	a5000044 	addi	r20,r20,1
 40263b0:	100b883a 	mov	r5,r2
 40263b4:	39fff404 	addi	r7,r7,-48
 40263b8:	8809883a 	mov	r4,r17
 40263bc:	40261dc0 	call	40261dc <__multadd>
 40263c0:	a43ff81e 	bne	r20,r16,40263a4 <__flash_rwdata_start+0xffff6090>
 40263c4:	ace1883a 	add	r16,r21,r19
 40263c8:	843ffe04 	addi	r16,r16,-8
 40263cc:	9c800a0e 	bge	r19,r18,40263f8 <__s2b+0xd4>
 40263d0:	94e5c83a 	sub	r18,r18,r19
 40263d4:	84a5883a 	add	r18,r16,r18
 40263d8:	81c00007 	ldb	r7,0(r16)
 40263dc:	01800284 	movi	r6,10
 40263e0:	84000044 	addi	r16,r16,1
 40263e4:	100b883a 	mov	r5,r2
 40263e8:	39fff404 	addi	r7,r7,-48
 40263ec:	8809883a 	mov	r4,r17
 40263f0:	40261dc0 	call	40261dc <__multadd>
 40263f4:	84bff81e 	bne	r16,r18,40263d8 <__flash_rwdata_start+0xffff60c4>
 40263f8:	dfc00617 	ldw	ra,24(sp)
 40263fc:	dd400517 	ldw	r21,20(sp)
 4026400:	dd000417 	ldw	r20,16(sp)
 4026404:	dcc00317 	ldw	r19,12(sp)
 4026408:	dc800217 	ldw	r18,8(sp)
 402640c:	dc400117 	ldw	r17,4(sp)
 4026410:	dc000017 	ldw	r16,0(sp)
 4026414:	dec00704 	addi	sp,sp,28
 4026418:	f800283a 	ret
 402641c:	84000284 	addi	r16,r16,10
 4026420:	1827883a 	mov	r19,r3
 4026424:	003fe906 	br	40263cc <__flash_rwdata_start+0xffff60b8>

04026428 <__hi0bits>:
 4026428:	20bfffec 	andhi	r2,r4,65535
 402642c:	1000141e 	bne	r2,zero,4026480 <__hi0bits+0x58>
 4026430:	2008943a 	slli	r4,r4,16
 4026434:	00800404 	movi	r2,16
 4026438:	20ffc02c 	andhi	r3,r4,65280
 402643c:	1800021e 	bne	r3,zero,4026448 <__hi0bits+0x20>
 4026440:	2008923a 	slli	r4,r4,8
 4026444:	10800204 	addi	r2,r2,8
 4026448:	20fc002c 	andhi	r3,r4,61440
 402644c:	1800021e 	bne	r3,zero,4026458 <__hi0bits+0x30>
 4026450:	2008913a 	slli	r4,r4,4
 4026454:	10800104 	addi	r2,r2,4
 4026458:	20f0002c 	andhi	r3,r4,49152
 402645c:	1800031e 	bne	r3,zero,402646c <__hi0bits+0x44>
 4026460:	2109883a 	add	r4,r4,r4
 4026464:	10800084 	addi	r2,r2,2
 4026468:	2109883a 	add	r4,r4,r4
 402646c:	20000316 	blt	r4,zero,402647c <__hi0bits+0x54>
 4026470:	2110002c 	andhi	r4,r4,16384
 4026474:	2000041e 	bne	r4,zero,4026488 <__hi0bits+0x60>
 4026478:	00800804 	movi	r2,32
 402647c:	f800283a 	ret
 4026480:	0005883a 	mov	r2,zero
 4026484:	003fec06 	br	4026438 <__flash_rwdata_start+0xffff6124>
 4026488:	10800044 	addi	r2,r2,1
 402648c:	f800283a 	ret

04026490 <__lo0bits>:
 4026490:	20c00017 	ldw	r3,0(r4)
 4026494:	188001cc 	andi	r2,r3,7
 4026498:	10000826 	beq	r2,zero,40264bc <__lo0bits+0x2c>
 402649c:	1880004c 	andi	r2,r3,1
 40264a0:	1000211e 	bne	r2,zero,4026528 <__lo0bits+0x98>
 40264a4:	1880008c 	andi	r2,r3,2
 40264a8:	1000211e 	bne	r2,zero,4026530 <__lo0bits+0xa0>
 40264ac:	1806d0ba 	srli	r3,r3,2
 40264b0:	00800084 	movi	r2,2
 40264b4:	20c00015 	stw	r3,0(r4)
 40264b8:	f800283a 	ret
 40264bc:	18bfffcc 	andi	r2,r3,65535
 40264c0:	10001326 	beq	r2,zero,4026510 <__lo0bits+0x80>
 40264c4:	0005883a 	mov	r2,zero
 40264c8:	19403fcc 	andi	r5,r3,255
 40264cc:	2800021e 	bne	r5,zero,40264d8 <__lo0bits+0x48>
 40264d0:	1806d23a 	srli	r3,r3,8
 40264d4:	10800204 	addi	r2,r2,8
 40264d8:	194003cc 	andi	r5,r3,15
 40264dc:	2800021e 	bne	r5,zero,40264e8 <__lo0bits+0x58>
 40264e0:	1806d13a 	srli	r3,r3,4
 40264e4:	10800104 	addi	r2,r2,4
 40264e8:	194000cc 	andi	r5,r3,3
 40264ec:	2800021e 	bne	r5,zero,40264f8 <__lo0bits+0x68>
 40264f0:	1806d0ba 	srli	r3,r3,2
 40264f4:	10800084 	addi	r2,r2,2
 40264f8:	1940004c 	andi	r5,r3,1
 40264fc:	2800081e 	bne	r5,zero,4026520 <__lo0bits+0x90>
 4026500:	1806d07a 	srli	r3,r3,1
 4026504:	1800051e 	bne	r3,zero,402651c <__lo0bits+0x8c>
 4026508:	00800804 	movi	r2,32
 402650c:	f800283a 	ret
 4026510:	1806d43a 	srli	r3,r3,16
 4026514:	00800404 	movi	r2,16
 4026518:	003feb06 	br	40264c8 <__flash_rwdata_start+0xffff61b4>
 402651c:	10800044 	addi	r2,r2,1
 4026520:	20c00015 	stw	r3,0(r4)
 4026524:	f800283a 	ret
 4026528:	0005883a 	mov	r2,zero
 402652c:	f800283a 	ret
 4026530:	1806d07a 	srli	r3,r3,1
 4026534:	00800044 	movi	r2,1
 4026538:	20c00015 	stw	r3,0(r4)
 402653c:	f800283a 	ret

04026540 <__i2b>:
 4026540:	defffd04 	addi	sp,sp,-12
 4026544:	dc000015 	stw	r16,0(sp)
 4026548:	04000044 	movi	r16,1
 402654c:	dc400115 	stw	r17,4(sp)
 4026550:	2823883a 	mov	r17,r5
 4026554:	800b883a 	mov	r5,r16
 4026558:	dfc00215 	stw	ra,8(sp)
 402655c:	402610c0 	call	402610c <_Balloc>
 4026560:	14400515 	stw	r17,20(r2)
 4026564:	14000415 	stw	r16,16(r2)
 4026568:	dfc00217 	ldw	ra,8(sp)
 402656c:	dc400117 	ldw	r17,4(sp)
 4026570:	dc000017 	ldw	r16,0(sp)
 4026574:	dec00304 	addi	sp,sp,12
 4026578:	f800283a 	ret

0402657c <__multiply>:
 402657c:	deffef04 	addi	sp,sp,-68
 4026580:	dc400815 	stw	r17,32(sp)
 4026584:	dc000715 	stw	r16,28(sp)
 4026588:	34400417 	ldw	r17,16(r6)
 402658c:	2c000417 	ldw	r16,16(r5)
 4026590:	dd800d15 	stw	r22,52(sp)
 4026594:	dc800915 	stw	r18,36(sp)
 4026598:	dfc01015 	stw	ra,64(sp)
 402659c:	df000f15 	stw	fp,60(sp)
 40265a0:	ddc00e15 	stw	r23,56(sp)
 40265a4:	dd400c15 	stw	r21,48(sp)
 40265a8:	dd000b15 	stw	r20,44(sp)
 40265ac:	dcc00a15 	stw	r19,40(sp)
 40265b0:	2825883a 	mov	r18,r5
 40265b4:	302d883a 	mov	r22,r6
 40265b8:	8440050e 	bge	r16,r17,40265d0 <__multiply+0x54>
 40265bc:	8007883a 	mov	r3,r16
 40265c0:	3025883a 	mov	r18,r6
 40265c4:	8821883a 	mov	r16,r17
 40265c8:	282d883a 	mov	r22,r5
 40265cc:	1823883a 	mov	r17,r3
 40265d0:	90800217 	ldw	r2,8(r18)
 40265d4:	8447883a 	add	r3,r16,r17
 40265d8:	d8c00215 	stw	r3,8(sp)
 40265dc:	91400117 	ldw	r5,4(r18)
 40265e0:	10c0010e 	bge	r2,r3,40265e8 <__multiply+0x6c>
 40265e4:	29400044 	addi	r5,r5,1
 40265e8:	402610c0 	call	402610c <_Balloc>
 40265ec:	d8c00217 	ldw	r3,8(sp)
 40265f0:	d8800615 	stw	r2,24(sp)
 40265f4:	18eb883a 	add	r21,r3,r3
 40265f8:	ad6b883a 	add	r21,r21,r21
 40265fc:	10c00504 	addi	r3,r2,20
 4026600:	1d6b883a 	add	r21,r3,r21
 4026604:	d8c00115 	stw	r3,4(sp)
 4026608:	dd400315 	stw	r21,12(sp)
 402660c:	1805883a 	mov	r2,r3
 4026610:	1d40042e 	bgeu	r3,r21,4026624 <__multiply+0xa8>
 4026614:	d8c00317 	ldw	r3,12(sp)
 4026618:	10000015 	stw	zero,0(r2)
 402661c:	10800104 	addi	r2,r2,4
 4026620:	10fffc36 	bltu	r2,r3,4026614 <__flash_rwdata_start+0xffff6300>
 4026624:	8c63883a 	add	r17,r17,r17
 4026628:	b5800504 	addi	r22,r22,20
 402662c:	8c63883a 	add	r17,r17,r17
 4026630:	94800504 	addi	r18,r18,20
 4026634:	8421883a 	add	r16,r16,r16
 4026638:	b463883a 	add	r17,r22,r17
 402663c:	8421883a 	add	r16,r16,r16
 4026640:	dd800015 	stw	r22,0(sp)
 4026644:	dc800415 	stw	r18,16(sp)
 4026648:	dc400515 	stw	r17,20(sp)
 402664c:	9429883a 	add	r20,r18,r16
 4026650:	b4404f2e 	bgeu	r22,r17,4026790 <__multiply+0x214>
 4026654:	d8c00017 	ldw	r3,0(sp)
 4026658:	1c800017 	ldw	r18,0(r3)
 402665c:	947fffcc 	andi	r17,r18,65535
 4026660:	88001e26 	beq	r17,zero,40266dc <__multiply+0x160>
 4026664:	dd800117 	ldw	r22,4(sp)
 4026668:	dd400417 	ldw	r21,16(sp)
 402666c:	0027883a 	mov	r19,zero
 4026670:	ac800017 	ldw	r18,0(r21)
 4026674:	b4000017 	ldw	r16,0(r22)
 4026678:	880b883a 	mov	r5,r17
 402667c:	913fffcc 	andi	r4,r18,65535
 4026680:	40208380 	call	4020838 <__mulsi3>
 4026684:	9008d43a 	srli	r4,r18,16
 4026688:	84bfffcc 	andi	r18,r16,65535
 402668c:	1485883a 	add	r2,r2,r18
 4026690:	14e5883a 	add	r18,r2,r19
 4026694:	8020d43a 	srli	r16,r16,16
 4026698:	9026d43a 	srli	r19,r18,16
 402669c:	880b883a 	mov	r5,r17
 40266a0:	40208380 	call	4020838 <__mulsi3>
 40266a4:	1405883a 	add	r2,r2,r16
 40266a8:	14e1883a 	add	r16,r2,r19
 40266ac:	90ffffcc 	andi	r3,r18,65535
 40266b0:	8024943a 	slli	r18,r16,16
 40266b4:	ad400104 	addi	r21,r21,4
 40266b8:	b005883a 	mov	r2,r22
 40266bc:	90c6b03a 	or	r3,r18,r3
 40266c0:	b0c00015 	stw	r3,0(r22)
 40266c4:	8026d43a 	srli	r19,r16,16
 40266c8:	b5800104 	addi	r22,r22,4
 40266cc:	ad3fe836 	bltu	r21,r20,4026670 <__flash_rwdata_start+0xffff635c>
 40266d0:	d8c00017 	ldw	r3,0(sp)
 40266d4:	14c00115 	stw	r19,4(r2)
 40266d8:	1c800017 	ldw	r18,0(r3)
 40266dc:	9024d43a 	srli	r18,r18,16
 40266e0:	90002226 	beq	r18,zero,402676c <__multiply+0x1f0>
 40266e4:	d8c00117 	ldw	r3,4(sp)
 40266e8:	dd800417 	ldw	r22,16(sp)
 40266ec:	002f883a 	mov	r23,zero
 40266f0:	1f000017 	ldw	fp,0(r3)
 40266f4:	1823883a 	mov	r17,r3
 40266f8:	182b883a 	mov	r21,r3
 40266fc:	e021883a 	mov	r16,fp
 4026700:	00000106 	br	4026708 <__multiply+0x18c>
 4026704:	982b883a 	mov	r21,r19
 4026708:	b100000b 	ldhu	r4,0(r22)
 402670c:	8020d43a 	srli	r16,r16,16
 4026710:	900b883a 	mov	r5,r18
 4026714:	40208380 	call	4020838 <__mulsi3>
 4026718:	1405883a 	add	r2,r2,r16
 402671c:	15ef883a 	add	r23,r2,r23
 4026720:	b804943a 	slli	r2,r23,16
 4026724:	e0ffffcc 	andi	r3,fp,65535
 4026728:	8c400104 	addi	r17,r17,4
 402672c:	10c6b03a 	or	r3,r2,r3
 4026730:	88ffff15 	stw	r3,-4(r17)
 4026734:	b5800104 	addi	r22,r22,4
 4026738:	b13fff17 	ldw	r4,-4(r22)
 402673c:	acc00104 	addi	r19,r21,4
 4026740:	900b883a 	mov	r5,r18
 4026744:	2008d43a 	srli	r4,r4,16
 4026748:	9c000017 	ldw	r16,0(r19)
 402674c:	40208380 	call	4020838 <__mulsi3>
 4026750:	b806d43a 	srli	r3,r23,16
 4026754:	813fffcc 	andi	r4,r16,65535
 4026758:	1105883a 	add	r2,r2,r4
 402675c:	10f9883a 	add	fp,r2,r3
 4026760:	e02ed43a 	srli	r23,fp,16
 4026764:	b53fe736 	bltu	r22,r20,4026704 <__flash_rwdata_start+0xffff63f0>
 4026768:	af000115 	stw	fp,4(r21)
 402676c:	d8c00017 	ldw	r3,0(sp)
 4026770:	d9000517 	ldw	r4,20(sp)
 4026774:	18c00104 	addi	r3,r3,4
 4026778:	d8c00015 	stw	r3,0(sp)
 402677c:	d8c00117 	ldw	r3,4(sp)
 4026780:	18c00104 	addi	r3,r3,4
 4026784:	d8c00115 	stw	r3,4(sp)
 4026788:	d8c00017 	ldw	r3,0(sp)
 402678c:	193fb136 	bltu	r3,r4,4026654 <__flash_rwdata_start+0xffff6340>
 4026790:	d8c00217 	ldw	r3,8(sp)
 4026794:	00c00c0e 	bge	zero,r3,40267c8 <__multiply+0x24c>
 4026798:	d8c00317 	ldw	r3,12(sp)
 402679c:	18bfff17 	ldw	r2,-4(r3)
 40267a0:	1d7fff04 	addi	r21,r3,-4
 40267a4:	10000326 	beq	r2,zero,40267b4 <__multiply+0x238>
 40267a8:	00000706 	br	40267c8 <__multiply+0x24c>
 40267ac:	a8800017 	ldw	r2,0(r21)
 40267b0:	1000051e 	bne	r2,zero,40267c8 <__multiply+0x24c>
 40267b4:	d8c00217 	ldw	r3,8(sp)
 40267b8:	ad7fff04 	addi	r21,r21,-4
 40267bc:	18ffffc4 	addi	r3,r3,-1
 40267c0:	d8c00215 	stw	r3,8(sp)
 40267c4:	183ff91e 	bne	r3,zero,40267ac <__flash_rwdata_start+0xffff6498>
 40267c8:	d8c00617 	ldw	r3,24(sp)
 40267cc:	d9000217 	ldw	r4,8(sp)
 40267d0:	1805883a 	mov	r2,r3
 40267d4:	19000415 	stw	r4,16(r3)
 40267d8:	dfc01017 	ldw	ra,64(sp)
 40267dc:	df000f17 	ldw	fp,60(sp)
 40267e0:	ddc00e17 	ldw	r23,56(sp)
 40267e4:	dd800d17 	ldw	r22,52(sp)
 40267e8:	dd400c17 	ldw	r21,48(sp)
 40267ec:	dd000b17 	ldw	r20,44(sp)
 40267f0:	dcc00a17 	ldw	r19,40(sp)
 40267f4:	dc800917 	ldw	r18,36(sp)
 40267f8:	dc400817 	ldw	r17,32(sp)
 40267fc:	dc000717 	ldw	r16,28(sp)
 4026800:	dec01104 	addi	sp,sp,68
 4026804:	f800283a 	ret

04026808 <__pow5mult>:
 4026808:	defffa04 	addi	sp,sp,-24
 402680c:	dcc00315 	stw	r19,12(sp)
 4026810:	dc000015 	stw	r16,0(sp)
 4026814:	dfc00515 	stw	ra,20(sp)
 4026818:	dd000415 	stw	r20,16(sp)
 402681c:	dc800215 	stw	r18,8(sp)
 4026820:	dc400115 	stw	r17,4(sp)
 4026824:	308000cc 	andi	r2,r6,3
 4026828:	3021883a 	mov	r16,r6
 402682c:	2027883a 	mov	r19,r4
 4026830:	10002f1e 	bne	r2,zero,40268f0 <__pow5mult+0xe8>
 4026834:	2825883a 	mov	r18,r5
 4026838:	8021d0ba 	srai	r16,r16,2
 402683c:	80001a26 	beq	r16,zero,40268a8 <__pow5mult+0xa0>
 4026840:	9c401217 	ldw	r17,72(r19)
 4026844:	8800061e 	bne	r17,zero,4026860 <__pow5mult+0x58>
 4026848:	00003406 	br	402691c <__pow5mult+0x114>
 402684c:	8021d07a 	srai	r16,r16,1
 4026850:	80001526 	beq	r16,zero,40268a8 <__pow5mult+0xa0>
 4026854:	88800017 	ldw	r2,0(r17)
 4026858:	10001c26 	beq	r2,zero,40268cc <__pow5mult+0xc4>
 402685c:	1023883a 	mov	r17,r2
 4026860:	8080004c 	andi	r2,r16,1
 4026864:	103ff926 	beq	r2,zero,402684c <__flash_rwdata_start+0xffff6538>
 4026868:	880d883a 	mov	r6,r17
 402686c:	900b883a 	mov	r5,r18
 4026870:	9809883a 	mov	r4,r19
 4026874:	402657c0 	call	402657c <__multiply>
 4026878:	90001b26 	beq	r18,zero,40268e8 <__pow5mult+0xe0>
 402687c:	91000117 	ldw	r4,4(r18)
 4026880:	98c01317 	ldw	r3,76(r19)
 4026884:	8021d07a 	srai	r16,r16,1
 4026888:	2109883a 	add	r4,r4,r4
 402688c:	2109883a 	add	r4,r4,r4
 4026890:	1907883a 	add	r3,r3,r4
 4026894:	19000017 	ldw	r4,0(r3)
 4026898:	91000015 	stw	r4,0(r18)
 402689c:	1c800015 	stw	r18,0(r3)
 40268a0:	1025883a 	mov	r18,r2
 40268a4:	803feb1e 	bne	r16,zero,4026854 <__flash_rwdata_start+0xffff6540>
 40268a8:	9005883a 	mov	r2,r18
 40268ac:	dfc00517 	ldw	ra,20(sp)
 40268b0:	dd000417 	ldw	r20,16(sp)
 40268b4:	dcc00317 	ldw	r19,12(sp)
 40268b8:	dc800217 	ldw	r18,8(sp)
 40268bc:	dc400117 	ldw	r17,4(sp)
 40268c0:	dc000017 	ldw	r16,0(sp)
 40268c4:	dec00604 	addi	sp,sp,24
 40268c8:	f800283a 	ret
 40268cc:	880d883a 	mov	r6,r17
 40268d0:	880b883a 	mov	r5,r17
 40268d4:	9809883a 	mov	r4,r19
 40268d8:	402657c0 	call	402657c <__multiply>
 40268dc:	88800015 	stw	r2,0(r17)
 40268e0:	10000015 	stw	zero,0(r2)
 40268e4:	003fdd06 	br	402685c <__flash_rwdata_start+0xffff6548>
 40268e8:	1025883a 	mov	r18,r2
 40268ec:	003fd706 	br	402684c <__flash_rwdata_start+0xffff6538>
 40268f0:	10bfffc4 	addi	r2,r2,-1
 40268f4:	1085883a 	add	r2,r2,r2
 40268f8:	00c00034 	movhi	r3,0
 40268fc:	18c03304 	addi	r3,r3,204
 4026900:	1085883a 	add	r2,r2,r2
 4026904:	1885883a 	add	r2,r3,r2
 4026908:	11800017 	ldw	r6,0(r2)
 402690c:	000f883a 	mov	r7,zero
 4026910:	40261dc0 	call	40261dc <__multadd>
 4026914:	1025883a 	mov	r18,r2
 4026918:	003fc706 	br	4026838 <__flash_rwdata_start+0xffff6524>
 402691c:	05000044 	movi	r20,1
 4026920:	a00b883a 	mov	r5,r20
 4026924:	9809883a 	mov	r4,r19
 4026928:	402610c0 	call	402610c <_Balloc>
 402692c:	1023883a 	mov	r17,r2
 4026930:	00809c44 	movi	r2,625
 4026934:	88800515 	stw	r2,20(r17)
 4026938:	8d000415 	stw	r20,16(r17)
 402693c:	9c401215 	stw	r17,72(r19)
 4026940:	88000015 	stw	zero,0(r17)
 4026944:	003fc606 	br	4026860 <__flash_rwdata_start+0xffff654c>

04026948 <__lshift>:
 4026948:	defff904 	addi	sp,sp,-28
 402694c:	dd400515 	stw	r21,20(sp)
 4026950:	dcc00315 	stw	r19,12(sp)
 4026954:	302bd17a 	srai	r21,r6,5
 4026958:	2cc00417 	ldw	r19,16(r5)
 402695c:	28800217 	ldw	r2,8(r5)
 4026960:	dd000415 	stw	r20,16(sp)
 4026964:	ace7883a 	add	r19,r21,r19
 4026968:	dc800215 	stw	r18,8(sp)
 402696c:	dc400115 	stw	r17,4(sp)
 4026970:	dc000015 	stw	r16,0(sp)
 4026974:	dfc00615 	stw	ra,24(sp)
 4026978:	9c000044 	addi	r16,r19,1
 402697c:	2823883a 	mov	r17,r5
 4026980:	3029883a 	mov	r20,r6
 4026984:	2025883a 	mov	r18,r4
 4026988:	29400117 	ldw	r5,4(r5)
 402698c:	1400030e 	bge	r2,r16,402699c <__lshift+0x54>
 4026990:	1085883a 	add	r2,r2,r2
 4026994:	29400044 	addi	r5,r5,1
 4026998:	143ffd16 	blt	r2,r16,4026990 <__flash_rwdata_start+0xffff667c>
 402699c:	9009883a 	mov	r4,r18
 40269a0:	402610c0 	call	402610c <_Balloc>
 40269a4:	10c00504 	addi	r3,r2,20
 40269a8:	0540070e 	bge	zero,r21,40269c8 <__lshift+0x80>
 40269ac:	ad6b883a 	add	r21,r21,r21
 40269b0:	ad6b883a 	add	r21,r21,r21
 40269b4:	1809883a 	mov	r4,r3
 40269b8:	1d47883a 	add	r3,r3,r21
 40269bc:	20000015 	stw	zero,0(r4)
 40269c0:	21000104 	addi	r4,r4,4
 40269c4:	193ffd1e 	bne	r3,r4,40269bc <__flash_rwdata_start+0xffff66a8>
 40269c8:	8a000417 	ldw	r8,16(r17)
 40269cc:	89000504 	addi	r4,r17,20
 40269d0:	a18007cc 	andi	r6,r20,31
 40269d4:	4211883a 	add	r8,r8,r8
 40269d8:	4211883a 	add	r8,r8,r8
 40269dc:	2211883a 	add	r8,r4,r8
 40269e0:	30002326 	beq	r6,zero,4026a70 <__lshift+0x128>
 40269e4:	02400804 	movi	r9,32
 40269e8:	4993c83a 	sub	r9,r9,r6
 40269ec:	000b883a 	mov	r5,zero
 40269f0:	21c00017 	ldw	r7,0(r4)
 40269f4:	1815883a 	mov	r10,r3
 40269f8:	18c00104 	addi	r3,r3,4
 40269fc:	398e983a 	sll	r7,r7,r6
 4026a00:	21000104 	addi	r4,r4,4
 4026a04:	394ab03a 	or	r5,r7,r5
 4026a08:	197fff15 	stw	r5,-4(r3)
 4026a0c:	217fff17 	ldw	r5,-4(r4)
 4026a10:	2a4ad83a 	srl	r5,r5,r9
 4026a14:	223ff636 	bltu	r4,r8,40269f0 <__flash_rwdata_start+0xffff66dc>
 4026a18:	51400115 	stw	r5,4(r10)
 4026a1c:	28001a1e 	bne	r5,zero,4026a88 <__lshift+0x140>
 4026a20:	843fffc4 	addi	r16,r16,-1
 4026a24:	14000415 	stw	r16,16(r2)
 4026a28:	88000826 	beq	r17,zero,4026a4c <__lshift+0x104>
 4026a2c:	89000117 	ldw	r4,4(r17)
 4026a30:	90c01317 	ldw	r3,76(r18)
 4026a34:	2109883a 	add	r4,r4,r4
 4026a38:	2109883a 	add	r4,r4,r4
 4026a3c:	1907883a 	add	r3,r3,r4
 4026a40:	19000017 	ldw	r4,0(r3)
 4026a44:	89000015 	stw	r4,0(r17)
 4026a48:	1c400015 	stw	r17,0(r3)
 4026a4c:	dfc00617 	ldw	ra,24(sp)
 4026a50:	dd400517 	ldw	r21,20(sp)
 4026a54:	dd000417 	ldw	r20,16(sp)
 4026a58:	dcc00317 	ldw	r19,12(sp)
 4026a5c:	dc800217 	ldw	r18,8(sp)
 4026a60:	dc400117 	ldw	r17,4(sp)
 4026a64:	dc000017 	ldw	r16,0(sp)
 4026a68:	dec00704 	addi	sp,sp,28
 4026a6c:	f800283a 	ret
 4026a70:	21400017 	ldw	r5,0(r4)
 4026a74:	18c00104 	addi	r3,r3,4
 4026a78:	21000104 	addi	r4,r4,4
 4026a7c:	197fff15 	stw	r5,-4(r3)
 4026a80:	223ffb36 	bltu	r4,r8,4026a70 <__flash_rwdata_start+0xffff675c>
 4026a84:	003fe606 	br	4026a20 <__flash_rwdata_start+0xffff670c>
 4026a88:	9c000084 	addi	r16,r19,2
 4026a8c:	003fe406 	br	4026a20 <__flash_rwdata_start+0xffff670c>

04026a90 <__mcmp>:
 4026a90:	20800417 	ldw	r2,16(r4)
 4026a94:	28c00417 	ldw	r3,16(r5)
 4026a98:	10c5c83a 	sub	r2,r2,r3
 4026a9c:	1000111e 	bne	r2,zero,4026ae4 <__mcmp+0x54>
 4026aa0:	18c7883a 	add	r3,r3,r3
 4026aa4:	18c7883a 	add	r3,r3,r3
 4026aa8:	21000504 	addi	r4,r4,20
 4026aac:	29400504 	addi	r5,r5,20
 4026ab0:	20c5883a 	add	r2,r4,r3
 4026ab4:	28cb883a 	add	r5,r5,r3
 4026ab8:	00000106 	br	4026ac0 <__mcmp+0x30>
 4026abc:	20800a2e 	bgeu	r4,r2,4026ae8 <__mcmp+0x58>
 4026ac0:	10bfff04 	addi	r2,r2,-4
 4026ac4:	297fff04 	addi	r5,r5,-4
 4026ac8:	11800017 	ldw	r6,0(r2)
 4026acc:	28c00017 	ldw	r3,0(r5)
 4026ad0:	30fffa26 	beq	r6,r3,4026abc <__flash_rwdata_start+0xffff67a8>
 4026ad4:	30c00236 	bltu	r6,r3,4026ae0 <__mcmp+0x50>
 4026ad8:	00800044 	movi	r2,1
 4026adc:	f800283a 	ret
 4026ae0:	00bfffc4 	movi	r2,-1
 4026ae4:	f800283a 	ret
 4026ae8:	0005883a 	mov	r2,zero
 4026aec:	f800283a 	ret

04026af0 <__mdiff>:
 4026af0:	28c00417 	ldw	r3,16(r5)
 4026af4:	30800417 	ldw	r2,16(r6)
 4026af8:	defffa04 	addi	sp,sp,-24
 4026afc:	dcc00315 	stw	r19,12(sp)
 4026b00:	dc800215 	stw	r18,8(sp)
 4026b04:	dfc00515 	stw	ra,20(sp)
 4026b08:	dd000415 	stw	r20,16(sp)
 4026b0c:	dc400115 	stw	r17,4(sp)
 4026b10:	dc000015 	stw	r16,0(sp)
 4026b14:	1887c83a 	sub	r3,r3,r2
 4026b18:	2825883a 	mov	r18,r5
 4026b1c:	3027883a 	mov	r19,r6
 4026b20:	1800141e 	bne	r3,zero,4026b74 <__mdiff+0x84>
 4026b24:	1085883a 	add	r2,r2,r2
 4026b28:	1085883a 	add	r2,r2,r2
 4026b2c:	2a000504 	addi	r8,r5,20
 4026b30:	34000504 	addi	r16,r6,20
 4026b34:	4087883a 	add	r3,r8,r2
 4026b38:	8085883a 	add	r2,r16,r2
 4026b3c:	00000106 	br	4026b44 <__mdiff+0x54>
 4026b40:	40c0592e 	bgeu	r8,r3,4026ca8 <__mdiff+0x1b8>
 4026b44:	18ffff04 	addi	r3,r3,-4
 4026b48:	10bfff04 	addi	r2,r2,-4
 4026b4c:	19c00017 	ldw	r7,0(r3)
 4026b50:	11400017 	ldw	r5,0(r2)
 4026b54:	397ffa26 	beq	r7,r5,4026b40 <__flash_rwdata_start+0xffff682c>
 4026b58:	3940592e 	bgeu	r7,r5,4026cc0 <__mdiff+0x1d0>
 4026b5c:	9005883a 	mov	r2,r18
 4026b60:	4023883a 	mov	r17,r8
 4026b64:	9825883a 	mov	r18,r19
 4026b68:	05000044 	movi	r20,1
 4026b6c:	1027883a 	mov	r19,r2
 4026b70:	00000406 	br	4026b84 <__mdiff+0x94>
 4026b74:	18005616 	blt	r3,zero,4026cd0 <__mdiff+0x1e0>
 4026b78:	34400504 	addi	r17,r6,20
 4026b7c:	2c000504 	addi	r16,r5,20
 4026b80:	0029883a 	mov	r20,zero
 4026b84:	91400117 	ldw	r5,4(r18)
 4026b88:	402610c0 	call	402610c <_Balloc>
 4026b8c:	92400417 	ldw	r9,16(r18)
 4026b90:	9b000417 	ldw	r12,16(r19)
 4026b94:	12c00504 	addi	r11,r2,20
 4026b98:	4a51883a 	add	r8,r9,r9
 4026b9c:	6319883a 	add	r12,r12,r12
 4026ba0:	4211883a 	add	r8,r8,r8
 4026ba4:	6319883a 	add	r12,r12,r12
 4026ba8:	15000315 	stw	r20,12(r2)
 4026bac:	8211883a 	add	r8,r16,r8
 4026bb0:	8b19883a 	add	r12,r17,r12
 4026bb4:	0007883a 	mov	r3,zero
 4026bb8:	81400017 	ldw	r5,0(r16)
 4026bbc:	89c00017 	ldw	r7,0(r17)
 4026bc0:	59800104 	addi	r6,r11,4
 4026bc4:	293fffcc 	andi	r4,r5,65535
 4026bc8:	20c7883a 	add	r3,r4,r3
 4026bcc:	393fffcc 	andi	r4,r7,65535
 4026bd0:	1909c83a 	sub	r4,r3,r4
 4026bd4:	280ad43a 	srli	r5,r5,16
 4026bd8:	380ed43a 	srli	r7,r7,16
 4026bdc:	2007d43a 	srai	r3,r4,16
 4026be0:	213fffcc 	andi	r4,r4,65535
 4026be4:	29cbc83a 	sub	r5,r5,r7
 4026be8:	28c7883a 	add	r3,r5,r3
 4026bec:	180a943a 	slli	r5,r3,16
 4026bf0:	8c400104 	addi	r17,r17,4
 4026bf4:	84000104 	addi	r16,r16,4
 4026bf8:	2908b03a 	or	r4,r5,r4
 4026bfc:	59000015 	stw	r4,0(r11)
 4026c00:	1807d43a 	srai	r3,r3,16
 4026c04:	3015883a 	mov	r10,r6
 4026c08:	3017883a 	mov	r11,r6
 4026c0c:	8b3fea36 	bltu	r17,r12,4026bb8 <__flash_rwdata_start+0xffff68a4>
 4026c10:	8200162e 	bgeu	r16,r8,4026c6c <__mdiff+0x17c>
 4026c14:	8017883a 	mov	r11,r16
 4026c18:	59400017 	ldw	r5,0(r11)
 4026c1c:	31800104 	addi	r6,r6,4
 4026c20:	5ac00104 	addi	r11,r11,4
 4026c24:	293fffcc 	andi	r4,r5,65535
 4026c28:	20c7883a 	add	r3,r4,r3
 4026c2c:	280ed43a 	srli	r7,r5,16
 4026c30:	180bd43a 	srai	r5,r3,16
 4026c34:	193fffcc 	andi	r4,r3,65535
 4026c38:	3947883a 	add	r3,r7,r5
 4026c3c:	180a943a 	slli	r5,r3,16
 4026c40:	1807d43a 	srai	r3,r3,16
 4026c44:	2908b03a 	or	r4,r5,r4
 4026c48:	313fff15 	stw	r4,-4(r6)
 4026c4c:	5a3ff236 	bltu	r11,r8,4026c18 <__flash_rwdata_start+0xffff6904>
 4026c50:	0406303a 	nor	r3,zero,r16
 4026c54:	1a07883a 	add	r3,r3,r8
 4026c58:	1806d0ba 	srli	r3,r3,2
 4026c5c:	18c00044 	addi	r3,r3,1
 4026c60:	18c7883a 	add	r3,r3,r3
 4026c64:	18c7883a 	add	r3,r3,r3
 4026c68:	50d5883a 	add	r10,r10,r3
 4026c6c:	50ffff04 	addi	r3,r10,-4
 4026c70:	2000041e 	bne	r4,zero,4026c84 <__mdiff+0x194>
 4026c74:	18ffff04 	addi	r3,r3,-4
 4026c78:	19000017 	ldw	r4,0(r3)
 4026c7c:	4a7fffc4 	addi	r9,r9,-1
 4026c80:	203ffc26 	beq	r4,zero,4026c74 <__flash_rwdata_start+0xffff6960>
 4026c84:	12400415 	stw	r9,16(r2)
 4026c88:	dfc00517 	ldw	ra,20(sp)
 4026c8c:	dd000417 	ldw	r20,16(sp)
 4026c90:	dcc00317 	ldw	r19,12(sp)
 4026c94:	dc800217 	ldw	r18,8(sp)
 4026c98:	dc400117 	ldw	r17,4(sp)
 4026c9c:	dc000017 	ldw	r16,0(sp)
 4026ca0:	dec00604 	addi	sp,sp,24
 4026ca4:	f800283a 	ret
 4026ca8:	000b883a 	mov	r5,zero
 4026cac:	402610c0 	call	402610c <_Balloc>
 4026cb0:	00c00044 	movi	r3,1
 4026cb4:	10c00415 	stw	r3,16(r2)
 4026cb8:	10000515 	stw	zero,20(r2)
 4026cbc:	003ff206 	br	4026c88 <__flash_rwdata_start+0xffff6974>
 4026cc0:	8023883a 	mov	r17,r16
 4026cc4:	0029883a 	mov	r20,zero
 4026cc8:	4021883a 	mov	r16,r8
 4026ccc:	003fad06 	br	4026b84 <__flash_rwdata_start+0xffff6870>
 4026cd0:	9005883a 	mov	r2,r18
 4026cd4:	94400504 	addi	r17,r18,20
 4026cd8:	9c000504 	addi	r16,r19,20
 4026cdc:	9825883a 	mov	r18,r19
 4026ce0:	05000044 	movi	r20,1
 4026ce4:	1027883a 	mov	r19,r2
 4026ce8:	003fa606 	br	4026b84 <__flash_rwdata_start+0xffff6870>

04026cec <__ulp>:
 4026cec:	295ffc2c 	andhi	r5,r5,32752
 4026cf0:	00bf3034 	movhi	r2,64704
 4026cf4:	2887883a 	add	r3,r5,r2
 4026cf8:	00c0020e 	bge	zero,r3,4026d04 <__ulp+0x18>
 4026cfc:	0005883a 	mov	r2,zero
 4026d00:	f800283a 	ret
 4026d04:	00c7c83a 	sub	r3,zero,r3
 4026d08:	1807d53a 	srai	r3,r3,20
 4026d0c:	008004c4 	movi	r2,19
 4026d10:	10c00b0e 	bge	r2,r3,4026d40 <__ulp+0x54>
 4026d14:	18bffb04 	addi	r2,r3,-20
 4026d18:	01000784 	movi	r4,30
 4026d1c:	0007883a 	mov	r3,zero
 4026d20:	20800516 	blt	r4,r2,4026d38 <__ulp+0x4c>
 4026d24:	010007c4 	movi	r4,31
 4026d28:	2089c83a 	sub	r4,r4,r2
 4026d2c:	00800044 	movi	r2,1
 4026d30:	1104983a 	sll	r2,r2,r4
 4026d34:	f800283a 	ret
 4026d38:	00800044 	movi	r2,1
 4026d3c:	f800283a 	ret
 4026d40:	01400234 	movhi	r5,8
 4026d44:	28c7d83a 	sra	r3,r5,r3
 4026d48:	0005883a 	mov	r2,zero
 4026d4c:	f800283a 	ret

04026d50 <__b2d>:
 4026d50:	defffa04 	addi	sp,sp,-24
 4026d54:	dc000015 	stw	r16,0(sp)
 4026d58:	24000417 	ldw	r16,16(r4)
 4026d5c:	dc400115 	stw	r17,4(sp)
 4026d60:	24400504 	addi	r17,r4,20
 4026d64:	8421883a 	add	r16,r16,r16
 4026d68:	8421883a 	add	r16,r16,r16
 4026d6c:	8c21883a 	add	r16,r17,r16
 4026d70:	dc800215 	stw	r18,8(sp)
 4026d74:	84bfff17 	ldw	r18,-4(r16)
 4026d78:	dd000415 	stw	r20,16(sp)
 4026d7c:	dcc00315 	stw	r19,12(sp)
 4026d80:	9009883a 	mov	r4,r18
 4026d84:	2829883a 	mov	r20,r5
 4026d88:	dfc00515 	stw	ra,20(sp)
 4026d8c:	40264280 	call	4026428 <__hi0bits>
 4026d90:	00c00804 	movi	r3,32
 4026d94:	1889c83a 	sub	r4,r3,r2
 4026d98:	a1000015 	stw	r4,0(r20)
 4026d9c:	01000284 	movi	r4,10
 4026da0:	84ffff04 	addi	r19,r16,-4
 4026da4:	20801216 	blt	r4,r2,4026df0 <__b2d+0xa0>
 4026da8:	018002c4 	movi	r6,11
 4026dac:	308dc83a 	sub	r6,r6,r2
 4026db0:	9186d83a 	srl	r3,r18,r6
 4026db4:	18cffc34 	orhi	r3,r3,16368
 4026db8:	8cc0212e 	bgeu	r17,r19,4026e40 <__b2d+0xf0>
 4026dbc:	813ffe17 	ldw	r4,-8(r16)
 4026dc0:	218cd83a 	srl	r6,r4,r6
 4026dc4:	10800544 	addi	r2,r2,21
 4026dc8:	9084983a 	sll	r2,r18,r2
 4026dcc:	1184b03a 	or	r2,r2,r6
 4026dd0:	dfc00517 	ldw	ra,20(sp)
 4026dd4:	dd000417 	ldw	r20,16(sp)
 4026dd8:	dcc00317 	ldw	r19,12(sp)
 4026ddc:	dc800217 	ldw	r18,8(sp)
 4026de0:	dc400117 	ldw	r17,4(sp)
 4026de4:	dc000017 	ldw	r16,0(sp)
 4026de8:	dec00604 	addi	sp,sp,24
 4026dec:	f800283a 	ret
 4026df0:	8cc00f2e 	bgeu	r17,r19,4026e30 <__b2d+0xe0>
 4026df4:	117ffd44 	addi	r5,r2,-11
 4026df8:	80bffe17 	ldw	r2,-8(r16)
 4026dfc:	28000e26 	beq	r5,zero,4026e38 <__b2d+0xe8>
 4026e00:	1949c83a 	sub	r4,r3,r5
 4026e04:	9164983a 	sll	r18,r18,r5
 4026e08:	1106d83a 	srl	r3,r2,r4
 4026e0c:	81bffe04 	addi	r6,r16,-8
 4026e10:	948ffc34 	orhi	r18,r18,16368
 4026e14:	90c6b03a 	or	r3,r18,r3
 4026e18:	89800e2e 	bgeu	r17,r6,4026e54 <__b2d+0x104>
 4026e1c:	81bffd17 	ldw	r6,-12(r16)
 4026e20:	1144983a 	sll	r2,r2,r5
 4026e24:	310ad83a 	srl	r5,r6,r4
 4026e28:	2884b03a 	or	r2,r5,r2
 4026e2c:	003fe806 	br	4026dd0 <__flash_rwdata_start+0xffff6abc>
 4026e30:	10bffd44 	addi	r2,r2,-11
 4026e34:	1000041e 	bne	r2,zero,4026e48 <__b2d+0xf8>
 4026e38:	90cffc34 	orhi	r3,r18,16368
 4026e3c:	003fe406 	br	4026dd0 <__flash_rwdata_start+0xffff6abc>
 4026e40:	000d883a 	mov	r6,zero
 4026e44:	003fdf06 	br	4026dc4 <__flash_rwdata_start+0xffff6ab0>
 4026e48:	90a4983a 	sll	r18,r18,r2
 4026e4c:	0005883a 	mov	r2,zero
 4026e50:	003ff906 	br	4026e38 <__flash_rwdata_start+0xffff6b24>
 4026e54:	1144983a 	sll	r2,r2,r5
 4026e58:	003fdd06 	br	4026dd0 <__flash_rwdata_start+0xffff6abc>

04026e5c <__d2b>:
 4026e5c:	defff804 	addi	sp,sp,-32
 4026e60:	dc000215 	stw	r16,8(sp)
 4026e64:	3021883a 	mov	r16,r6
 4026e68:	dc400315 	stw	r17,12(sp)
 4026e6c:	8022907a 	slli	r17,r16,1
 4026e70:	dd000615 	stw	r20,24(sp)
 4026e74:	2829883a 	mov	r20,r5
 4026e78:	01400044 	movi	r5,1
 4026e7c:	dcc00515 	stw	r19,20(sp)
 4026e80:	dc800415 	stw	r18,16(sp)
 4026e84:	dfc00715 	stw	ra,28(sp)
 4026e88:	3825883a 	mov	r18,r7
 4026e8c:	8822d57a 	srli	r17,r17,21
 4026e90:	402610c0 	call	402610c <_Balloc>
 4026e94:	1027883a 	mov	r19,r2
 4026e98:	00800434 	movhi	r2,16
 4026e9c:	10bfffc4 	addi	r2,r2,-1
 4026ea0:	808c703a 	and	r6,r16,r2
 4026ea4:	88000126 	beq	r17,zero,4026eac <__d2b+0x50>
 4026ea8:	31800434 	orhi	r6,r6,16
 4026eac:	d9800015 	stw	r6,0(sp)
 4026eb0:	a0002426 	beq	r20,zero,4026f44 <__d2b+0xe8>
 4026eb4:	d9000104 	addi	r4,sp,4
 4026eb8:	dd000115 	stw	r20,4(sp)
 4026ebc:	40264900 	call	4026490 <__lo0bits>
 4026ec0:	d8c00017 	ldw	r3,0(sp)
 4026ec4:	10002f1e 	bne	r2,zero,4026f84 <__d2b+0x128>
 4026ec8:	d9000117 	ldw	r4,4(sp)
 4026ecc:	99000515 	stw	r4,20(r19)
 4026ed0:	1821003a 	cmpeq	r16,r3,zero
 4026ed4:	01000084 	movi	r4,2
 4026ed8:	2421c83a 	sub	r16,r4,r16
 4026edc:	98c00615 	stw	r3,24(r19)
 4026ee0:	9c000415 	stw	r16,16(r19)
 4026ee4:	88001f1e 	bne	r17,zero,4026f64 <__d2b+0x108>
 4026ee8:	10bef384 	addi	r2,r2,-1074
 4026eec:	90800015 	stw	r2,0(r18)
 4026ef0:	00900034 	movhi	r2,16384
 4026ef4:	10bfffc4 	addi	r2,r2,-1
 4026ef8:	8085883a 	add	r2,r16,r2
 4026efc:	1085883a 	add	r2,r2,r2
 4026f00:	1085883a 	add	r2,r2,r2
 4026f04:	9885883a 	add	r2,r19,r2
 4026f08:	11000517 	ldw	r4,20(r2)
 4026f0c:	8020917a 	slli	r16,r16,5
 4026f10:	40264280 	call	4026428 <__hi0bits>
 4026f14:	d8c00817 	ldw	r3,32(sp)
 4026f18:	8085c83a 	sub	r2,r16,r2
 4026f1c:	18800015 	stw	r2,0(r3)
 4026f20:	9805883a 	mov	r2,r19
 4026f24:	dfc00717 	ldw	ra,28(sp)
 4026f28:	dd000617 	ldw	r20,24(sp)
 4026f2c:	dcc00517 	ldw	r19,20(sp)
 4026f30:	dc800417 	ldw	r18,16(sp)
 4026f34:	dc400317 	ldw	r17,12(sp)
 4026f38:	dc000217 	ldw	r16,8(sp)
 4026f3c:	dec00804 	addi	sp,sp,32
 4026f40:	f800283a 	ret
 4026f44:	d809883a 	mov	r4,sp
 4026f48:	40264900 	call	4026490 <__lo0bits>
 4026f4c:	d8c00017 	ldw	r3,0(sp)
 4026f50:	04000044 	movi	r16,1
 4026f54:	9c000415 	stw	r16,16(r19)
 4026f58:	98c00515 	stw	r3,20(r19)
 4026f5c:	10800804 	addi	r2,r2,32
 4026f60:	883fe126 	beq	r17,zero,4026ee8 <__flash_rwdata_start+0xffff6bd4>
 4026f64:	00c00d44 	movi	r3,53
 4026f68:	8c7ef344 	addi	r17,r17,-1075
 4026f6c:	88a3883a 	add	r17,r17,r2
 4026f70:	1885c83a 	sub	r2,r3,r2
 4026f74:	d8c00817 	ldw	r3,32(sp)
 4026f78:	94400015 	stw	r17,0(r18)
 4026f7c:	18800015 	stw	r2,0(r3)
 4026f80:	003fe706 	br	4026f20 <__flash_rwdata_start+0xffff6c0c>
 4026f84:	01000804 	movi	r4,32
 4026f88:	2089c83a 	sub	r4,r4,r2
 4026f8c:	1908983a 	sll	r4,r3,r4
 4026f90:	d9400117 	ldw	r5,4(sp)
 4026f94:	1886d83a 	srl	r3,r3,r2
 4026f98:	2148b03a 	or	r4,r4,r5
 4026f9c:	99000515 	stw	r4,20(r19)
 4026fa0:	d8c00015 	stw	r3,0(sp)
 4026fa4:	003fca06 	br	4026ed0 <__flash_rwdata_start+0xffff6bbc>

04026fa8 <__ratio>:
 4026fa8:	defff904 	addi	sp,sp,-28
 4026fac:	dc400315 	stw	r17,12(sp)
 4026fb0:	2823883a 	mov	r17,r5
 4026fb4:	d9400104 	addi	r5,sp,4
 4026fb8:	dfc00615 	stw	ra,24(sp)
 4026fbc:	dcc00515 	stw	r19,20(sp)
 4026fc0:	dc800415 	stw	r18,16(sp)
 4026fc4:	2027883a 	mov	r19,r4
 4026fc8:	dc000215 	stw	r16,8(sp)
 4026fcc:	4026d500 	call	4026d50 <__b2d>
 4026fd0:	d80b883a 	mov	r5,sp
 4026fd4:	8809883a 	mov	r4,r17
 4026fd8:	1025883a 	mov	r18,r2
 4026fdc:	1821883a 	mov	r16,r3
 4026fe0:	4026d500 	call	4026d50 <__b2d>
 4026fe4:	8a000417 	ldw	r8,16(r17)
 4026fe8:	99000417 	ldw	r4,16(r19)
 4026fec:	d9400117 	ldw	r5,4(sp)
 4026ff0:	2209c83a 	sub	r4,r4,r8
 4026ff4:	2010917a 	slli	r8,r4,5
 4026ff8:	d9000017 	ldw	r4,0(sp)
 4026ffc:	2909c83a 	sub	r4,r5,r4
 4027000:	4109883a 	add	r4,r8,r4
 4027004:	01000e0e 	bge	zero,r4,4027040 <__ratio+0x98>
 4027008:	2008953a 	slli	r4,r4,20
 402700c:	2421883a 	add	r16,r4,r16
 4027010:	100d883a 	mov	r6,r2
 4027014:	180f883a 	mov	r7,r3
 4027018:	9009883a 	mov	r4,r18
 402701c:	800b883a 	mov	r5,r16
 4027020:	402b6800 	call	402b680 <__divdf3>
 4027024:	dfc00617 	ldw	ra,24(sp)
 4027028:	dcc00517 	ldw	r19,20(sp)
 402702c:	dc800417 	ldw	r18,16(sp)
 4027030:	dc400317 	ldw	r17,12(sp)
 4027034:	dc000217 	ldw	r16,8(sp)
 4027038:	dec00704 	addi	sp,sp,28
 402703c:	f800283a 	ret
 4027040:	2008953a 	slli	r4,r4,20
 4027044:	1907c83a 	sub	r3,r3,r4
 4027048:	003ff106 	br	4027010 <__flash_rwdata_start+0xffff6cfc>

0402704c <_mprec_log10>:
 402704c:	defffe04 	addi	sp,sp,-8
 4027050:	dc000015 	stw	r16,0(sp)
 4027054:	dfc00115 	stw	ra,4(sp)
 4027058:	008005c4 	movi	r2,23
 402705c:	2021883a 	mov	r16,r4
 4027060:	11000d0e 	bge	r2,r4,4027098 <_mprec_log10+0x4c>
 4027064:	0005883a 	mov	r2,zero
 4027068:	00cffc34 	movhi	r3,16368
 402706c:	843fffc4 	addi	r16,r16,-1
 4027070:	000d883a 	mov	r6,zero
 4027074:	01d00934 	movhi	r7,16420
 4027078:	1009883a 	mov	r4,r2
 402707c:	180b883a 	mov	r5,r3
 4027080:	402c2a80 	call	402c2a8 <__muldf3>
 4027084:	803ff91e 	bne	r16,zero,402706c <__flash_rwdata_start+0xffff6d58>
 4027088:	dfc00117 	ldw	ra,4(sp)
 402708c:	dc000017 	ldw	r16,0(sp)
 4027090:	dec00204 	addi	sp,sp,8
 4027094:	f800283a 	ret
 4027098:	202090fa 	slli	r16,r4,3
 402709c:	00800034 	movhi	r2,0
 40270a0:	10804a04 	addi	r2,r2,296
 40270a4:	1421883a 	add	r16,r2,r16
 40270a8:	80800017 	ldw	r2,0(r16)
 40270ac:	80c00117 	ldw	r3,4(r16)
 40270b0:	dfc00117 	ldw	ra,4(sp)
 40270b4:	dc000017 	ldw	r16,0(sp)
 40270b8:	dec00204 	addi	sp,sp,8
 40270bc:	f800283a 	ret

040270c0 <__copybits>:
 40270c0:	297fffc4 	addi	r5,r5,-1
 40270c4:	280fd17a 	srai	r7,r5,5
 40270c8:	30c00417 	ldw	r3,16(r6)
 40270cc:	30800504 	addi	r2,r6,20
 40270d0:	39c00044 	addi	r7,r7,1
 40270d4:	18c7883a 	add	r3,r3,r3
 40270d8:	39cf883a 	add	r7,r7,r7
 40270dc:	18c7883a 	add	r3,r3,r3
 40270e0:	39cf883a 	add	r7,r7,r7
 40270e4:	10c7883a 	add	r3,r2,r3
 40270e8:	21cf883a 	add	r7,r4,r7
 40270ec:	10c00d2e 	bgeu	r2,r3,4027124 <__copybits+0x64>
 40270f0:	200b883a 	mov	r5,r4
 40270f4:	12000017 	ldw	r8,0(r2)
 40270f8:	29400104 	addi	r5,r5,4
 40270fc:	10800104 	addi	r2,r2,4
 4027100:	2a3fff15 	stw	r8,-4(r5)
 4027104:	10fffb36 	bltu	r2,r3,40270f4 <__flash_rwdata_start+0xffff6de0>
 4027108:	1985c83a 	sub	r2,r3,r6
 402710c:	10bffac4 	addi	r2,r2,-21
 4027110:	1004d0ba 	srli	r2,r2,2
 4027114:	10800044 	addi	r2,r2,1
 4027118:	1085883a 	add	r2,r2,r2
 402711c:	1085883a 	add	r2,r2,r2
 4027120:	2089883a 	add	r4,r4,r2
 4027124:	21c0032e 	bgeu	r4,r7,4027134 <__copybits+0x74>
 4027128:	20000015 	stw	zero,0(r4)
 402712c:	21000104 	addi	r4,r4,4
 4027130:	21fffd36 	bltu	r4,r7,4027128 <__flash_rwdata_start+0xffff6e14>
 4027134:	f800283a 	ret

04027138 <__any_on>:
 4027138:	20c00417 	ldw	r3,16(r4)
 402713c:	2805d17a 	srai	r2,r5,5
 4027140:	21000504 	addi	r4,r4,20
 4027144:	18800d0e 	bge	r3,r2,402717c <__any_on+0x44>
 4027148:	18c7883a 	add	r3,r3,r3
 402714c:	18c7883a 	add	r3,r3,r3
 4027150:	20c7883a 	add	r3,r4,r3
 4027154:	20c0192e 	bgeu	r4,r3,40271bc <__any_on+0x84>
 4027158:	18bfff17 	ldw	r2,-4(r3)
 402715c:	18ffff04 	addi	r3,r3,-4
 4027160:	1000041e 	bne	r2,zero,4027174 <__any_on+0x3c>
 4027164:	20c0142e 	bgeu	r4,r3,40271b8 <__any_on+0x80>
 4027168:	18ffff04 	addi	r3,r3,-4
 402716c:	19400017 	ldw	r5,0(r3)
 4027170:	283ffc26 	beq	r5,zero,4027164 <__flash_rwdata_start+0xffff6e50>
 4027174:	00800044 	movi	r2,1
 4027178:	f800283a 	ret
 402717c:	10c00a0e 	bge	r2,r3,40271a8 <__any_on+0x70>
 4027180:	1085883a 	add	r2,r2,r2
 4027184:	1085883a 	add	r2,r2,r2
 4027188:	294007cc 	andi	r5,r5,31
 402718c:	2087883a 	add	r3,r4,r2
 4027190:	283ff026 	beq	r5,zero,4027154 <__flash_rwdata_start+0xffff6e40>
 4027194:	19800017 	ldw	r6,0(r3)
 4027198:	3144d83a 	srl	r2,r6,r5
 402719c:	114a983a 	sll	r5,r2,r5
 40271a0:	317ff41e 	bne	r6,r5,4027174 <__flash_rwdata_start+0xffff6e60>
 40271a4:	003feb06 	br	4027154 <__flash_rwdata_start+0xffff6e40>
 40271a8:	1085883a 	add	r2,r2,r2
 40271ac:	1085883a 	add	r2,r2,r2
 40271b0:	2087883a 	add	r3,r4,r2
 40271b4:	003fe706 	br	4027154 <__flash_rwdata_start+0xffff6e40>
 40271b8:	f800283a 	ret
 40271bc:	0005883a 	mov	r2,zero
 40271c0:	f800283a 	ret

040271c4 <__fpclassifyd>:
 40271c4:	00a00034 	movhi	r2,32768
 40271c8:	10bfffc4 	addi	r2,r2,-1
 40271cc:	2884703a 	and	r2,r5,r2
 40271d0:	10000726 	beq	r2,zero,40271f0 <__fpclassifyd+0x2c>
 40271d4:	00fffc34 	movhi	r3,65520
 40271d8:	019ff834 	movhi	r6,32736
 40271dc:	28c7883a 	add	r3,r5,r3
 40271e0:	31bfffc4 	addi	r6,r6,-1
 40271e4:	30c00536 	bltu	r6,r3,40271fc <__fpclassifyd+0x38>
 40271e8:	00800104 	movi	r2,4
 40271ec:	f800283a 	ret
 40271f0:	2000021e 	bne	r4,zero,40271fc <__fpclassifyd+0x38>
 40271f4:	00800084 	movi	r2,2
 40271f8:	f800283a 	ret
 40271fc:	00dffc34 	movhi	r3,32752
 4027200:	019ff834 	movhi	r6,32736
 4027204:	28cb883a 	add	r5,r5,r3
 4027208:	31bfffc4 	addi	r6,r6,-1
 402720c:	317ff62e 	bgeu	r6,r5,40271e8 <__flash_rwdata_start+0xffff6ed4>
 4027210:	01400434 	movhi	r5,16
 4027214:	297fffc4 	addi	r5,r5,-1
 4027218:	28800236 	bltu	r5,r2,4027224 <__fpclassifyd+0x60>
 402721c:	008000c4 	movi	r2,3
 4027220:	f800283a 	ret
 4027224:	10c00226 	beq	r2,r3,4027230 <__fpclassifyd+0x6c>
 4027228:	0005883a 	mov	r2,zero
 402722c:	f800283a 	ret
 4027230:	2005003a 	cmpeq	r2,r4,zero
 4027234:	f800283a 	ret

04027238 <_sbrk_r>:
 4027238:	defffd04 	addi	sp,sp,-12
 402723c:	dc000015 	stw	r16,0(sp)
 4027240:	04000034 	movhi	r16,0
 4027244:	dc400115 	stw	r17,4(sp)
 4027248:	8407a104 	addi	r16,r16,7812
 402724c:	2023883a 	mov	r17,r4
 4027250:	2809883a 	mov	r4,r5
 4027254:	dfc00215 	stw	ra,8(sp)
 4027258:	80000015 	stw	zero,0(r16)
 402725c:	402de200 	call	402de20 <sbrk>
 4027260:	00ffffc4 	movi	r3,-1
 4027264:	10c00526 	beq	r2,r3,402727c <_sbrk_r+0x44>
 4027268:	dfc00217 	ldw	ra,8(sp)
 402726c:	dc400117 	ldw	r17,4(sp)
 4027270:	dc000017 	ldw	r16,0(sp)
 4027274:	dec00304 	addi	sp,sp,12
 4027278:	f800283a 	ret
 402727c:	80c00017 	ldw	r3,0(r16)
 4027280:	183ff926 	beq	r3,zero,4027268 <__flash_rwdata_start+0xffff6f54>
 4027284:	88c00015 	stw	r3,0(r17)
 4027288:	003ff706 	br	4027268 <__flash_rwdata_start+0xffff6f54>

0402728c <__sread>:
 402728c:	defffe04 	addi	sp,sp,-8
 4027290:	dc000015 	stw	r16,0(sp)
 4027294:	2821883a 	mov	r16,r5
 4027298:	2940038f 	ldh	r5,14(r5)
 402729c:	dfc00115 	stw	ra,4(sp)
 40272a0:	40298040 	call	4029804 <_read_r>
 40272a4:	10000716 	blt	r2,zero,40272c4 <__sread+0x38>
 40272a8:	80c01417 	ldw	r3,80(r16)
 40272ac:	1887883a 	add	r3,r3,r2
 40272b0:	80c01415 	stw	r3,80(r16)
 40272b4:	dfc00117 	ldw	ra,4(sp)
 40272b8:	dc000017 	ldw	r16,0(sp)
 40272bc:	dec00204 	addi	sp,sp,8
 40272c0:	f800283a 	ret
 40272c4:	80c0030b 	ldhu	r3,12(r16)
 40272c8:	18fbffcc 	andi	r3,r3,61439
 40272cc:	80c0030d 	sth	r3,12(r16)
 40272d0:	dfc00117 	ldw	ra,4(sp)
 40272d4:	dc000017 	ldw	r16,0(sp)
 40272d8:	dec00204 	addi	sp,sp,8
 40272dc:	f800283a 	ret

040272e0 <__seofread>:
 40272e0:	0005883a 	mov	r2,zero
 40272e4:	f800283a 	ret

040272e8 <__swrite>:
 40272e8:	2880030b 	ldhu	r2,12(r5)
 40272ec:	defffb04 	addi	sp,sp,-20
 40272f0:	dcc00315 	stw	r19,12(sp)
 40272f4:	dc800215 	stw	r18,8(sp)
 40272f8:	dc400115 	stw	r17,4(sp)
 40272fc:	dc000015 	stw	r16,0(sp)
 4027300:	dfc00415 	stw	ra,16(sp)
 4027304:	10c0400c 	andi	r3,r2,256
 4027308:	2821883a 	mov	r16,r5
 402730c:	2023883a 	mov	r17,r4
 4027310:	3025883a 	mov	r18,r6
 4027314:	3827883a 	mov	r19,r7
 4027318:	18000526 	beq	r3,zero,4027330 <__swrite+0x48>
 402731c:	2940038f 	ldh	r5,14(r5)
 4027320:	01c00084 	movi	r7,2
 4027324:	000d883a 	mov	r6,zero
 4027328:	40296480 	call	4029648 <_lseek_r>
 402732c:	8080030b 	ldhu	r2,12(r16)
 4027330:	8140038f 	ldh	r5,14(r16)
 4027334:	10bbffcc 	andi	r2,r2,61439
 4027338:	980f883a 	mov	r7,r19
 402733c:	900d883a 	mov	r6,r18
 4027340:	8809883a 	mov	r4,r17
 4027344:	8080030d 	sth	r2,12(r16)
 4027348:	dfc00417 	ldw	ra,16(sp)
 402734c:	dcc00317 	ldw	r19,12(sp)
 4027350:	dc800217 	ldw	r18,8(sp)
 4027354:	dc400117 	ldw	r17,4(sp)
 4027358:	dc000017 	ldw	r16,0(sp)
 402735c:	dec00504 	addi	sp,sp,20
 4027360:	4028c341 	jmpi	4028c34 <_write_r>

04027364 <__sseek>:
 4027364:	defffe04 	addi	sp,sp,-8
 4027368:	dc000015 	stw	r16,0(sp)
 402736c:	2821883a 	mov	r16,r5
 4027370:	2940038f 	ldh	r5,14(r5)
 4027374:	dfc00115 	stw	ra,4(sp)
 4027378:	40296480 	call	4029648 <_lseek_r>
 402737c:	00ffffc4 	movi	r3,-1
 4027380:	10c00826 	beq	r2,r3,40273a4 <__sseek+0x40>
 4027384:	80c0030b 	ldhu	r3,12(r16)
 4027388:	80801415 	stw	r2,80(r16)
 402738c:	18c40014 	ori	r3,r3,4096
 4027390:	80c0030d 	sth	r3,12(r16)
 4027394:	dfc00117 	ldw	ra,4(sp)
 4027398:	dc000017 	ldw	r16,0(sp)
 402739c:	dec00204 	addi	sp,sp,8
 40273a0:	f800283a 	ret
 40273a4:	80c0030b 	ldhu	r3,12(r16)
 40273a8:	18fbffcc 	andi	r3,r3,61439
 40273ac:	80c0030d 	sth	r3,12(r16)
 40273b0:	dfc00117 	ldw	ra,4(sp)
 40273b4:	dc000017 	ldw	r16,0(sp)
 40273b8:	dec00204 	addi	sp,sp,8
 40273bc:	f800283a 	ret

040273c0 <__sclose>:
 40273c0:	2940038f 	ldh	r5,14(r5)
 40273c4:	4028c941 	jmpi	4028c94 <_close_r>

040273c8 <strcmp>:
 40273c8:	2144b03a 	or	r2,r4,r5
 40273cc:	108000cc 	andi	r2,r2,3
 40273d0:	1000171e 	bne	r2,zero,4027430 <strcmp+0x68>
 40273d4:	20800017 	ldw	r2,0(r4)
 40273d8:	28c00017 	ldw	r3,0(r5)
 40273dc:	10c0141e 	bne	r2,r3,4027430 <strcmp+0x68>
 40273e0:	027fbff4 	movhi	r9,65279
 40273e4:	4a7fbfc4 	addi	r9,r9,-257
 40273e8:	0086303a 	nor	r3,zero,r2
 40273ec:	02202074 	movhi	r8,32897
 40273f0:	1245883a 	add	r2,r2,r9
 40273f4:	42202004 	addi	r8,r8,-32640
 40273f8:	10c4703a 	and	r2,r2,r3
 40273fc:	1204703a 	and	r2,r2,r8
 4027400:	10000226 	beq	r2,zero,402740c <strcmp+0x44>
 4027404:	00002306 	br	4027494 <strcmp+0xcc>
 4027408:	1000221e 	bne	r2,zero,4027494 <strcmp+0xcc>
 402740c:	21000104 	addi	r4,r4,4
 4027410:	20c00017 	ldw	r3,0(r4)
 4027414:	29400104 	addi	r5,r5,4
 4027418:	29800017 	ldw	r6,0(r5)
 402741c:	1a4f883a 	add	r7,r3,r9
 4027420:	00c4303a 	nor	r2,zero,r3
 4027424:	3884703a 	and	r2,r7,r2
 4027428:	1204703a 	and	r2,r2,r8
 402742c:	19bff626 	beq	r3,r6,4027408 <__flash_rwdata_start+0xffff70f4>
 4027430:	20800003 	ldbu	r2,0(r4)
 4027434:	10c03fcc 	andi	r3,r2,255
 4027438:	18c0201c 	xori	r3,r3,128
 402743c:	18ffe004 	addi	r3,r3,-128
 4027440:	18000c26 	beq	r3,zero,4027474 <strcmp+0xac>
 4027444:	29800007 	ldb	r6,0(r5)
 4027448:	19800326 	beq	r3,r6,4027458 <strcmp+0x90>
 402744c:	00001306 	br	402749c <strcmp+0xd4>
 4027450:	29800007 	ldb	r6,0(r5)
 4027454:	11800b1e 	bne	r2,r6,4027484 <strcmp+0xbc>
 4027458:	21000044 	addi	r4,r4,1
 402745c:	20c00003 	ldbu	r3,0(r4)
 4027460:	29400044 	addi	r5,r5,1
 4027464:	18803fcc 	andi	r2,r3,255
 4027468:	1080201c 	xori	r2,r2,128
 402746c:	10bfe004 	addi	r2,r2,-128
 4027470:	103ff71e 	bne	r2,zero,4027450 <__flash_rwdata_start+0xffff713c>
 4027474:	0007883a 	mov	r3,zero
 4027478:	28800003 	ldbu	r2,0(r5)
 402747c:	1885c83a 	sub	r2,r3,r2
 4027480:	f800283a 	ret
 4027484:	28800003 	ldbu	r2,0(r5)
 4027488:	18c03fcc 	andi	r3,r3,255
 402748c:	1885c83a 	sub	r2,r3,r2
 4027490:	f800283a 	ret
 4027494:	0005883a 	mov	r2,zero
 4027498:	f800283a 	ret
 402749c:	10c03fcc 	andi	r3,r2,255
 40274a0:	003ff506 	br	4027478 <__flash_rwdata_start+0xffff7164>

040274a4 <strlen>:
 40274a4:	208000cc 	andi	r2,r4,3
 40274a8:	10002026 	beq	r2,zero,402752c <strlen+0x88>
 40274ac:	20800007 	ldb	r2,0(r4)
 40274b0:	10002026 	beq	r2,zero,4027534 <strlen+0x90>
 40274b4:	2005883a 	mov	r2,r4
 40274b8:	00000206 	br	40274c4 <strlen+0x20>
 40274bc:	10c00007 	ldb	r3,0(r2)
 40274c0:	18001826 	beq	r3,zero,4027524 <strlen+0x80>
 40274c4:	10800044 	addi	r2,r2,1
 40274c8:	10c000cc 	andi	r3,r2,3
 40274cc:	183ffb1e 	bne	r3,zero,40274bc <__flash_rwdata_start+0xffff71a8>
 40274d0:	10c00017 	ldw	r3,0(r2)
 40274d4:	01ffbff4 	movhi	r7,65279
 40274d8:	39ffbfc4 	addi	r7,r7,-257
 40274dc:	00ca303a 	nor	r5,zero,r3
 40274e0:	01a02074 	movhi	r6,32897
 40274e4:	19c7883a 	add	r3,r3,r7
 40274e8:	31a02004 	addi	r6,r6,-32640
 40274ec:	1946703a 	and	r3,r3,r5
 40274f0:	1986703a 	and	r3,r3,r6
 40274f4:	1800091e 	bne	r3,zero,402751c <strlen+0x78>
 40274f8:	10800104 	addi	r2,r2,4
 40274fc:	10c00017 	ldw	r3,0(r2)
 4027500:	19cb883a 	add	r5,r3,r7
 4027504:	00c6303a 	nor	r3,zero,r3
 4027508:	28c6703a 	and	r3,r5,r3
 402750c:	1986703a 	and	r3,r3,r6
 4027510:	183ff926 	beq	r3,zero,40274f8 <__flash_rwdata_start+0xffff71e4>
 4027514:	00000106 	br	402751c <strlen+0x78>
 4027518:	10800044 	addi	r2,r2,1
 402751c:	10c00007 	ldb	r3,0(r2)
 4027520:	183ffd1e 	bne	r3,zero,4027518 <__flash_rwdata_start+0xffff7204>
 4027524:	1105c83a 	sub	r2,r2,r4
 4027528:	f800283a 	ret
 402752c:	2005883a 	mov	r2,r4
 4027530:	003fe706 	br	40274d0 <__flash_rwdata_start+0xffff71bc>
 4027534:	0005883a 	mov	r2,zero
 4027538:	f800283a 	ret

0402753c <__sprint_r.part.0>:
 402753c:	28801917 	ldw	r2,100(r5)
 4027540:	defff604 	addi	sp,sp,-40
 4027544:	dd400515 	stw	r21,20(sp)
 4027548:	dfc00915 	stw	ra,36(sp)
 402754c:	df000815 	stw	fp,32(sp)
 4027550:	ddc00715 	stw	r23,28(sp)
 4027554:	dd800615 	stw	r22,24(sp)
 4027558:	dd000415 	stw	r20,16(sp)
 402755c:	dcc00315 	stw	r19,12(sp)
 4027560:	dc800215 	stw	r18,8(sp)
 4027564:	dc400115 	stw	r17,4(sp)
 4027568:	dc000015 	stw	r16,0(sp)
 402756c:	1088000c 	andi	r2,r2,8192
 4027570:	302b883a 	mov	r21,r6
 4027574:	10002e26 	beq	r2,zero,4027630 <__sprint_r.part.0+0xf4>
 4027578:	30800217 	ldw	r2,8(r6)
 402757c:	35800017 	ldw	r22,0(r6)
 4027580:	10002926 	beq	r2,zero,4027628 <__sprint_r.part.0+0xec>
 4027584:	2827883a 	mov	r19,r5
 4027588:	2029883a 	mov	r20,r4
 402758c:	b5c00104 	addi	r23,r22,4
 4027590:	04bfffc4 	movi	r18,-1
 4027594:	bc400017 	ldw	r17,0(r23)
 4027598:	b4000017 	ldw	r16,0(r22)
 402759c:	0039883a 	mov	fp,zero
 40275a0:	8822d0ba 	srli	r17,r17,2
 40275a4:	8800031e 	bne	r17,zero,40275b4 <__sprint_r.part.0+0x78>
 40275a8:	00001806 	br	402760c <__sprint_r.part.0+0xd0>
 40275ac:	84000104 	addi	r16,r16,4
 40275b0:	8f001526 	beq	r17,fp,4027608 <__sprint_r.part.0+0xcc>
 40275b4:	81400017 	ldw	r5,0(r16)
 40275b8:	980d883a 	mov	r6,r19
 40275bc:	a009883a 	mov	r4,r20
 40275c0:	402902c0 	call	402902c <_fputwc_r>
 40275c4:	e7000044 	addi	fp,fp,1
 40275c8:	14bff81e 	bne	r2,r18,40275ac <__flash_rwdata_start+0xffff7298>
 40275cc:	9005883a 	mov	r2,r18
 40275d0:	a8000215 	stw	zero,8(r21)
 40275d4:	a8000115 	stw	zero,4(r21)
 40275d8:	dfc00917 	ldw	ra,36(sp)
 40275dc:	df000817 	ldw	fp,32(sp)
 40275e0:	ddc00717 	ldw	r23,28(sp)
 40275e4:	dd800617 	ldw	r22,24(sp)
 40275e8:	dd400517 	ldw	r21,20(sp)
 40275ec:	dd000417 	ldw	r20,16(sp)
 40275f0:	dcc00317 	ldw	r19,12(sp)
 40275f4:	dc800217 	ldw	r18,8(sp)
 40275f8:	dc400117 	ldw	r17,4(sp)
 40275fc:	dc000017 	ldw	r16,0(sp)
 4027600:	dec00a04 	addi	sp,sp,40
 4027604:	f800283a 	ret
 4027608:	a8800217 	ldw	r2,8(r21)
 402760c:	8c63883a 	add	r17,r17,r17
 4027610:	8c63883a 	add	r17,r17,r17
 4027614:	1445c83a 	sub	r2,r2,r17
 4027618:	a8800215 	stw	r2,8(r21)
 402761c:	b5800204 	addi	r22,r22,8
 4027620:	bdc00204 	addi	r23,r23,8
 4027624:	103fdb1e 	bne	r2,zero,4027594 <__flash_rwdata_start+0xffff7280>
 4027628:	0005883a 	mov	r2,zero
 402762c:	003fe806 	br	40275d0 <__flash_rwdata_start+0xffff72bc>
 4027630:	402912c0 	call	402912c <__sfvwrite_r>
 4027634:	003fe606 	br	40275d0 <__flash_rwdata_start+0xffff72bc>

04027638 <__sprint_r>:
 4027638:	30c00217 	ldw	r3,8(r6)
 402763c:	18000126 	beq	r3,zero,4027644 <__sprint_r+0xc>
 4027640:	402753c1 	jmpi	402753c <__sprint_r.part.0>
 4027644:	30000115 	stw	zero,4(r6)
 4027648:	0005883a 	mov	r2,zero
 402764c:	f800283a 	ret

04027650 <___vfiprintf_internal_r>:
 4027650:	deffca04 	addi	sp,sp,-216
 4027654:	dd403115 	stw	r21,196(sp)
 4027658:	dfc03515 	stw	ra,212(sp)
 402765c:	df003415 	stw	fp,208(sp)
 4027660:	ddc03315 	stw	r23,204(sp)
 4027664:	dd803215 	stw	r22,200(sp)
 4027668:	dd003015 	stw	r20,192(sp)
 402766c:	dcc02f15 	stw	r19,188(sp)
 4027670:	dc802e15 	stw	r18,184(sp)
 4027674:	dc402d15 	stw	r17,180(sp)
 4027678:	dc002c15 	stw	r16,176(sp)
 402767c:	d9002115 	stw	r4,132(sp)
 4027680:	d9402015 	stw	r5,128(sp)
 4027684:	d9c02215 	stw	r7,136(sp)
 4027688:	302b883a 	mov	r21,r6
 402768c:	20000226 	beq	r4,zero,4027698 <___vfiprintf_internal_r+0x48>
 4027690:	20800e17 	ldw	r2,56(r4)
 4027694:	1000cf26 	beq	r2,zero,40279d4 <___vfiprintf_internal_r+0x384>
 4027698:	d8c02017 	ldw	r3,128(sp)
 402769c:	1880030b 	ldhu	r2,12(r3)
 40276a0:	10c8000c 	andi	r3,r2,8192
 40276a4:	1800071e 	bne	r3,zero,40276c4 <___vfiprintf_internal_r+0x74>
 40276a8:	d9402017 	ldw	r5,128(sp)
 40276ac:	00f7ffc4 	movi	r3,-8193
 40276b0:	10880014 	ori	r2,r2,8192
 40276b4:	29001917 	ldw	r4,100(r5)
 40276b8:	2880030d 	sth	r2,12(r5)
 40276bc:	20c6703a 	and	r3,r4,r3
 40276c0:	28c01915 	stw	r3,100(r5)
 40276c4:	10c0020c 	andi	r3,r2,8
 40276c8:	1800a526 	beq	r3,zero,4027960 <___vfiprintf_internal_r+0x310>
 40276cc:	d9002017 	ldw	r4,128(sp)
 40276d0:	20c00417 	ldw	r3,16(r4)
 40276d4:	1800a226 	beq	r3,zero,4027960 <___vfiprintf_internal_r+0x310>
 40276d8:	1080068c 	andi	r2,r2,26
 40276dc:	00c00284 	movi	r3,10
 40276e0:	10c0a826 	beq	r2,r3,4027984 <___vfiprintf_internal_r+0x334>
 40276e4:	d9001a04 	addi	r4,sp,104
 40276e8:	d94019c4 	addi	r5,sp,103
 40276ec:	04800034 	movhi	r18,0
 40276f0:	2145c83a 	sub	r2,r4,r5
 40276f4:	94807c04 	addi	r18,r18,496
 40276f8:	d9001e15 	stw	r4,120(sp)
 40276fc:	d9401f15 	stw	r5,124(sp)
 4027700:	dec01a15 	stw	sp,104(sp)
 4027704:	d8001c15 	stw	zero,112(sp)
 4027708:	d8001b15 	stw	zero,108(sp)
 402770c:	d811883a 	mov	r8,sp
 4027710:	d8002615 	stw	zero,152(sp)
 4027714:	d8002415 	stw	zero,144(sp)
 4027718:	d8802815 	stw	r2,160(sp)
 402771c:	a82d883a 	mov	r22,r21
 4027720:	b0800007 	ldb	r2,0(r22)
 4027724:	10040d26 	beq	r2,zero,402875c <___vfiprintf_internal_r+0x110c>
 4027728:	00c00944 	movi	r3,37
 402772c:	b029883a 	mov	r20,r22
 4027730:	10c0021e 	bne	r2,r3,402773c <___vfiprintf_internal_r+0xec>
 4027734:	00001606 	br	4027790 <___vfiprintf_internal_r+0x140>
 4027738:	10c00326 	beq	r2,r3,4027748 <___vfiprintf_internal_r+0xf8>
 402773c:	a5000044 	addi	r20,r20,1
 4027740:	a0800007 	ldb	r2,0(r20)
 4027744:	103ffc1e 	bne	r2,zero,4027738 <__flash_rwdata_start+0xffff7424>
 4027748:	a5a1c83a 	sub	r16,r20,r22
 402774c:	80001026 	beq	r16,zero,4027790 <___vfiprintf_internal_r+0x140>
 4027750:	d8c01c17 	ldw	r3,112(sp)
 4027754:	d8801b17 	ldw	r2,108(sp)
 4027758:	45800015 	stw	r22,0(r8)
 402775c:	80c7883a 	add	r3,r16,r3
 4027760:	10800044 	addi	r2,r2,1
 4027764:	44000115 	stw	r16,4(r8)
 4027768:	d8c01c15 	stw	r3,112(sp)
 402776c:	d8801b15 	stw	r2,108(sp)
 4027770:	010001c4 	movi	r4,7
 4027774:	2080750e 	bge	r4,r2,402794c <___vfiprintf_internal_r+0x2fc>
 4027778:	1803951e 	bne	r3,zero,40285d0 <___vfiprintf_internal_r+0xf80>
 402777c:	d8c02417 	ldw	r3,144(sp)
 4027780:	d8001b15 	stw	zero,108(sp)
 4027784:	d811883a 	mov	r8,sp
 4027788:	1c07883a 	add	r3,r3,r16
 402778c:	d8c02415 	stw	r3,144(sp)
 4027790:	a0800007 	ldb	r2,0(r20)
 4027794:	1002e026 	beq	r2,zero,4028318 <___vfiprintf_internal_r+0xcc8>
 4027798:	a5800044 	addi	r22,r20,1
 402779c:	a0c00047 	ldb	r3,1(r20)
 40277a0:	d8001d85 	stb	zero,118(sp)
 40277a4:	0027883a 	mov	r19,zero
 40277a8:	d8002305 	stb	zero,140(sp)
 40277ac:	043fffc4 	movi	r16,-1
 40277b0:	d8002515 	stw	zero,148(sp)
 40277b4:	0023883a 	mov	r17,zero
 40277b8:	05001604 	movi	r20,88
 40277bc:	05400244 	movi	r21,9
 40277c0:	402f883a 	mov	r23,r8
 40277c4:	b5800044 	addi	r22,r22,1
 40277c8:	18bff804 	addi	r2,r3,-32
 40277cc:	a0827736 	bltu	r20,r2,40281ac <___vfiprintf_internal_r+0xb5c>
 40277d0:	100490ba 	slli	r2,r2,2
 40277d4:	010100b4 	movhi	r4,1026
 40277d8:	211dfa04 	addi	r4,r4,30696
 40277dc:	1105883a 	add	r2,r2,r4
 40277e0:	10800017 	ldw	r2,0(r2)
 40277e4:	1000683a 	jmp	r2
 40277e8:	04027eac 	andhi	r16,zero,2554
 40277ec:	040281ac 	andhi	r16,zero,2566
 40277f0:	040281ac 	andhi	r16,zero,2566
 40277f4:	04027ec8 	cmpgei	r16,zero,2555
 40277f8:	040281ac 	andhi	r16,zero,2566
 40277fc:	040281ac 	andhi	r16,zero,2566
 4027800:	040281ac 	andhi	r16,zero,2566
 4027804:	040281ac 	andhi	r16,zero,2566
 4027808:	040281ac 	andhi	r16,zero,2566
 402780c:	040281ac 	andhi	r16,zero,2566
 4027810:	040280d0 	cmplti	r16,zero,2563
 4027814:	040280f4 	movhi	r16,2563
 4027818:	040281ac 	andhi	r16,zero,2566
 402781c:	040279ec 	andhi	r16,zero,2535
 4027820:	04028108 	cmpgei	r16,zero,2564
 4027824:	040281ac 	andhi	r16,zero,2566
 4027828:	04027ed4 	movui	r16,2555
 402782c:	04027ee0 	cmpeqi	r16,zero,2555
 4027830:	04027ee0 	cmpeqi	r16,zero,2555
 4027834:	04027ee0 	cmpeqi	r16,zero,2555
 4027838:	04027ee0 	cmpeqi	r16,zero,2555
 402783c:	04027ee0 	cmpeqi	r16,zero,2555
 4027840:	04027ee0 	cmpeqi	r16,zero,2555
 4027844:	04027ee0 	cmpeqi	r16,zero,2555
 4027848:	04027ee0 	cmpeqi	r16,zero,2555
 402784c:	04027ee0 	cmpeqi	r16,zero,2555
 4027850:	040281ac 	andhi	r16,zero,2566
 4027854:	040281ac 	andhi	r16,zero,2566
 4027858:	040281ac 	andhi	r16,zero,2566
 402785c:	040281ac 	andhi	r16,zero,2566
 4027860:	040281ac 	andhi	r16,zero,2566
 4027864:	040281ac 	andhi	r16,zero,2566
 4027868:	040281ac 	andhi	r16,zero,2566
 402786c:	040281ac 	andhi	r16,zero,2566
 4027870:	040281ac 	andhi	r16,zero,2566
 4027874:	040281ac 	andhi	r16,zero,2566
 4027878:	04027f20 	cmpeqi	r16,zero,2556
 402787c:	040281ac 	andhi	r16,zero,2566
 4027880:	040281ac 	andhi	r16,zero,2566
 4027884:	040281ac 	andhi	r16,zero,2566
 4027888:	040281ac 	andhi	r16,zero,2566
 402788c:	040281ac 	andhi	r16,zero,2566
 4027890:	040281ac 	andhi	r16,zero,2566
 4027894:	040281ac 	andhi	r16,zero,2566
 4027898:	040281ac 	andhi	r16,zero,2566
 402789c:	040281ac 	andhi	r16,zero,2566
 40278a0:	040281ac 	andhi	r16,zero,2566
 40278a4:	04027f5c 	xori	r16,zero,2557
 40278a8:	040281ac 	andhi	r16,zero,2566
 40278ac:	040281ac 	andhi	r16,zero,2566
 40278b0:	040281ac 	andhi	r16,zero,2566
 40278b4:	040281ac 	andhi	r16,zero,2566
 40278b8:	040281ac 	andhi	r16,zero,2566
 40278bc:	04027fb8 	rdprs	r16,zero,2558
 40278c0:	040281ac 	andhi	r16,zero,2566
 40278c4:	040281ac 	andhi	r16,zero,2566
 40278c8:	0402802c 	andhi	r16,zero,2560
 40278cc:	040281ac 	andhi	r16,zero,2566
 40278d0:	040281ac 	andhi	r16,zero,2566
 40278d4:	040281ac 	andhi	r16,zero,2566
 40278d8:	040281ac 	andhi	r16,zero,2566
 40278dc:	040281ac 	andhi	r16,zero,2566
 40278e0:	040281ac 	andhi	r16,zero,2566
 40278e4:	040281ac 	andhi	r16,zero,2566
 40278e8:	040281ac 	andhi	r16,zero,2566
 40278ec:	040281ac 	andhi	r16,zero,2566
 40278f0:	040281ac 	andhi	r16,zero,2566
 40278f4:	04027dd4 	movui	r16,2551
 40278f8:	04027e04 	movi	r16,2552
 40278fc:	040281ac 	andhi	r16,zero,2566
 4027900:	040281ac 	andhi	r16,zero,2566
 4027904:	040281ac 	andhi	r16,zero,2566
 4027908:	04028154 	movui	r16,2565
 402790c:	04027e04 	movi	r16,2552
 4027910:	040281ac 	andhi	r16,zero,2566
 4027914:	040281ac 	andhi	r16,zero,2566
 4027918:	04027cac 	andhi	r16,zero,2546
 402791c:	040281ac 	andhi	r16,zero,2566
 4027920:	04027cc0 	call	4027cc <_gp+0x3f89a4>
 4027924:	04027cf8 	rdprs	r16,zero,2547
 4027928:	040279f8 	rdprs	r16,zero,2535
 402792c:	04027ca0 	cmpeqi	r16,zero,2546
 4027930:	040281ac 	andhi	r16,zero,2566
 4027934:	0402806c 	andhi	r16,zero,2561
 4027938:	040281ac 	andhi	r16,zero,2566
 402793c:	040280b8 	rdprs	r16,zero,2562
 4027940:	040281ac 	andhi	r16,zero,2566
 4027944:	040281ac 	andhi	r16,zero,2566
 4027948:	04027d7c 	xorhi	r16,zero,2549
 402794c:	42000204 	addi	r8,r8,8
 4027950:	d8c02417 	ldw	r3,144(sp)
 4027954:	1c07883a 	add	r3,r3,r16
 4027958:	d8c02415 	stw	r3,144(sp)
 402795c:	003f8c06 	br	4027790 <__flash_rwdata_start+0xffff747c>
 4027960:	d9402017 	ldw	r5,128(sp)
 4027964:	d9002117 	ldw	r4,132(sp)
 4027968:	4022cfc0 	call	4022cfc <__swsetup_r>
 402796c:	1003c11e 	bne	r2,zero,4028874 <___vfiprintf_internal_r+0x1224>
 4027970:	d9402017 	ldw	r5,128(sp)
 4027974:	00c00284 	movi	r3,10
 4027978:	2880030b 	ldhu	r2,12(r5)
 402797c:	1080068c 	andi	r2,r2,26
 4027980:	10ff581e 	bne	r2,r3,40276e4 <__flash_rwdata_start+0xffff73d0>
 4027984:	d8c02017 	ldw	r3,128(sp)
 4027988:	1880038f 	ldh	r2,14(r3)
 402798c:	103f5516 	blt	r2,zero,40276e4 <__flash_rwdata_start+0xffff73d0>
 4027990:	d9c02217 	ldw	r7,136(sp)
 4027994:	d9002117 	ldw	r4,132(sp)
 4027998:	a80d883a 	mov	r6,r21
 402799c:	180b883a 	mov	r5,r3
 40279a0:	4028b780 	call	4028b78 <__sbprintf>
 40279a4:	dfc03517 	ldw	ra,212(sp)
 40279a8:	df003417 	ldw	fp,208(sp)
 40279ac:	ddc03317 	ldw	r23,204(sp)
 40279b0:	dd803217 	ldw	r22,200(sp)
 40279b4:	dd403117 	ldw	r21,196(sp)
 40279b8:	dd003017 	ldw	r20,192(sp)
 40279bc:	dcc02f17 	ldw	r19,188(sp)
 40279c0:	dc802e17 	ldw	r18,184(sp)
 40279c4:	dc402d17 	ldw	r17,180(sp)
 40279c8:	dc002c17 	ldw	r16,176(sp)
 40279cc:	dec03604 	addi	sp,sp,216
 40279d0:	f800283a 	ret
 40279d4:	4024d080 	call	4024d08 <__sinit>
 40279d8:	003f2f06 	br	4027698 <__flash_rwdata_start+0xffff7384>
 40279dc:	d8c02517 	ldw	r3,148(sp)
 40279e0:	d8802215 	stw	r2,136(sp)
 40279e4:	00c7c83a 	sub	r3,zero,r3
 40279e8:	d8c02515 	stw	r3,148(sp)
 40279ec:	8c400114 	ori	r17,r17,4
 40279f0:	b0c00007 	ldb	r3,0(r22)
 40279f4:	003f7306 	br	40277c4 <__flash_rwdata_start+0xffff74b0>
 40279f8:	00800c04 	movi	r2,48
 40279fc:	d9402217 	ldw	r5,136(sp)
 4027a00:	d8801d05 	stb	r2,116(sp)
 4027a04:	00801e04 	movi	r2,120
 4027a08:	d8801d45 	stb	r2,117(sp)
 4027a0c:	d8001d85 	stb	zero,118(sp)
 4027a10:	b811883a 	mov	r8,r23
 4027a14:	28c00104 	addi	r3,r5,4
 4027a18:	2cc00017 	ldw	r19,0(r5)
 4027a1c:	0029883a 	mov	r20,zero
 4027a20:	88800094 	ori	r2,r17,2
 4027a24:	80032516 	blt	r16,zero,40286bc <___vfiprintf_internal_r+0x106c>
 4027a28:	00bfdfc4 	movi	r2,-129
 4027a2c:	88a2703a 	and	r17,r17,r2
 4027a30:	d8c02215 	stw	r3,136(sp)
 4027a34:	8c400094 	ori	r17,r17,2
 4027a38:	98032a1e 	bne	r19,zero,40286e4 <___vfiprintf_internal_r+0x1094>
 4027a3c:	00800034 	movhi	r2,0
 4027a40:	10801b04 	addi	r2,r2,108
 4027a44:	d8802615 	stw	r2,152(sp)
 4027a48:	002b883a 	mov	r21,zero
 4027a4c:	8001741e 	bne	r16,zero,4028020 <___vfiprintf_internal_r+0x9d0>
 4027a50:	0021883a 	mov	r16,zero
 4027a54:	0029883a 	mov	r20,zero
 4027a58:	ddc01a04 	addi	r23,sp,104
 4027a5c:	8027883a 	mov	r19,r16
 4027a60:	8500010e 	bge	r16,r20,4027a68 <___vfiprintf_internal_r+0x418>
 4027a64:	a027883a 	mov	r19,r20
 4027a68:	ad403fcc 	andi	r21,r21,255
 4027a6c:	ad40201c 	xori	r21,r21,128
 4027a70:	ad7fe004 	addi	r21,r21,-128
 4027a74:	a8000126 	beq	r21,zero,4027a7c <___vfiprintf_internal_r+0x42c>
 4027a78:	9cc00044 	addi	r19,r19,1
 4027a7c:	89c0008c 	andi	r7,r17,2
 4027a80:	38000126 	beq	r7,zero,4027a88 <___vfiprintf_internal_r+0x438>
 4027a84:	9cc00084 	addi	r19,r19,2
 4027a88:	88c0210c 	andi	r3,r17,132
 4027a8c:	1801dd1e 	bne	r3,zero,4028204 <___vfiprintf_internal_r+0xbb4>
 4027a90:	d9402517 	ldw	r5,148(sp)
 4027a94:	2cebc83a 	sub	r21,r5,r19
 4027a98:	0541da0e 	bge	zero,r21,4028204 <___vfiprintf_internal_r+0xbb4>
 4027a9c:	07000404 	movi	fp,16
 4027aa0:	d8801c17 	ldw	r2,112(sp)
 4027aa4:	e543be0e 	bge	fp,r21,40289a0 <___vfiprintf_internal_r+0x1350>
 4027aa8:	01400034 	movhi	r5,0
 4027aac:	29408004 	addi	r5,r5,512
 4027ab0:	dc002715 	stw	r16,156(sp)
 4027ab4:	d9801b17 	ldw	r6,108(sp)
 4027ab8:	a821883a 	mov	r16,r21
 4027abc:	d9402315 	stw	r5,140(sp)
 4027ac0:	028001c4 	movi	r10,7
 4027ac4:	d9c02915 	stw	r7,164(sp)
 4027ac8:	182b883a 	mov	r21,r3
 4027acc:	00000506 	br	4027ae4 <___vfiprintf_internal_r+0x494>
 4027ad0:	31000084 	addi	r4,r6,2
 4027ad4:	42000204 	addi	r8,r8,8
 4027ad8:	180d883a 	mov	r6,r3
 4027adc:	843ffc04 	addi	r16,r16,-16
 4027ae0:	e4000f0e 	bge	fp,r16,4027b20 <___vfiprintf_internal_r+0x4d0>
 4027ae4:	01000034 	movhi	r4,0
 4027ae8:	10800404 	addi	r2,r2,16
 4027aec:	30c00044 	addi	r3,r6,1
 4027af0:	21008004 	addi	r4,r4,512
 4027af4:	41000015 	stw	r4,0(r8)
 4027af8:	47000115 	stw	fp,4(r8)
 4027afc:	d8801c15 	stw	r2,112(sp)
 4027b00:	d8c01b15 	stw	r3,108(sp)
 4027b04:	50fff20e 	bge	r10,r3,4027ad0 <__flash_rwdata_start+0xffff77bc>
 4027b08:	1001b21e 	bne	r2,zero,40281d4 <___vfiprintf_internal_r+0xb84>
 4027b0c:	843ffc04 	addi	r16,r16,-16
 4027b10:	000d883a 	mov	r6,zero
 4027b14:	01000044 	movi	r4,1
 4027b18:	d811883a 	mov	r8,sp
 4027b1c:	e43ff116 	blt	fp,r16,4027ae4 <__flash_rwdata_start+0xffff77d0>
 4027b20:	a807883a 	mov	r3,r21
 4027b24:	d9c02917 	ldw	r7,164(sp)
 4027b28:	802b883a 	mov	r21,r16
 4027b2c:	dc002717 	ldw	r16,156(sp)
 4027b30:	d9402317 	ldw	r5,140(sp)
 4027b34:	a885883a 	add	r2,r21,r2
 4027b38:	45400115 	stw	r21,4(r8)
 4027b3c:	41400015 	stw	r5,0(r8)
 4027b40:	d8801c15 	stw	r2,112(sp)
 4027b44:	d9001b15 	stw	r4,108(sp)
 4027b48:	014001c4 	movi	r5,7
 4027b4c:	29026216 	blt	r5,r4,40284d8 <___vfiprintf_internal_r+0xe88>
 4027b50:	d9801d87 	ldb	r6,118(sp)
 4027b54:	42000204 	addi	r8,r8,8
 4027b58:	21400044 	addi	r5,r4,1
 4027b5c:	3001ae1e 	bne	r6,zero,4028218 <___vfiprintf_internal_r+0xbc8>
 4027b60:	3801bb26 	beq	r7,zero,4028250 <___vfiprintf_internal_r+0xc00>
 4027b64:	d9001d04 	addi	r4,sp,116
 4027b68:	10800084 	addi	r2,r2,2
 4027b6c:	41000015 	stw	r4,0(r8)
 4027b70:	01000084 	movi	r4,2
 4027b74:	41000115 	stw	r4,4(r8)
 4027b78:	d8801c15 	stw	r2,112(sp)
 4027b7c:	d9401b15 	stw	r5,108(sp)
 4027b80:	010001c4 	movi	r4,7
 4027b84:	2142680e 	bge	r4,r5,4028528 <___vfiprintf_internal_r+0xed8>
 4027b88:	1002b11e 	bne	r2,zero,4028650 <___vfiprintf_internal_r+0x1000>
 4027b8c:	01802004 	movi	r6,128
 4027b90:	01400044 	movi	r5,1
 4027b94:	0009883a 	mov	r4,zero
 4027b98:	d811883a 	mov	r8,sp
 4027b9c:	1981ae1e 	bne	r3,r6,4028258 <___vfiprintf_internal_r+0xc08>
 4027ba0:	d8c02517 	ldw	r3,148(sp)
 4027ba4:	1cf9c83a 	sub	fp,r3,r19
 4027ba8:	0701ab0e 	bge	zero,fp,4028258 <___vfiprintf_internal_r+0xc08>
 4027bac:	05400404 	movi	r21,16
 4027bb0:	af03a90e 	bge	r21,fp,4028a58 <___vfiprintf_internal_r+0x1408>
 4027bb4:	01400034 	movhi	r5,0
 4027bb8:	29407c04 	addi	r5,r5,496
 4027bbc:	d9402315 	stw	r5,140(sp)
 4027bc0:	01c001c4 	movi	r7,7
 4027bc4:	00000506 	br	4027bdc <___vfiprintf_internal_r+0x58c>
 4027bc8:	21800084 	addi	r6,r4,2
 4027bcc:	42000204 	addi	r8,r8,8
 4027bd0:	1809883a 	mov	r4,r3
 4027bd4:	e73ffc04 	addi	fp,fp,-16
 4027bd8:	af000d0e 	bge	r21,fp,4027c10 <___vfiprintf_internal_r+0x5c0>
 4027bdc:	10800404 	addi	r2,r2,16
 4027be0:	20c00044 	addi	r3,r4,1
 4027be4:	44800015 	stw	r18,0(r8)
 4027be8:	45400115 	stw	r21,4(r8)
 4027bec:	d8801c15 	stw	r2,112(sp)
 4027bf0:	d8c01b15 	stw	r3,108(sp)
 4027bf4:	38fff40e 	bge	r7,r3,4027bc8 <__flash_rwdata_start+0xffff78b4>
 4027bf8:	10022b1e 	bne	r2,zero,40284a8 <___vfiprintf_internal_r+0xe58>
 4027bfc:	e73ffc04 	addi	fp,fp,-16
 4027c00:	01800044 	movi	r6,1
 4027c04:	0009883a 	mov	r4,zero
 4027c08:	d811883a 	mov	r8,sp
 4027c0c:	af3ff316 	blt	r21,fp,4027bdc <__flash_rwdata_start+0xffff78c8>
 4027c10:	d8c02317 	ldw	r3,140(sp)
 4027c14:	1705883a 	add	r2,r2,fp
 4027c18:	47000115 	stw	fp,4(r8)
 4027c1c:	40c00015 	stw	r3,0(r8)
 4027c20:	d8801c15 	stw	r2,112(sp)
 4027c24:	d9801b15 	stw	r6,108(sp)
 4027c28:	00c001c4 	movi	r3,7
 4027c2c:	19829416 	blt	r3,r6,4028680 <___vfiprintf_internal_r+0x1030>
 4027c30:	8521c83a 	sub	r16,r16,r20
 4027c34:	42000204 	addi	r8,r8,8
 4027c38:	31400044 	addi	r5,r6,1
 4027c3c:	3009883a 	mov	r4,r6
 4027c40:	04018716 	blt	zero,r16,4028260 <___vfiprintf_internal_r+0xc10>
 4027c44:	a085883a 	add	r2,r20,r2
 4027c48:	45c00015 	stw	r23,0(r8)
 4027c4c:	45000115 	stw	r20,4(r8)
 4027c50:	d8801c15 	stw	r2,112(sp)
 4027c54:	d9401b15 	stw	r5,108(sp)
 4027c58:	00c001c4 	movi	r3,7
 4027c5c:	1941c20e 	bge	r3,r5,4028368 <___vfiprintf_internal_r+0xd18>
 4027c60:	1002531e 	bne	r2,zero,40285b0 <___vfiprintf_internal_r+0xf60>
 4027c64:	d8001b15 	stw	zero,108(sp)
 4027c68:	8c40010c 	andi	r17,r17,4
 4027c6c:	88023226 	beq	r17,zero,4028538 <___vfiprintf_internal_r+0xee8>
 4027c70:	d9002517 	ldw	r4,148(sp)
 4027c74:	24e3c83a 	sub	r17,r4,r19
 4027c78:	04432916 	blt	zero,r17,4028920 <___vfiprintf_internal_r+0x12d0>
 4027c7c:	d8802517 	ldw	r2,148(sp)
 4027c80:	14c0010e 	bge	r2,r19,4027c88 <___vfiprintf_internal_r+0x638>
 4027c84:	9805883a 	mov	r2,r19
 4027c88:	d8c02417 	ldw	r3,144(sp)
 4027c8c:	1887883a 	add	r3,r3,r2
 4027c90:	d8c02415 	stw	r3,144(sp)
 4027c94:	d8001b15 	stw	zero,108(sp)
 4027c98:	d811883a 	mov	r8,sp
 4027c9c:	003ea006 	br	4027720 <__flash_rwdata_start+0xffff740c>
 4027ca0:	8c400814 	ori	r17,r17,32
 4027ca4:	b0c00007 	ldb	r3,0(r22)
 4027ca8:	003ec606 	br	40277c4 <__flash_rwdata_start+0xffff74b0>
 4027cac:	b0c00007 	ldb	r3,0(r22)
 4027cb0:	00801b04 	movi	r2,108
 4027cb4:	18832026 	beq	r3,r2,4028938 <___vfiprintf_internal_r+0x12e8>
 4027cb8:	8c400414 	ori	r17,r17,16
 4027cbc:	003ec106 	br	40277c4 <__flash_rwdata_start+0xffff74b0>
 4027cc0:	9cc03fcc 	andi	r19,r19,255
 4027cc4:	b811883a 	mov	r8,r23
 4027cc8:	9803981e 	bne	r19,zero,4028b2c <___vfiprintf_internal_r+0x14dc>
 4027ccc:	8880080c 	andi	r2,r17,32
 4027cd0:	1002be26 	beq	r2,zero,40287cc <___vfiprintf_internal_r+0x117c>
 4027cd4:	d9002217 	ldw	r4,136(sp)
 4027cd8:	d9402417 	ldw	r5,144(sp)
 4027cdc:	20800017 	ldw	r2,0(r4)
 4027ce0:	2807d7fa 	srai	r3,r5,31
 4027ce4:	21000104 	addi	r4,r4,4
 4027ce8:	d9002215 	stw	r4,136(sp)
 4027cec:	11400015 	stw	r5,0(r2)
 4027cf0:	10c00115 	stw	r3,4(r2)
 4027cf4:	003e8a06 	br	4027720 <__flash_rwdata_start+0xffff740c>
 4027cf8:	9cc03fcc 	andi	r19,r19,255
 4027cfc:	b811883a 	mov	r8,r23
 4027d00:	9803871e 	bne	r19,zero,4028b20 <___vfiprintf_internal_r+0x14d0>
 4027d04:	8880080c 	andi	r2,r17,32
 4027d08:	10009a26 	beq	r2,zero,4027f74 <___vfiprintf_internal_r+0x924>
 4027d0c:	d9002217 	ldw	r4,136(sp)
 4027d10:	d8001d85 	stb	zero,118(sp)
 4027d14:	20800204 	addi	r2,r4,8
 4027d18:	24c00017 	ldw	r19,0(r4)
 4027d1c:	25000117 	ldw	r20,4(r4)
 4027d20:	8002a416 	blt	r16,zero,40287b4 <___vfiprintf_internal_r+0x1164>
 4027d24:	013fdfc4 	movi	r4,-129
 4027d28:	9d06b03a 	or	r3,r19,r20
 4027d2c:	d8802215 	stw	r2,136(sp)
 4027d30:	8922703a 	and	r17,r17,r4
 4027d34:	18009b26 	beq	r3,zero,4027fa4 <___vfiprintf_internal_r+0x954>
 4027d38:	002b883a 	mov	r21,zero
 4027d3c:	ddc01a04 	addi	r23,sp,104
 4027d40:	9806d0fa 	srli	r3,r19,3
 4027d44:	a008977a 	slli	r4,r20,29
 4027d48:	a028d0fa 	srli	r20,r20,3
 4027d4c:	9cc001cc 	andi	r19,r19,7
 4027d50:	98800c04 	addi	r2,r19,48
 4027d54:	bdffffc4 	addi	r23,r23,-1
 4027d58:	20e6b03a 	or	r19,r4,r3
 4027d5c:	b8800005 	stb	r2,0(r23)
 4027d60:	9d06b03a 	or	r3,r19,r20
 4027d64:	183ff61e 	bne	r3,zero,4027d40 <__flash_rwdata_start+0xffff7a2c>
 4027d68:	88c0004c 	andi	r3,r17,1
 4027d6c:	18021f1e 	bne	r3,zero,40285ec <___vfiprintf_internal_r+0xf9c>
 4027d70:	d9401e17 	ldw	r5,120(sp)
 4027d74:	2de9c83a 	sub	r20,r5,r23
 4027d78:	003f3806 	br	4027a5c <__flash_rwdata_start+0xffff7748>
 4027d7c:	9cc03fcc 	andi	r19,r19,255
 4027d80:	b811883a 	mov	r8,r23
 4027d84:	98034f1e 	bne	r19,zero,4028ac4 <___vfiprintf_internal_r+0x1474>
 4027d88:	00800034 	movhi	r2,0
 4027d8c:	10801b04 	addi	r2,r2,108
 4027d90:	d8802615 	stw	r2,152(sp)
 4027d94:	8880080c 	andi	r2,r17,32
 4027d98:	1000ac26 	beq	r2,zero,402804c <___vfiprintf_internal_r+0x9fc>
 4027d9c:	d9002217 	ldw	r4,136(sp)
 4027da0:	24c00017 	ldw	r19,0(r4)
 4027da4:	25000117 	ldw	r20,4(r4)
 4027da8:	21000204 	addi	r4,r4,8
 4027dac:	d9002215 	stw	r4,136(sp)
 4027db0:	8880004c 	andi	r2,r17,1
 4027db4:	1001e726 	beq	r2,zero,4028554 <___vfiprintf_internal_r+0xf04>
 4027db8:	9d04b03a 	or	r2,r19,r20
 4027dbc:	10025c1e 	bne	r2,zero,4028730 <___vfiprintf_internal_r+0x10e0>
 4027dc0:	d8001d85 	stb	zero,118(sp)
 4027dc4:	80024416 	blt	r16,zero,40286d8 <___vfiprintf_internal_r+0x1088>
 4027dc8:	00bfdfc4 	movi	r2,-129
 4027dcc:	88a2703a 	and	r17,r17,r2
 4027dd0:	003f1d06 	br	4027a48 <__flash_rwdata_start+0xffff7734>
 4027dd4:	d8c02217 	ldw	r3,136(sp)
 4027dd8:	04c00044 	movi	r19,1
 4027ddc:	b811883a 	mov	r8,r23
 4027de0:	18800017 	ldw	r2,0(r3)
 4027de4:	18c00104 	addi	r3,r3,4
 4027de8:	d8001d85 	stb	zero,118(sp)
 4027dec:	d8801005 	stb	r2,64(sp)
 4027df0:	d8c02215 	stw	r3,136(sp)
 4027df4:	9829883a 	mov	r20,r19
 4027df8:	ddc01004 	addi	r23,sp,64
 4027dfc:	0021883a 	mov	r16,zero
 4027e00:	003f1e06 	br	4027a7c <__flash_rwdata_start+0xffff7768>
 4027e04:	9cc03fcc 	andi	r19,r19,255
 4027e08:	b811883a 	mov	r8,r23
 4027e0c:	9803331e 	bne	r19,zero,4028adc <___vfiprintf_internal_r+0x148c>
 4027e10:	8880080c 	andi	r2,r17,32
 4027e14:	10004826 	beq	r2,zero,4027f38 <___vfiprintf_internal_r+0x8e8>
 4027e18:	d9002217 	ldw	r4,136(sp)
 4027e1c:	20800117 	ldw	r2,4(r4)
 4027e20:	24c00017 	ldw	r19,0(r4)
 4027e24:	21000204 	addi	r4,r4,8
 4027e28:	d9002215 	stw	r4,136(sp)
 4027e2c:	1029883a 	mov	r20,r2
 4027e30:	10024c16 	blt	r2,zero,4028764 <___vfiprintf_internal_r+0x1114>
 4027e34:	dd401d83 	ldbu	r21,118(sp)
 4027e38:	80007116 	blt	r16,zero,4028000 <___vfiprintf_internal_r+0x9b0>
 4027e3c:	00ffdfc4 	movi	r3,-129
 4027e40:	9d04b03a 	or	r2,r19,r20
 4027e44:	88e2703a 	and	r17,r17,r3
 4027e48:	1000d126 	beq	r2,zero,4028190 <___vfiprintf_internal_r+0xb40>
 4027e4c:	a0023526 	beq	r20,zero,4028724 <___vfiprintf_internal_r+0x10d4>
 4027e50:	ddc01a04 	addi	r23,sp,104
 4027e54:	4039883a 	mov	fp,r8
 4027e58:	9809883a 	mov	r4,r19
 4027e5c:	a00b883a 	mov	r5,r20
 4027e60:	01800284 	movi	r6,10
 4027e64:	000f883a 	mov	r7,zero
 4027e68:	402a8100 	call	402a810 <__umoddi3>
 4027e6c:	10800c04 	addi	r2,r2,48
 4027e70:	bdffffc4 	addi	r23,r23,-1
 4027e74:	9809883a 	mov	r4,r19
 4027e78:	a00b883a 	mov	r5,r20
 4027e7c:	b8800005 	stb	r2,0(r23)
 4027e80:	01800284 	movi	r6,10
 4027e84:	000f883a 	mov	r7,zero
 4027e88:	402a2140 	call	402a214 <__udivdi3>
 4027e8c:	1027883a 	mov	r19,r2
 4027e90:	10c4b03a 	or	r2,r2,r3
 4027e94:	1829883a 	mov	r20,r3
 4027e98:	103fef1e 	bne	r2,zero,4027e58 <__flash_rwdata_start+0xffff7b44>
 4027e9c:	d9001e17 	ldw	r4,120(sp)
 4027ea0:	e011883a 	mov	r8,fp
 4027ea4:	25e9c83a 	sub	r20,r4,r23
 4027ea8:	003eec06 	br	4027a5c <__flash_rwdata_start+0xffff7748>
 4027eac:	d8802307 	ldb	r2,140(sp)
 4027eb0:	1002361e 	bne	r2,zero,402878c <___vfiprintf_internal_r+0x113c>
 4027eb4:	00c00804 	movi	r3,32
 4027eb8:	d8c02305 	stb	r3,140(sp)
 4027ebc:	04c00044 	movi	r19,1
 4027ec0:	b0c00007 	ldb	r3,0(r22)
 4027ec4:	003e3f06 	br	40277c4 <__flash_rwdata_start+0xffff74b0>
 4027ec8:	8c400054 	ori	r17,r17,1
 4027ecc:	b0c00007 	ldb	r3,0(r22)
 4027ed0:	003e3c06 	br	40277c4 <__flash_rwdata_start+0xffff74b0>
 4027ed4:	8c402014 	ori	r17,r17,128
 4027ed8:	b0c00007 	ldb	r3,0(r22)
 4027edc:	003e3906 	br	40277c4 <__flash_rwdata_start+0xffff74b0>
 4027ee0:	dc002715 	stw	r16,156(sp)
 4027ee4:	d8002515 	stw	zero,148(sp)
 4027ee8:	1f3ff404 	addi	fp,r3,-48
 4027eec:	0009883a 	mov	r4,zero
 4027ef0:	b021883a 	mov	r16,r22
 4027ef4:	01400284 	movi	r5,10
 4027ef8:	40208380 	call	4020838 <__mulsi3>
 4027efc:	80c00007 	ldb	r3,0(r16)
 4027f00:	e089883a 	add	r4,fp,r2
 4027f04:	b5800044 	addi	r22,r22,1
 4027f08:	1f3ff404 	addi	fp,r3,-48
 4027f0c:	b021883a 	mov	r16,r22
 4027f10:	af3ff82e 	bgeu	r21,fp,4027ef4 <__flash_rwdata_start+0xffff7be0>
 4027f14:	d9002515 	stw	r4,148(sp)
 4027f18:	dc002717 	ldw	r16,156(sp)
 4027f1c:	003e2a06 	br	40277c8 <__flash_rwdata_start+0xffff74b4>
 4027f20:	9cc03fcc 	andi	r19,r19,255
 4027f24:	b811883a 	mov	r8,r23
 4027f28:	9802e91e 	bne	r19,zero,4028ad0 <___vfiprintf_internal_r+0x1480>
 4027f2c:	8c400414 	ori	r17,r17,16
 4027f30:	8880080c 	andi	r2,r17,32
 4027f34:	103fb81e 	bne	r2,zero,4027e18 <__flash_rwdata_start+0xffff7b04>
 4027f38:	8880040c 	andi	r2,r17,16
 4027f3c:	10022e26 	beq	r2,zero,40287f8 <___vfiprintf_internal_r+0x11a8>
 4027f40:	d9402217 	ldw	r5,136(sp)
 4027f44:	2cc00017 	ldw	r19,0(r5)
 4027f48:	29400104 	addi	r5,r5,4
 4027f4c:	d9402215 	stw	r5,136(sp)
 4027f50:	9829d7fa 	srai	r20,r19,31
 4027f54:	a005883a 	mov	r2,r20
 4027f58:	003fb506 	br	4027e30 <__flash_rwdata_start+0xffff7b1c>
 4027f5c:	9cc03fcc 	andi	r19,r19,255
 4027f60:	b811883a 	mov	r8,r23
 4027f64:	9802fa1e 	bne	r19,zero,4028b50 <___vfiprintf_internal_r+0x1500>
 4027f68:	8c400414 	ori	r17,r17,16
 4027f6c:	8880080c 	andi	r2,r17,32
 4027f70:	103f661e 	bne	r2,zero,4027d0c <__flash_rwdata_start+0xffff79f8>
 4027f74:	8880040c 	andi	r2,r17,16
 4027f78:	10020626 	beq	r2,zero,4028794 <___vfiprintf_internal_r+0x1144>
 4027f7c:	d9402217 	ldw	r5,136(sp)
 4027f80:	d8001d85 	stb	zero,118(sp)
 4027f84:	0029883a 	mov	r20,zero
 4027f88:	28800104 	addi	r2,r5,4
 4027f8c:	2cc00017 	ldw	r19,0(r5)
 4027f90:	80020816 	blt	r16,zero,40287b4 <___vfiprintf_internal_r+0x1164>
 4027f94:	00ffdfc4 	movi	r3,-129
 4027f98:	d8802215 	stw	r2,136(sp)
 4027f9c:	88e2703a 	and	r17,r17,r3
 4027fa0:	983f651e 	bne	r19,zero,4027d38 <__flash_rwdata_start+0xffff7a24>
 4027fa4:	002b883a 	mov	r21,zero
 4027fa8:	8002cf26 	beq	r16,zero,4028ae8 <___vfiprintf_internal_r+0x1498>
 4027fac:	0027883a 	mov	r19,zero
 4027fb0:	0029883a 	mov	r20,zero
 4027fb4:	003f6106 	br	4027d3c <__flash_rwdata_start+0xffff7a28>
 4027fb8:	9cc03fcc 	andi	r19,r19,255
 4027fbc:	b811883a 	mov	r8,r23
 4027fc0:	9802e01e 	bne	r19,zero,4028b44 <___vfiprintf_internal_r+0x14f4>
 4027fc4:	8c400414 	ori	r17,r17,16
 4027fc8:	8880080c 	andi	r2,r17,32
 4027fcc:	1000641e 	bne	r2,zero,4028160 <___vfiprintf_internal_r+0xb10>
 4027fd0:	8880040c 	andi	r2,r17,16
 4027fd4:	1001c81e 	bne	r2,zero,40286f8 <___vfiprintf_internal_r+0x10a8>
 4027fd8:	8880100c 	andi	r2,r17,64
 4027fdc:	d8001d85 	stb	zero,118(sp)
 4027fe0:	1002281e 	bne	r2,zero,4028884 <___vfiprintf_internal_r+0x1234>
 4027fe4:	d9002217 	ldw	r4,136(sp)
 4027fe8:	0029883a 	mov	r20,zero
 4027fec:	20800104 	addi	r2,r4,4
 4027ff0:	24c00017 	ldw	r19,0(r4)
 4027ff4:	8001c60e 	bge	r16,zero,4028710 <___vfiprintf_internal_r+0x10c0>
 4027ff8:	d8802215 	stw	r2,136(sp)
 4027ffc:	002b883a 	mov	r21,zero
 4028000:	9d04b03a 	or	r2,r19,r20
 4028004:	103f911e 	bne	r2,zero,4027e4c <__flash_rwdata_start+0xffff7b38>
 4028008:	00800044 	movi	r2,1
 402800c:	10803fcc 	andi	r2,r2,255
 4028010:	00c00044 	movi	r3,1
 4028014:	10c05f26 	beq	r2,r3,4028194 <___vfiprintf_internal_r+0xb44>
 4028018:	00c00084 	movi	r3,2
 402801c:	10ffe31e 	bne	r2,r3,4027fac <__flash_rwdata_start+0xffff7c98>
 4028020:	0027883a 	mov	r19,zero
 4028024:	0029883a 	mov	r20,zero
 4028028:	00015106 	br	4028570 <___vfiprintf_internal_r+0xf20>
 402802c:	9cc03fcc 	andi	r19,r19,255
 4028030:	b811883a 	mov	r8,r23
 4028034:	9802c01e 	bne	r19,zero,4028b38 <___vfiprintf_internal_r+0x14e8>
 4028038:	01400034 	movhi	r5,0
 402803c:	29401604 	addi	r5,r5,88
 4028040:	d9402615 	stw	r5,152(sp)
 4028044:	8880080c 	andi	r2,r17,32
 4028048:	103f541e 	bne	r2,zero,4027d9c <__flash_rwdata_start+0xffff7a88>
 402804c:	8880040c 	andi	r2,r17,16
 4028050:	1001f226 	beq	r2,zero,402881c <___vfiprintf_internal_r+0x11cc>
 4028054:	d9402217 	ldw	r5,136(sp)
 4028058:	0029883a 	mov	r20,zero
 402805c:	2cc00017 	ldw	r19,0(r5)
 4028060:	29400104 	addi	r5,r5,4
 4028064:	d9402215 	stw	r5,136(sp)
 4028068:	003f5106 	br	4027db0 <__flash_rwdata_start+0xffff7a9c>
 402806c:	d8c02217 	ldw	r3,136(sp)
 4028070:	b811883a 	mov	r8,r23
 4028074:	d8001d85 	stb	zero,118(sp)
 4028078:	1dc00017 	ldw	r23,0(r3)
 402807c:	1f000104 	addi	fp,r3,4
 4028080:	b8025926 	beq	r23,zero,40289e8 <___vfiprintf_internal_r+0x1398>
 4028084:	80023316 	blt	r16,zero,4028954 <___vfiprintf_internal_r+0x1304>
 4028088:	800d883a 	mov	r6,r16
 402808c:	000b883a 	mov	r5,zero
 4028090:	b809883a 	mov	r4,r23
 4028094:	da002a15 	stw	r8,168(sp)
 4028098:	4025db80 	call	4025db8 <memchr>
 402809c:	da002a17 	ldw	r8,168(sp)
 40280a0:	10026826 	beq	r2,zero,4028a44 <___vfiprintf_internal_r+0x13f4>
 40280a4:	15e9c83a 	sub	r20,r2,r23
 40280a8:	dd401d83 	ldbu	r21,118(sp)
 40280ac:	df002215 	stw	fp,136(sp)
 40280b0:	0021883a 	mov	r16,zero
 40280b4:	003e6906 	br	4027a5c <__flash_rwdata_start+0xffff7748>
 40280b8:	9cc03fcc 	andi	r19,r19,255
 40280bc:	b811883a 	mov	r8,r23
 40280c0:	983fc126 	beq	r19,zero,4027fc8 <__flash_rwdata_start+0xffff7cb4>
 40280c4:	d8c02303 	ldbu	r3,140(sp)
 40280c8:	d8c01d85 	stb	r3,118(sp)
 40280cc:	003fbe06 	br	4027fc8 <__flash_rwdata_start+0xffff7cb4>
 40280d0:	d9002217 	ldw	r4,136(sp)
 40280d4:	d9402217 	ldw	r5,136(sp)
 40280d8:	21000017 	ldw	r4,0(r4)
 40280dc:	28800104 	addi	r2,r5,4
 40280e0:	d9002515 	stw	r4,148(sp)
 40280e4:	203e3d16 	blt	r4,zero,40279dc <__flash_rwdata_start+0xffff76c8>
 40280e8:	d8802215 	stw	r2,136(sp)
 40280ec:	b0c00007 	ldb	r3,0(r22)
 40280f0:	003db406 	br	40277c4 <__flash_rwdata_start+0xffff74b0>
 40280f4:	00c00ac4 	movi	r3,43
 40280f8:	d8c02305 	stb	r3,140(sp)
 40280fc:	04c00044 	movi	r19,1
 4028100:	b0c00007 	ldb	r3,0(r22)
 4028104:	003daf06 	br	40277c4 <__flash_rwdata_start+0xffff74b0>
 4028108:	b0c00007 	ldb	r3,0(r22)
 402810c:	01000a84 	movi	r4,42
 4028110:	b4000044 	addi	r16,r22,1
 4028114:	19025e26 	beq	r3,r4,4028a90 <___vfiprintf_internal_r+0x1440>
 4028118:	1f3ff404 	addi	fp,r3,-48
 402811c:	0009883a 	mov	r4,zero
 4028120:	af025236 	bltu	r21,fp,4028a6c <___vfiprintf_internal_r+0x141c>
 4028124:	01400284 	movi	r5,10
 4028128:	40208380 	call	4020838 <__mulsi3>
 402812c:	80c00007 	ldb	r3,0(r16)
 4028130:	1709883a 	add	r4,r2,fp
 4028134:	85800044 	addi	r22,r16,1
 4028138:	1f3ff404 	addi	fp,r3,-48
 402813c:	b021883a 	mov	r16,r22
 4028140:	af3ff82e 	bgeu	r21,fp,4028124 <__flash_rwdata_start+0xffff7e10>
 4028144:	2021883a 	mov	r16,r4
 4028148:	203d9f0e 	bge	r4,zero,40277c8 <__flash_rwdata_start+0xffff74b4>
 402814c:	043fffc4 	movi	r16,-1
 4028150:	003d9d06 	br	40277c8 <__flash_rwdata_start+0xffff74b4>
 4028154:	8c401014 	ori	r17,r17,64
 4028158:	b0c00007 	ldb	r3,0(r22)
 402815c:	003d9906 	br	40277c4 <__flash_rwdata_start+0xffff74b0>
 4028160:	d9002217 	ldw	r4,136(sp)
 4028164:	d8001d85 	stb	zero,118(sp)
 4028168:	20c00204 	addi	r3,r4,8
 402816c:	24c00017 	ldw	r19,0(r4)
 4028170:	25000117 	ldw	r20,4(r4)
 4028174:	8001e716 	blt	r16,zero,4028914 <___vfiprintf_internal_r+0x12c4>
 4028178:	013fdfc4 	movi	r4,-129
 402817c:	9d04b03a 	or	r2,r19,r20
 4028180:	d8c02215 	stw	r3,136(sp)
 4028184:	8922703a 	and	r17,r17,r4
 4028188:	002b883a 	mov	r21,zero
 402818c:	103f2f1e 	bne	r2,zero,4027e4c <__flash_rwdata_start+0xffff7b38>
 4028190:	803e2f26 	beq	r16,zero,4027a50 <__flash_rwdata_start+0xffff773c>
 4028194:	0027883a 	mov	r19,zero
 4028198:	9cc00c04 	addi	r19,r19,48
 402819c:	dcc019c5 	stb	r19,103(sp)
 40281a0:	dd002817 	ldw	r20,160(sp)
 40281a4:	ddc019c4 	addi	r23,sp,103
 40281a8:	003e2c06 	br	4027a5c <__flash_rwdata_start+0xffff7748>
 40281ac:	9cc03fcc 	andi	r19,r19,255
 40281b0:	b811883a 	mov	r8,r23
 40281b4:	9802571e 	bne	r19,zero,4028b14 <___vfiprintf_internal_r+0x14c4>
 40281b8:	18005726 	beq	r3,zero,4028318 <___vfiprintf_internal_r+0xcc8>
 40281bc:	04c00044 	movi	r19,1
 40281c0:	d8c01005 	stb	r3,64(sp)
 40281c4:	d8001d85 	stb	zero,118(sp)
 40281c8:	9829883a 	mov	r20,r19
 40281cc:	ddc01004 	addi	r23,sp,64
 40281d0:	003f0a06 	br	4027dfc <__flash_rwdata_start+0xffff7ae8>
 40281d4:	d9402017 	ldw	r5,128(sp)
 40281d8:	d9002117 	ldw	r4,132(sp)
 40281dc:	d9801a04 	addi	r6,sp,104
 40281e0:	da802a15 	stw	r10,168(sp)
 40281e4:	402753c0 	call	402753c <__sprint_r.part.0>
 40281e8:	da802a17 	ldw	r10,168(sp)
 40281ec:	1000501e 	bne	r2,zero,4028330 <___vfiprintf_internal_r+0xce0>
 40281f0:	d9801b17 	ldw	r6,108(sp)
 40281f4:	d8801c17 	ldw	r2,112(sp)
 40281f8:	d811883a 	mov	r8,sp
 40281fc:	31000044 	addi	r4,r6,1
 4028200:	003e3606 	br	4027adc <__flash_rwdata_start+0xffff77c8>
 4028204:	d9001b17 	ldw	r4,108(sp)
 4028208:	d8801c17 	ldw	r2,112(sp)
 402820c:	21400044 	addi	r5,r4,1
 4028210:	d9801d87 	ldb	r6,118(sp)
 4028214:	303e5226 	beq	r6,zero,4027b60 <__flash_rwdata_start+0xffff784c>
 4028218:	01800044 	movi	r6,1
 402821c:	d9001d84 	addi	r4,sp,118
 4028220:	1185883a 	add	r2,r2,r6
 4028224:	41000015 	stw	r4,0(r8)
 4028228:	41800115 	stw	r6,4(r8)
 402822c:	d8801c15 	stw	r2,112(sp)
 4028230:	d9401b15 	stw	r5,108(sp)
 4028234:	010001c4 	movi	r4,7
 4028238:	2140b00e 	bge	r4,r5,40284fc <___vfiprintf_internal_r+0xeac>
 402823c:	1000f61e 	bne	r2,zero,4028618 <___vfiprintf_internal_r+0xfc8>
 4028240:	3800b31e 	bne	r7,zero,4028510 <___vfiprintf_internal_r+0xec0>
 4028244:	0009883a 	mov	r4,zero
 4028248:	300b883a 	mov	r5,r6
 402824c:	d811883a 	mov	r8,sp
 4028250:	01802004 	movi	r6,128
 4028254:	19be5226 	beq	r3,r6,4027ba0 <__flash_rwdata_start+0xffff788c>
 4028258:	8521c83a 	sub	r16,r16,r20
 402825c:	043e790e 	bge	zero,r16,4027c44 <__flash_rwdata_start+0xffff7930>
 4028260:	05400404 	movi	r21,16
 4028264:	ac01b00e 	bge	r21,r16,4028928 <___vfiprintf_internal_r+0x12d8>
 4028268:	01400034 	movhi	r5,0
 402826c:	29407c04 	addi	r5,r5,496
 4028270:	d9402315 	stw	r5,140(sp)
 4028274:	070001c4 	movi	fp,7
 4028278:	00000506 	br	4028290 <___vfiprintf_internal_r+0xc40>
 402827c:	21400084 	addi	r5,r4,2
 4028280:	42000204 	addi	r8,r8,8
 4028284:	1809883a 	mov	r4,r3
 4028288:	843ffc04 	addi	r16,r16,-16
 402828c:	ac000d0e 	bge	r21,r16,40282c4 <___vfiprintf_internal_r+0xc74>
 4028290:	10800404 	addi	r2,r2,16
 4028294:	20c00044 	addi	r3,r4,1
 4028298:	44800015 	stw	r18,0(r8)
 402829c:	45400115 	stw	r21,4(r8)
 40282a0:	d8801c15 	stw	r2,112(sp)
 40282a4:	d8c01b15 	stw	r3,108(sp)
 40282a8:	e0fff40e 	bge	fp,r3,402827c <__flash_rwdata_start+0xffff7f68>
 40282ac:	1000101e 	bne	r2,zero,40282f0 <___vfiprintf_internal_r+0xca0>
 40282b0:	843ffc04 	addi	r16,r16,-16
 40282b4:	01400044 	movi	r5,1
 40282b8:	0009883a 	mov	r4,zero
 40282bc:	d811883a 	mov	r8,sp
 40282c0:	ac3ff316 	blt	r21,r16,4028290 <__flash_rwdata_start+0xffff7f7c>
 40282c4:	d8c02317 	ldw	r3,140(sp)
 40282c8:	1405883a 	add	r2,r2,r16
 40282cc:	44000115 	stw	r16,4(r8)
 40282d0:	40c00015 	stw	r3,0(r8)
 40282d4:	d8801c15 	stw	r2,112(sp)
 40282d8:	d9401b15 	stw	r5,108(sp)
 40282dc:	00c001c4 	movi	r3,7
 40282e0:	19401916 	blt	r3,r5,4028348 <___vfiprintf_internal_r+0xcf8>
 40282e4:	42000204 	addi	r8,r8,8
 40282e8:	29400044 	addi	r5,r5,1
 40282ec:	003e5506 	br	4027c44 <__flash_rwdata_start+0xffff7930>
 40282f0:	d9402017 	ldw	r5,128(sp)
 40282f4:	d9002117 	ldw	r4,132(sp)
 40282f8:	d9801a04 	addi	r6,sp,104
 40282fc:	402753c0 	call	402753c <__sprint_r.part.0>
 4028300:	10000b1e 	bne	r2,zero,4028330 <___vfiprintf_internal_r+0xce0>
 4028304:	d9001b17 	ldw	r4,108(sp)
 4028308:	d8801c17 	ldw	r2,112(sp)
 402830c:	d811883a 	mov	r8,sp
 4028310:	21400044 	addi	r5,r4,1
 4028314:	003fdc06 	br	4028288 <__flash_rwdata_start+0xffff7f74>
 4028318:	d8801c17 	ldw	r2,112(sp)
 402831c:	10000426 	beq	r2,zero,4028330 <___vfiprintf_internal_r+0xce0>
 4028320:	d9402017 	ldw	r5,128(sp)
 4028324:	d9002117 	ldw	r4,132(sp)
 4028328:	d9801a04 	addi	r6,sp,104
 402832c:	402753c0 	call	402753c <__sprint_r.part.0>
 4028330:	d9402017 	ldw	r5,128(sp)
 4028334:	2880030b 	ldhu	r2,12(r5)
 4028338:	1080100c 	andi	r2,r2,64
 402833c:	10014d1e 	bne	r2,zero,4028874 <___vfiprintf_internal_r+0x1224>
 4028340:	d8802417 	ldw	r2,144(sp)
 4028344:	003d9706 	br	40279a4 <__flash_rwdata_start+0xffff7690>
 4028348:	1000d21e 	bne	r2,zero,4028694 <___vfiprintf_internal_r+0x1044>
 402834c:	00c00044 	movi	r3,1
 4028350:	a005883a 	mov	r2,r20
 4028354:	ddc00015 	stw	r23,0(sp)
 4028358:	dd000115 	stw	r20,4(sp)
 402835c:	dd001c15 	stw	r20,112(sp)
 4028360:	d8c01b15 	stw	r3,108(sp)
 4028364:	d811883a 	mov	r8,sp
 4028368:	42000204 	addi	r8,r8,8
 402836c:	8c40010c 	andi	r17,r17,4
 4028370:	88004026 	beq	r17,zero,4028474 <___vfiprintf_internal_r+0xe24>
 4028374:	d9002517 	ldw	r4,148(sp)
 4028378:	24e3c83a 	sub	r17,r4,r19
 402837c:	04403d0e 	bge	zero,r17,4028474 <___vfiprintf_internal_r+0xe24>
 4028380:	04000404 	movi	r16,16
 4028384:	8441a90e 	bge	r16,r17,4028a2c <___vfiprintf_internal_r+0x13dc>
 4028388:	00c00034 	movhi	r3,0
 402838c:	18c08004 	addi	r3,r3,512
 4028390:	d9001b17 	ldw	r4,108(sp)
 4028394:	d8c02315 	stw	r3,140(sp)
 4028398:	050001c4 	movi	r20,7
 402839c:	dd402117 	ldw	r21,132(sp)
 40283a0:	ddc02017 	ldw	r23,128(sp)
 40283a4:	00000506 	br	40283bc <___vfiprintf_internal_r+0xd6c>
 40283a8:	21400084 	addi	r5,r4,2
 40283ac:	42000204 	addi	r8,r8,8
 40283b0:	1809883a 	mov	r4,r3
 40283b4:	8c7ffc04 	addi	r17,r17,-16
 40283b8:	84400f0e 	bge	r16,r17,40283f8 <___vfiprintf_internal_r+0xda8>
 40283bc:	01400034 	movhi	r5,0
 40283c0:	10800404 	addi	r2,r2,16
 40283c4:	20c00044 	addi	r3,r4,1
 40283c8:	29408004 	addi	r5,r5,512
 40283cc:	41400015 	stw	r5,0(r8)
 40283d0:	44000115 	stw	r16,4(r8)
 40283d4:	d8801c15 	stw	r2,112(sp)
 40283d8:	d8c01b15 	stw	r3,108(sp)
 40283dc:	a0fff20e 	bge	r20,r3,40283a8 <__flash_rwdata_start+0xffff8094>
 40283e0:	1000141e 	bne	r2,zero,4028434 <___vfiprintf_internal_r+0xde4>
 40283e4:	8c7ffc04 	addi	r17,r17,-16
 40283e8:	01400044 	movi	r5,1
 40283ec:	0009883a 	mov	r4,zero
 40283f0:	d811883a 	mov	r8,sp
 40283f4:	847ff116 	blt	r16,r17,40283bc <__flash_rwdata_start+0xffff80a8>
 40283f8:	d8c02317 	ldw	r3,140(sp)
 40283fc:	1445883a 	add	r2,r2,r17
 4028400:	44400115 	stw	r17,4(r8)
 4028404:	40c00015 	stw	r3,0(r8)
 4028408:	d8801c15 	stw	r2,112(sp)
 402840c:	d9401b15 	stw	r5,108(sp)
 4028410:	00c001c4 	movi	r3,7
 4028414:	1940170e 	bge	r3,r5,4028474 <___vfiprintf_internal_r+0xe24>
 4028418:	1000101e 	bne	r2,zero,402845c <___vfiprintf_internal_r+0xe0c>
 402841c:	d8802517 	ldw	r2,148(sp)
 4028420:	14c11616 	blt	r2,r19,402887c <___vfiprintf_internal_r+0x122c>
 4028424:	d9002417 	ldw	r4,144(sp)
 4028428:	2089883a 	add	r4,r4,r2
 402842c:	d9002415 	stw	r4,144(sp)
 4028430:	003e1806 	br	4027c94 <__flash_rwdata_start+0xffff7980>
 4028434:	d9801a04 	addi	r6,sp,104
 4028438:	b80b883a 	mov	r5,r23
 402843c:	a809883a 	mov	r4,r21
 4028440:	402753c0 	call	402753c <__sprint_r.part.0>
 4028444:	103fba1e 	bne	r2,zero,4028330 <__flash_rwdata_start+0xffff801c>
 4028448:	d9001b17 	ldw	r4,108(sp)
 402844c:	d8801c17 	ldw	r2,112(sp)
 4028450:	d811883a 	mov	r8,sp
 4028454:	21400044 	addi	r5,r4,1
 4028458:	003fd606 	br	40283b4 <__flash_rwdata_start+0xffff80a0>
 402845c:	d9402017 	ldw	r5,128(sp)
 4028460:	d9002117 	ldw	r4,132(sp)
 4028464:	d9801a04 	addi	r6,sp,104
 4028468:	402753c0 	call	402753c <__sprint_r.part.0>
 402846c:	103fb01e 	bne	r2,zero,4028330 <__flash_rwdata_start+0xffff801c>
 4028470:	d8801c17 	ldw	r2,112(sp)
 4028474:	d8c02517 	ldw	r3,148(sp)
 4028478:	1cc0010e 	bge	r3,r19,4028480 <___vfiprintf_internal_r+0xe30>
 402847c:	9807883a 	mov	r3,r19
 4028480:	d9002417 	ldw	r4,144(sp)
 4028484:	20c9883a 	add	r4,r4,r3
 4028488:	d9002415 	stw	r4,144(sp)
 402848c:	103e0126 	beq	r2,zero,4027c94 <__flash_rwdata_start+0xffff7980>
 4028490:	d9402017 	ldw	r5,128(sp)
 4028494:	d9002117 	ldw	r4,132(sp)
 4028498:	d9801a04 	addi	r6,sp,104
 402849c:	402753c0 	call	402753c <__sprint_r.part.0>
 40284a0:	103dfc26 	beq	r2,zero,4027c94 <__flash_rwdata_start+0xffff7980>
 40284a4:	003fa206 	br	4028330 <__flash_rwdata_start+0xffff801c>
 40284a8:	d9402017 	ldw	r5,128(sp)
 40284ac:	d9002117 	ldw	r4,132(sp)
 40284b0:	d9801a04 	addi	r6,sp,104
 40284b4:	d9c02b15 	stw	r7,172(sp)
 40284b8:	402753c0 	call	402753c <__sprint_r.part.0>
 40284bc:	d9c02b17 	ldw	r7,172(sp)
 40284c0:	103f9b1e 	bne	r2,zero,4028330 <__flash_rwdata_start+0xffff801c>
 40284c4:	d9001b17 	ldw	r4,108(sp)
 40284c8:	d8801c17 	ldw	r2,112(sp)
 40284cc:	d811883a 	mov	r8,sp
 40284d0:	21800044 	addi	r6,r4,1
 40284d4:	003dbf06 	br	4027bd4 <__flash_rwdata_start+0xffff78c0>
 40284d8:	1000d81e 	bne	r2,zero,402883c <___vfiprintf_internal_r+0x11ec>
 40284dc:	d9001d87 	ldb	r4,118(sp)
 40284e0:	20000a26 	beq	r4,zero,402850c <___vfiprintf_internal_r+0xebc>
 40284e4:	00800044 	movi	r2,1
 40284e8:	d9001d84 	addi	r4,sp,118
 40284ec:	100b883a 	mov	r5,r2
 40284f0:	d9000015 	stw	r4,0(sp)
 40284f4:	d8800115 	stw	r2,4(sp)
 40284f8:	d811883a 	mov	r8,sp
 40284fc:	2809883a 	mov	r4,r5
 4028500:	42000204 	addi	r8,r8,8
 4028504:	29400044 	addi	r5,r5,1
 4028508:	003d9506 	br	4027b60 <__flash_rwdata_start+0xffff784c>
 402850c:	3800fd26 	beq	r7,zero,4028904 <___vfiprintf_internal_r+0x12b4>
 4028510:	00800084 	movi	r2,2
 4028514:	d9001d04 	addi	r4,sp,116
 4028518:	d9000015 	stw	r4,0(sp)
 402851c:	d8800115 	stw	r2,4(sp)
 4028520:	01400044 	movi	r5,1
 4028524:	d811883a 	mov	r8,sp
 4028528:	2809883a 	mov	r4,r5
 402852c:	42000204 	addi	r8,r8,8
 4028530:	29400044 	addi	r5,r5,1
 4028534:	003f4606 	br	4028250 <__flash_rwdata_start+0xffff7f3c>
 4028538:	d8802517 	ldw	r2,148(sp)
 402853c:	14c0010e 	bge	r2,r19,4028544 <___vfiprintf_internal_r+0xef4>
 4028540:	9805883a 	mov	r2,r19
 4028544:	d9402417 	ldw	r5,144(sp)
 4028548:	288b883a 	add	r5,r5,r2
 402854c:	d9402415 	stw	r5,144(sp)
 4028550:	003dd006 	br	4027c94 <__flash_rwdata_start+0xffff7980>
 4028554:	d8001d85 	stb	zero,118(sp)
 4028558:	80005d16 	blt	r16,zero,40286d0 <___vfiprintf_internal_r+0x1080>
 402855c:	00ffdfc4 	movi	r3,-129
 4028560:	9d04b03a 	or	r2,r19,r20
 4028564:	88e2703a 	and	r17,r17,r3
 4028568:	103d3726 	beq	r2,zero,4027a48 <__flash_rwdata_start+0xffff7734>
 402856c:	002b883a 	mov	r21,zero
 4028570:	d9002617 	ldw	r4,152(sp)
 4028574:	ddc01a04 	addi	r23,sp,104
 4028578:	988003cc 	andi	r2,r19,15
 402857c:	a006973a 	slli	r3,r20,28
 4028580:	2085883a 	add	r2,r4,r2
 4028584:	9826d13a 	srli	r19,r19,4
 4028588:	10800003 	ldbu	r2,0(r2)
 402858c:	a028d13a 	srli	r20,r20,4
 4028590:	bdffffc4 	addi	r23,r23,-1
 4028594:	1ce6b03a 	or	r19,r3,r19
 4028598:	b8800005 	stb	r2,0(r23)
 402859c:	9d04b03a 	or	r2,r19,r20
 40285a0:	103ff51e 	bne	r2,zero,4028578 <__flash_rwdata_start+0xffff8264>
 40285a4:	d8801e17 	ldw	r2,120(sp)
 40285a8:	15e9c83a 	sub	r20,r2,r23
 40285ac:	003d2b06 	br	4027a5c <__flash_rwdata_start+0xffff7748>
 40285b0:	d9402017 	ldw	r5,128(sp)
 40285b4:	d9002117 	ldw	r4,132(sp)
 40285b8:	d9801a04 	addi	r6,sp,104
 40285bc:	402753c0 	call	402753c <__sprint_r.part.0>
 40285c0:	103f5b1e 	bne	r2,zero,4028330 <__flash_rwdata_start+0xffff801c>
 40285c4:	d8801c17 	ldw	r2,112(sp)
 40285c8:	d811883a 	mov	r8,sp
 40285cc:	003f6706 	br	402836c <__flash_rwdata_start+0xffff8058>
 40285d0:	d9402017 	ldw	r5,128(sp)
 40285d4:	d9002117 	ldw	r4,132(sp)
 40285d8:	d9801a04 	addi	r6,sp,104
 40285dc:	402753c0 	call	402753c <__sprint_r.part.0>
 40285e0:	103f531e 	bne	r2,zero,4028330 <__flash_rwdata_start+0xffff801c>
 40285e4:	d811883a 	mov	r8,sp
 40285e8:	003cd906 	br	4027950 <__flash_rwdata_start+0xffff763c>
 40285ec:	10803fcc 	andi	r2,r2,255
 40285f0:	1080201c 	xori	r2,r2,128
 40285f4:	10bfe004 	addi	r2,r2,-128
 40285f8:	00c00c04 	movi	r3,48
 40285fc:	10ffe926 	beq	r2,r3,40285a4 <__flash_rwdata_start+0xffff8290>
 4028600:	b8ffffc5 	stb	r3,-1(r23)
 4028604:	d8c01e17 	ldw	r3,120(sp)
 4028608:	b8bfffc4 	addi	r2,r23,-1
 402860c:	102f883a 	mov	r23,r2
 4028610:	18a9c83a 	sub	r20,r3,r2
 4028614:	003d1106 	br	4027a5c <__flash_rwdata_start+0xffff7748>
 4028618:	d9402017 	ldw	r5,128(sp)
 402861c:	d9002117 	ldw	r4,132(sp)
 4028620:	d9801a04 	addi	r6,sp,104
 4028624:	d8c02a15 	stw	r3,168(sp)
 4028628:	d9c02b15 	stw	r7,172(sp)
 402862c:	402753c0 	call	402753c <__sprint_r.part.0>
 4028630:	d8c02a17 	ldw	r3,168(sp)
 4028634:	d9c02b17 	ldw	r7,172(sp)
 4028638:	103f3d1e 	bne	r2,zero,4028330 <__flash_rwdata_start+0xffff801c>
 402863c:	d9001b17 	ldw	r4,108(sp)
 4028640:	d8801c17 	ldw	r2,112(sp)
 4028644:	d811883a 	mov	r8,sp
 4028648:	21400044 	addi	r5,r4,1
 402864c:	003d4406 	br	4027b60 <__flash_rwdata_start+0xffff784c>
 4028650:	d9402017 	ldw	r5,128(sp)
 4028654:	d9002117 	ldw	r4,132(sp)
 4028658:	d9801a04 	addi	r6,sp,104
 402865c:	d8c02a15 	stw	r3,168(sp)
 4028660:	402753c0 	call	402753c <__sprint_r.part.0>
 4028664:	d8c02a17 	ldw	r3,168(sp)
 4028668:	103f311e 	bne	r2,zero,4028330 <__flash_rwdata_start+0xffff801c>
 402866c:	d9001b17 	ldw	r4,108(sp)
 4028670:	d8801c17 	ldw	r2,112(sp)
 4028674:	d811883a 	mov	r8,sp
 4028678:	21400044 	addi	r5,r4,1
 402867c:	003ef406 	br	4028250 <__flash_rwdata_start+0xffff7f3c>
 4028680:	1000bd1e 	bne	r2,zero,4028978 <___vfiprintf_internal_r+0x1328>
 4028684:	01400044 	movi	r5,1
 4028688:	0009883a 	mov	r4,zero
 402868c:	d811883a 	mov	r8,sp
 4028690:	003ef106 	br	4028258 <__flash_rwdata_start+0xffff7f44>
 4028694:	d9402017 	ldw	r5,128(sp)
 4028698:	d9002117 	ldw	r4,132(sp)
 402869c:	d9801a04 	addi	r6,sp,104
 40286a0:	402753c0 	call	402753c <__sprint_r.part.0>
 40286a4:	103f221e 	bne	r2,zero,4028330 <__flash_rwdata_start+0xffff801c>
 40286a8:	d9401b17 	ldw	r5,108(sp)
 40286ac:	d8801c17 	ldw	r2,112(sp)
 40286b0:	d811883a 	mov	r8,sp
 40286b4:	29400044 	addi	r5,r5,1
 40286b8:	003d6206 	br	4027c44 <__flash_rwdata_start+0xffff7930>
 40286bc:	01400034 	movhi	r5,0
 40286c0:	29401b04 	addi	r5,r5,108
 40286c4:	d9402615 	stw	r5,152(sp)
 40286c8:	d8c02215 	stw	r3,136(sp)
 40286cc:	1023883a 	mov	r17,r2
 40286d0:	9d04b03a 	or	r2,r19,r20
 40286d4:	103fa51e 	bne	r2,zero,402856c <__flash_rwdata_start+0xffff8258>
 40286d8:	002b883a 	mov	r21,zero
 40286dc:	00800084 	movi	r2,2
 40286e0:	003e4a06 	br	402800c <__flash_rwdata_start+0xffff7cf8>
 40286e4:	01400034 	movhi	r5,0
 40286e8:	29401b04 	addi	r5,r5,108
 40286ec:	002b883a 	mov	r21,zero
 40286f0:	d9402615 	stw	r5,152(sp)
 40286f4:	003f9e06 	br	4028570 <__flash_rwdata_start+0xffff825c>
 40286f8:	d9402217 	ldw	r5,136(sp)
 40286fc:	d8001d85 	stb	zero,118(sp)
 4028700:	0029883a 	mov	r20,zero
 4028704:	28800104 	addi	r2,r5,4
 4028708:	2cc00017 	ldw	r19,0(r5)
 402870c:	803e3a16 	blt	r16,zero,4027ff8 <__flash_rwdata_start+0xffff7ce4>
 4028710:	00ffdfc4 	movi	r3,-129
 4028714:	d8802215 	stw	r2,136(sp)
 4028718:	88e2703a 	and	r17,r17,r3
 402871c:	002b883a 	mov	r21,zero
 4028720:	983e9b26 	beq	r19,zero,4028190 <__flash_rwdata_start+0xffff7e7c>
 4028724:	00800244 	movi	r2,9
 4028728:	14fdc936 	bltu	r2,r19,4027e50 <__flash_rwdata_start+0xffff7b3c>
 402872c:	003e9a06 	br	4028198 <__flash_rwdata_start+0xffff7e84>
 4028730:	00800c04 	movi	r2,48
 4028734:	d8c01d45 	stb	r3,117(sp)
 4028738:	d8801d05 	stb	r2,116(sp)
 402873c:	d8001d85 	stb	zero,118(sp)
 4028740:	88c00094 	ori	r3,r17,2
 4028744:	80009c16 	blt	r16,zero,40289b8 <___vfiprintf_internal_r+0x1368>
 4028748:	00bfdfc4 	movi	r2,-129
 402874c:	88a2703a 	and	r17,r17,r2
 4028750:	8c400094 	ori	r17,r17,2
 4028754:	002b883a 	mov	r21,zero
 4028758:	003f8506 	br	4028570 <__flash_rwdata_start+0xffff825c>
 402875c:	b029883a 	mov	r20,r22
 4028760:	003c0b06 	br	4027790 <__flash_rwdata_start+0xffff747c>
 4028764:	04e7c83a 	sub	r19,zero,r19
 4028768:	05400b44 	movi	r21,45
 402876c:	9804c03a 	cmpne	r2,r19,zero
 4028770:	0529c83a 	sub	r20,zero,r20
 4028774:	dd401d85 	stb	r21,118(sp)
 4028778:	a0a9c83a 	sub	r20,r20,r2
 402877c:	80009716 	blt	r16,zero,40289dc <___vfiprintf_internal_r+0x138c>
 4028780:	00bfdfc4 	movi	r2,-129
 4028784:	88a2703a 	and	r17,r17,r2
 4028788:	003db006 	br	4027e4c <__flash_rwdata_start+0xffff7b38>
 402878c:	b0c00007 	ldb	r3,0(r22)
 4028790:	003c0c06 	br	40277c4 <__flash_rwdata_start+0xffff74b0>
 4028794:	8880100c 	andi	r2,r17,64
 4028798:	d8001d85 	stb	zero,118(sp)
 402879c:	1000461e 	bne	r2,zero,40288b8 <___vfiprintf_internal_r+0x1268>
 40287a0:	d9002217 	ldw	r4,136(sp)
 40287a4:	0029883a 	mov	r20,zero
 40287a8:	20800104 	addi	r2,r4,4
 40287ac:	24c00017 	ldw	r19,0(r4)
 40287b0:	803df80e 	bge	r16,zero,4027f94 <__flash_rwdata_start+0xffff7c80>
 40287b4:	9d06b03a 	or	r3,r19,r20
 40287b8:	d8802215 	stw	r2,136(sp)
 40287bc:	183d5e1e 	bne	r3,zero,4027d38 <__flash_rwdata_start+0xffff7a24>
 40287c0:	002b883a 	mov	r21,zero
 40287c4:	0005883a 	mov	r2,zero
 40287c8:	003e1006 	br	402800c <__flash_rwdata_start+0xffff7cf8>
 40287cc:	8880040c 	andi	r2,r17,16
 40287d0:	1000321e 	bne	r2,zero,402889c <___vfiprintf_internal_r+0x124c>
 40287d4:	8c40100c 	andi	r17,r17,64
 40287d8:	88008d26 	beq	r17,zero,4028a10 <___vfiprintf_internal_r+0x13c0>
 40287dc:	d9402217 	ldw	r5,136(sp)
 40287e0:	d8c02417 	ldw	r3,144(sp)
 40287e4:	28800017 	ldw	r2,0(r5)
 40287e8:	29400104 	addi	r5,r5,4
 40287ec:	d9402215 	stw	r5,136(sp)
 40287f0:	10c0000d 	sth	r3,0(r2)
 40287f4:	003bca06 	br	4027720 <__flash_rwdata_start+0xffff740c>
 40287f8:	8880100c 	andi	r2,r17,64
 40287fc:	10003a26 	beq	r2,zero,40288e8 <___vfiprintf_internal_r+0x1298>
 4028800:	d8802217 	ldw	r2,136(sp)
 4028804:	14c0000f 	ldh	r19,0(r2)
 4028808:	10800104 	addi	r2,r2,4
 402880c:	d8802215 	stw	r2,136(sp)
 4028810:	9829d7fa 	srai	r20,r19,31
 4028814:	a005883a 	mov	r2,r20
 4028818:	003d8506 	br	4027e30 <__flash_rwdata_start+0xffff7b1c>
 402881c:	8880100c 	andi	r2,r17,64
 4028820:	10002b26 	beq	r2,zero,40288d0 <___vfiprintf_internal_r+0x1280>
 4028824:	d8802217 	ldw	r2,136(sp)
 4028828:	0029883a 	mov	r20,zero
 402882c:	14c0000b 	ldhu	r19,0(r2)
 4028830:	10800104 	addi	r2,r2,4
 4028834:	d8802215 	stw	r2,136(sp)
 4028838:	003d5d06 	br	4027db0 <__flash_rwdata_start+0xffff7a9c>
 402883c:	d9402017 	ldw	r5,128(sp)
 4028840:	d9002117 	ldw	r4,132(sp)
 4028844:	d9801a04 	addi	r6,sp,104
 4028848:	d8c02a15 	stw	r3,168(sp)
 402884c:	d9c02b15 	stw	r7,172(sp)
 4028850:	402753c0 	call	402753c <__sprint_r.part.0>
 4028854:	d8c02a17 	ldw	r3,168(sp)
 4028858:	d9c02b17 	ldw	r7,172(sp)
 402885c:	103eb41e 	bne	r2,zero,4028330 <__flash_rwdata_start+0xffff801c>
 4028860:	d9001b17 	ldw	r4,108(sp)
 4028864:	d8801c17 	ldw	r2,112(sp)
 4028868:	d811883a 	mov	r8,sp
 402886c:	21400044 	addi	r5,r4,1
 4028870:	003e6706 	br	4028210 <__flash_rwdata_start+0xffff7efc>
 4028874:	00bfffc4 	movi	r2,-1
 4028878:	003c4a06 	br	40279a4 <__flash_rwdata_start+0xffff7690>
 402887c:	9805883a 	mov	r2,r19
 4028880:	003ee806 	br	4028424 <__flash_rwdata_start+0xffff8110>
 4028884:	d8c02217 	ldw	r3,136(sp)
 4028888:	0029883a 	mov	r20,zero
 402888c:	18800104 	addi	r2,r3,4
 4028890:	1cc0000b 	ldhu	r19,0(r3)
 4028894:	803f9e0e 	bge	r16,zero,4028710 <__flash_rwdata_start+0xffff83fc>
 4028898:	003dd706 	br	4027ff8 <__flash_rwdata_start+0xffff7ce4>
 402889c:	d8c02217 	ldw	r3,136(sp)
 40288a0:	d9002417 	ldw	r4,144(sp)
 40288a4:	18800017 	ldw	r2,0(r3)
 40288a8:	18c00104 	addi	r3,r3,4
 40288ac:	d8c02215 	stw	r3,136(sp)
 40288b0:	11000015 	stw	r4,0(r2)
 40288b4:	003b9a06 	br	4027720 <__flash_rwdata_start+0xffff740c>
 40288b8:	d8c02217 	ldw	r3,136(sp)
 40288bc:	0029883a 	mov	r20,zero
 40288c0:	18800104 	addi	r2,r3,4
 40288c4:	1cc0000b 	ldhu	r19,0(r3)
 40288c8:	803db20e 	bge	r16,zero,4027f94 <__flash_rwdata_start+0xffff7c80>
 40288cc:	003fb906 	br	40287b4 <__flash_rwdata_start+0xffff84a0>
 40288d0:	d9002217 	ldw	r4,136(sp)
 40288d4:	0029883a 	mov	r20,zero
 40288d8:	24c00017 	ldw	r19,0(r4)
 40288dc:	21000104 	addi	r4,r4,4
 40288e0:	d9002215 	stw	r4,136(sp)
 40288e4:	003d3206 	br	4027db0 <__flash_rwdata_start+0xffff7a9c>
 40288e8:	d8c02217 	ldw	r3,136(sp)
 40288ec:	1cc00017 	ldw	r19,0(r3)
 40288f0:	18c00104 	addi	r3,r3,4
 40288f4:	d8c02215 	stw	r3,136(sp)
 40288f8:	9829d7fa 	srai	r20,r19,31
 40288fc:	a005883a 	mov	r2,r20
 4028900:	003d4b06 	br	4027e30 <__flash_rwdata_start+0xffff7b1c>
 4028904:	0009883a 	mov	r4,zero
 4028908:	01400044 	movi	r5,1
 402890c:	d811883a 	mov	r8,sp
 4028910:	003e4f06 	br	4028250 <__flash_rwdata_start+0xffff7f3c>
 4028914:	d8c02215 	stw	r3,136(sp)
 4028918:	002b883a 	mov	r21,zero
 402891c:	003db806 	br	4028000 <__flash_rwdata_start+0xffff7cec>
 4028920:	d811883a 	mov	r8,sp
 4028924:	003e9606 	br	4028380 <__flash_rwdata_start+0xffff806c>
 4028928:	01000034 	movhi	r4,0
 402892c:	21007c04 	addi	r4,r4,496
 4028930:	d9002315 	stw	r4,140(sp)
 4028934:	003e6306 	br	40282c4 <__flash_rwdata_start+0xffff7fb0>
 4028938:	b0c00043 	ldbu	r3,1(r22)
 402893c:	8c400814 	ori	r17,r17,32
 4028940:	b5800044 	addi	r22,r22,1
 4028944:	18c03fcc 	andi	r3,r3,255
 4028948:	18c0201c 	xori	r3,r3,128
 402894c:	18ffe004 	addi	r3,r3,-128
 4028950:	003b9c06 	br	40277c4 <__flash_rwdata_start+0xffff74b0>
 4028954:	b809883a 	mov	r4,r23
 4028958:	da002a15 	stw	r8,168(sp)
 402895c:	40274a40 	call	40274a4 <strlen>
 4028960:	1029883a 	mov	r20,r2
 4028964:	dd401d83 	ldbu	r21,118(sp)
 4028968:	df002215 	stw	fp,136(sp)
 402896c:	0021883a 	mov	r16,zero
 4028970:	da002a17 	ldw	r8,168(sp)
 4028974:	003c3906 	br	4027a5c <__flash_rwdata_start+0xffff7748>
 4028978:	d9402017 	ldw	r5,128(sp)
 402897c:	d9002117 	ldw	r4,132(sp)
 4028980:	d9801a04 	addi	r6,sp,104
 4028984:	402753c0 	call	402753c <__sprint_r.part.0>
 4028988:	103e691e 	bne	r2,zero,4028330 <__flash_rwdata_start+0xffff801c>
 402898c:	d9001b17 	ldw	r4,108(sp)
 4028990:	d8801c17 	ldw	r2,112(sp)
 4028994:	d811883a 	mov	r8,sp
 4028998:	21400044 	addi	r5,r4,1
 402899c:	003e2e06 	br	4028258 <__flash_rwdata_start+0xffff7f44>
 40289a0:	01000034 	movhi	r4,0
 40289a4:	21008004 	addi	r4,r4,512
 40289a8:	d9002315 	stw	r4,140(sp)
 40289ac:	d9001b17 	ldw	r4,108(sp)
 40289b0:	21000044 	addi	r4,r4,1
 40289b4:	003c5e06 	br	4027b30 <__flash_rwdata_start+0xffff781c>
 40289b8:	002b883a 	mov	r21,zero
 40289bc:	00800084 	movi	r2,2
 40289c0:	10803fcc 	andi	r2,r2,255
 40289c4:	01000044 	movi	r4,1
 40289c8:	11002b26 	beq	r2,r4,4028a78 <___vfiprintf_internal_r+0x1428>
 40289cc:	01000084 	movi	r4,2
 40289d0:	11002b1e 	bne	r2,r4,4028a80 <___vfiprintf_internal_r+0x1430>
 40289d4:	1823883a 	mov	r17,r3
 40289d8:	003ee506 	br	4028570 <__flash_rwdata_start+0xffff825c>
 40289dc:	8807883a 	mov	r3,r17
 40289e0:	00800044 	movi	r2,1
 40289e4:	003ff606 	br	40289c0 <__flash_rwdata_start+0xffff86ac>
 40289e8:	00800184 	movi	r2,6
 40289ec:	1400012e 	bgeu	r2,r16,40289f4 <___vfiprintf_internal_r+0x13a4>
 40289f0:	1021883a 	mov	r16,r2
 40289f4:	8029883a 	mov	r20,r16
 40289f8:	8027883a 	mov	r19,r16
 40289fc:	80002216 	blt	r16,zero,4028a88 <___vfiprintf_internal_r+0x1438>
 4028a00:	05c00034 	movhi	r23,0
 4028a04:	df002215 	stw	fp,136(sp)
 4028a08:	bdc02004 	addi	r23,r23,128
 4028a0c:	003cfb06 	br	4027dfc <__flash_rwdata_start+0xffff7ae8>
 4028a10:	d9002217 	ldw	r4,136(sp)
 4028a14:	d9402417 	ldw	r5,144(sp)
 4028a18:	20800017 	ldw	r2,0(r4)
 4028a1c:	21000104 	addi	r4,r4,4
 4028a20:	d9002215 	stw	r4,136(sp)
 4028a24:	11400015 	stw	r5,0(r2)
 4028a28:	003b3d06 	br	4027720 <__flash_rwdata_start+0xffff740c>
 4028a2c:	01400034 	movhi	r5,0
 4028a30:	29408004 	addi	r5,r5,512
 4028a34:	d9402315 	stw	r5,140(sp)
 4028a38:	d9401b17 	ldw	r5,108(sp)
 4028a3c:	29400044 	addi	r5,r5,1
 4028a40:	003e6d06 	br	40283f8 <__flash_rwdata_start+0xffff80e4>
 4028a44:	8029883a 	mov	r20,r16
 4028a48:	dd401d83 	ldbu	r21,118(sp)
 4028a4c:	df002215 	stw	fp,136(sp)
 4028a50:	0021883a 	mov	r16,zero
 4028a54:	003c0106 	br	4027a5c <__flash_rwdata_start+0xffff7748>
 4028a58:	00c00034 	movhi	r3,0
 4028a5c:	18c07c04 	addi	r3,r3,496
 4028a60:	d8c02315 	stw	r3,140(sp)
 4028a64:	280d883a 	mov	r6,r5
 4028a68:	003c6906 	br	4027c10 <__flash_rwdata_start+0xffff78fc>
 4028a6c:	802d883a 	mov	r22,r16
 4028a70:	0021883a 	mov	r16,zero
 4028a74:	003b5406 	br	40277c8 <__flash_rwdata_start+0xffff74b4>
 4028a78:	1823883a 	mov	r17,r3
 4028a7c:	003cf306 	br	4027e4c <__flash_rwdata_start+0xffff7b38>
 4028a80:	1823883a 	mov	r17,r3
 4028a84:	003cad06 	br	4027d3c <__flash_rwdata_start+0xffff7a28>
 4028a88:	0027883a 	mov	r19,zero
 4028a8c:	003fdc06 	br	4028a00 <__flash_rwdata_start+0xffff86ec>
 4028a90:	d9402217 	ldw	r5,136(sp)
 4028a94:	8005883a 	mov	r2,r16
 4028a98:	b0c00043 	ldbu	r3,1(r22)
 4028a9c:	2c000017 	ldw	r16,0(r5)
 4028aa0:	29000104 	addi	r4,r5,4
 4028aa4:	d9002215 	stw	r4,136(sp)
 4028aa8:	102d883a 	mov	r22,r2
 4028aac:	803fa50e 	bge	r16,zero,4028944 <__flash_rwdata_start+0xffff8630>
 4028ab0:	18c03fcc 	andi	r3,r3,255
 4028ab4:	18c0201c 	xori	r3,r3,128
 4028ab8:	043fffc4 	movi	r16,-1
 4028abc:	18ffe004 	addi	r3,r3,-128
 4028ac0:	003b4006 	br	40277c4 <__flash_rwdata_start+0xffff74b0>
 4028ac4:	d9402303 	ldbu	r5,140(sp)
 4028ac8:	d9401d85 	stb	r5,118(sp)
 4028acc:	003cae06 	br	4027d88 <__flash_rwdata_start+0xffff7a74>
 4028ad0:	d8c02303 	ldbu	r3,140(sp)
 4028ad4:	d8c01d85 	stb	r3,118(sp)
 4028ad8:	003d1406 	br	4027f2c <__flash_rwdata_start+0xffff7c18>
 4028adc:	d8c02303 	ldbu	r3,140(sp)
 4028ae0:	d8c01d85 	stb	r3,118(sp)
 4028ae4:	003cca06 	br	4027e10 <__flash_rwdata_start+0xffff7afc>
 4028ae8:	8880004c 	andi	r2,r17,1
 4028aec:	002b883a 	mov	r21,zero
 4028af0:	10000526 	beq	r2,zero,4028b08 <___vfiprintf_internal_r+0x14b8>
 4028af4:	00800c04 	movi	r2,48
 4028af8:	d88019c5 	stb	r2,103(sp)
 4028afc:	dd002817 	ldw	r20,160(sp)
 4028b00:	ddc019c4 	addi	r23,sp,103
 4028b04:	003bd506 	br	4027a5c <__flash_rwdata_start+0xffff7748>
 4028b08:	0029883a 	mov	r20,zero
 4028b0c:	ddc01a04 	addi	r23,sp,104
 4028b10:	003bd206 	br	4027a5c <__flash_rwdata_start+0xffff7748>
 4028b14:	d9002303 	ldbu	r4,140(sp)
 4028b18:	d9001d85 	stb	r4,118(sp)
 4028b1c:	003da606 	br	40281b8 <__flash_rwdata_start+0xffff7ea4>
 4028b20:	d8c02303 	ldbu	r3,140(sp)
 4028b24:	d8c01d85 	stb	r3,118(sp)
 4028b28:	003c7606 	br	4027d04 <__flash_rwdata_start+0xffff79f0>
 4028b2c:	d8c02303 	ldbu	r3,140(sp)
 4028b30:	d8c01d85 	stb	r3,118(sp)
 4028b34:	003c6506 	br	4027ccc <__flash_rwdata_start+0xffff79b8>
 4028b38:	d9002303 	ldbu	r4,140(sp)
 4028b3c:	d9001d85 	stb	r4,118(sp)
 4028b40:	003d3d06 	br	4028038 <__flash_rwdata_start+0xffff7d24>
 4028b44:	d8c02303 	ldbu	r3,140(sp)
 4028b48:	d8c01d85 	stb	r3,118(sp)
 4028b4c:	003d1d06 	br	4027fc4 <__flash_rwdata_start+0xffff7cb0>
 4028b50:	d8c02303 	ldbu	r3,140(sp)
 4028b54:	d8c01d85 	stb	r3,118(sp)
 4028b58:	003d0306 	br	4027f68 <__flash_rwdata_start+0xffff7c54>

04028b5c <__vfiprintf_internal>:
 4028b5c:	00800034 	movhi	r2,0
 4028b60:	10878b04 	addi	r2,r2,7724
 4028b64:	300f883a 	mov	r7,r6
 4028b68:	280d883a 	mov	r6,r5
 4028b6c:	200b883a 	mov	r5,r4
 4028b70:	11000017 	ldw	r4,0(r2)
 4028b74:	40276501 	jmpi	4027650 <___vfiprintf_internal_r>

04028b78 <__sbprintf>:
 4028b78:	2880030b 	ldhu	r2,12(r5)
 4028b7c:	2ac01917 	ldw	r11,100(r5)
 4028b80:	2a80038b 	ldhu	r10,14(r5)
 4028b84:	2a400717 	ldw	r9,28(r5)
 4028b88:	2a000917 	ldw	r8,36(r5)
 4028b8c:	defee204 	addi	sp,sp,-1144
 4028b90:	00c10004 	movi	r3,1024
 4028b94:	dc011a15 	stw	r16,1128(sp)
 4028b98:	10bfff4c 	andi	r2,r2,65533
 4028b9c:	2821883a 	mov	r16,r5
 4028ba0:	d8cb883a 	add	r5,sp,r3
 4028ba4:	dc811c15 	stw	r18,1136(sp)
 4028ba8:	dc411b15 	stw	r17,1132(sp)
 4028bac:	dfc11d15 	stw	ra,1140(sp)
 4028bb0:	2025883a 	mov	r18,r4
 4028bb4:	d881030d 	sth	r2,1036(sp)
 4028bb8:	dac11915 	stw	r11,1124(sp)
 4028bbc:	da81038d 	sth	r10,1038(sp)
 4028bc0:	da410715 	stw	r9,1052(sp)
 4028bc4:	da010915 	stw	r8,1060(sp)
 4028bc8:	dec10015 	stw	sp,1024(sp)
 4028bcc:	dec10415 	stw	sp,1040(sp)
 4028bd0:	d8c10215 	stw	r3,1032(sp)
 4028bd4:	d8c10515 	stw	r3,1044(sp)
 4028bd8:	d8010615 	stw	zero,1048(sp)
 4028bdc:	40276500 	call	4027650 <___vfiprintf_internal_r>
 4028be0:	1023883a 	mov	r17,r2
 4028be4:	10000416 	blt	r2,zero,4028bf8 <__sbprintf+0x80>
 4028be8:	d9410004 	addi	r5,sp,1024
 4028bec:	9009883a 	mov	r4,r18
 4028bf0:	402491c0 	call	402491c <_fflush_r>
 4028bf4:	10000d1e 	bne	r2,zero,4028c2c <__sbprintf+0xb4>
 4028bf8:	d881030b 	ldhu	r2,1036(sp)
 4028bfc:	1080100c 	andi	r2,r2,64
 4028c00:	10000326 	beq	r2,zero,4028c10 <__sbprintf+0x98>
 4028c04:	8080030b 	ldhu	r2,12(r16)
 4028c08:	10801014 	ori	r2,r2,64
 4028c0c:	8080030d 	sth	r2,12(r16)
 4028c10:	8805883a 	mov	r2,r17
 4028c14:	dfc11d17 	ldw	ra,1140(sp)
 4028c18:	dc811c17 	ldw	r18,1136(sp)
 4028c1c:	dc411b17 	ldw	r17,1132(sp)
 4028c20:	dc011a17 	ldw	r16,1128(sp)
 4028c24:	dec11e04 	addi	sp,sp,1144
 4028c28:	f800283a 	ret
 4028c2c:	047fffc4 	movi	r17,-1
 4028c30:	003ff106 	br	4028bf8 <__flash_rwdata_start+0xffff88e4>

04028c34 <_write_r>:
 4028c34:	defffd04 	addi	sp,sp,-12
 4028c38:	2805883a 	mov	r2,r5
 4028c3c:	dc000015 	stw	r16,0(sp)
 4028c40:	04000034 	movhi	r16,0
 4028c44:	dc400115 	stw	r17,4(sp)
 4028c48:	300b883a 	mov	r5,r6
 4028c4c:	8407a104 	addi	r16,r16,7812
 4028c50:	2023883a 	mov	r17,r4
 4028c54:	380d883a 	mov	r6,r7
 4028c58:	1009883a 	mov	r4,r2
 4028c5c:	dfc00215 	stw	ra,8(sp)
 4028c60:	80000015 	stw	zero,0(r16)
 4028c64:	402df3c0 	call	402df3c <write>
 4028c68:	00ffffc4 	movi	r3,-1
 4028c6c:	10c00526 	beq	r2,r3,4028c84 <_write_r+0x50>
 4028c70:	dfc00217 	ldw	ra,8(sp)
 4028c74:	dc400117 	ldw	r17,4(sp)
 4028c78:	dc000017 	ldw	r16,0(sp)
 4028c7c:	dec00304 	addi	sp,sp,12
 4028c80:	f800283a 	ret
 4028c84:	80c00017 	ldw	r3,0(r16)
 4028c88:	183ff926 	beq	r3,zero,4028c70 <__flash_rwdata_start+0xffff895c>
 4028c8c:	88c00015 	stw	r3,0(r17)
 4028c90:	003ff706 	br	4028c70 <__flash_rwdata_start+0xffff895c>

04028c94 <_close_r>:
 4028c94:	defffd04 	addi	sp,sp,-12
 4028c98:	dc000015 	stw	r16,0(sp)
 4028c9c:	04000034 	movhi	r16,0
 4028ca0:	dc400115 	stw	r17,4(sp)
 4028ca4:	8407a104 	addi	r16,r16,7812
 4028ca8:	2023883a 	mov	r17,r4
 4028cac:	2809883a 	mov	r4,r5
 4028cb0:	dfc00215 	stw	ra,8(sp)
 4028cb4:	80000015 	stw	zero,0(r16)
 4028cb8:	402d6b40 	call	402d6b4 <close>
 4028cbc:	00ffffc4 	movi	r3,-1
 4028cc0:	10c00526 	beq	r2,r3,4028cd8 <_close_r+0x44>
 4028cc4:	dfc00217 	ldw	ra,8(sp)
 4028cc8:	dc400117 	ldw	r17,4(sp)
 4028ccc:	dc000017 	ldw	r16,0(sp)
 4028cd0:	dec00304 	addi	sp,sp,12
 4028cd4:	f800283a 	ret
 4028cd8:	80c00017 	ldw	r3,0(r16)
 4028cdc:	183ff926 	beq	r3,zero,4028cc4 <__flash_rwdata_start+0xffff89b0>
 4028ce0:	88c00015 	stw	r3,0(r17)
 4028ce4:	003ff706 	br	4028cc4 <__flash_rwdata_start+0xffff89b0>

04028ce8 <_calloc_r>:
 4028ce8:	defffe04 	addi	sp,sp,-8
 4028cec:	2805883a 	mov	r2,r5
 4028cf0:	dc000015 	stw	r16,0(sp)
 4028cf4:	300b883a 	mov	r5,r6
 4028cf8:	2021883a 	mov	r16,r4
 4028cfc:	1009883a 	mov	r4,r2
 4028d00:	dfc00115 	stw	ra,4(sp)
 4028d04:	40208380 	call	4020838 <__mulsi3>
 4028d08:	100b883a 	mov	r5,r2
 4028d0c:	8009883a 	mov	r4,r16
 4028d10:	40255ac0 	call	40255ac <_malloc_r>
 4028d14:	10002926 	beq	r2,zero,4028dbc <_calloc_r+0xd4>
 4028d18:	11bfff17 	ldw	r6,-4(r2)
 4028d1c:	1021883a 	mov	r16,r2
 4028d20:	00bfff04 	movi	r2,-4
 4028d24:	308c703a 	and	r6,r6,r2
 4028d28:	00c00904 	movi	r3,36
 4028d2c:	308d883a 	add	r6,r6,r2
 4028d30:	19801636 	bltu	r3,r6,4028d8c <_calloc_r+0xa4>
 4028d34:	008004c4 	movi	r2,19
 4028d38:	11800b2e 	bgeu	r2,r6,4028d68 <_calloc_r+0x80>
 4028d3c:	80000015 	stw	zero,0(r16)
 4028d40:	80000115 	stw	zero,4(r16)
 4028d44:	008006c4 	movi	r2,27
 4028d48:	11801a2e 	bgeu	r2,r6,4028db4 <_calloc_r+0xcc>
 4028d4c:	80000215 	stw	zero,8(r16)
 4028d50:	80000315 	stw	zero,12(r16)
 4028d54:	30c0151e 	bne	r6,r3,4028dac <_calloc_r+0xc4>
 4028d58:	80000415 	stw	zero,16(r16)
 4028d5c:	80800604 	addi	r2,r16,24
 4028d60:	80000515 	stw	zero,20(r16)
 4028d64:	00000106 	br	4028d6c <_calloc_r+0x84>
 4028d68:	8005883a 	mov	r2,r16
 4028d6c:	10000015 	stw	zero,0(r2)
 4028d70:	10000115 	stw	zero,4(r2)
 4028d74:	10000215 	stw	zero,8(r2)
 4028d78:	8005883a 	mov	r2,r16
 4028d7c:	dfc00117 	ldw	ra,4(sp)
 4028d80:	dc000017 	ldw	r16,0(sp)
 4028d84:	dec00204 	addi	sp,sp,8
 4028d88:	f800283a 	ret
 4028d8c:	000b883a 	mov	r5,zero
 4028d90:	8009883a 	mov	r4,r16
 4028d94:	4025fe40 	call	4025fe4 <memset>
 4028d98:	8005883a 	mov	r2,r16
 4028d9c:	dfc00117 	ldw	ra,4(sp)
 4028da0:	dc000017 	ldw	r16,0(sp)
 4028da4:	dec00204 	addi	sp,sp,8
 4028da8:	f800283a 	ret
 4028dac:	80800404 	addi	r2,r16,16
 4028db0:	003fee06 	br	4028d6c <__flash_rwdata_start+0xffff8a58>
 4028db4:	80800204 	addi	r2,r16,8
 4028db8:	003fec06 	br	4028d6c <__flash_rwdata_start+0xffff8a58>
 4028dbc:	0005883a 	mov	r2,zero
 4028dc0:	003fee06 	br	4028d7c <__flash_rwdata_start+0xffff8a68>

04028dc4 <_fclose_r>:
 4028dc4:	28003926 	beq	r5,zero,4028eac <_fclose_r+0xe8>
 4028dc8:	defffc04 	addi	sp,sp,-16
 4028dcc:	dc400115 	stw	r17,4(sp)
 4028dd0:	dc000015 	stw	r16,0(sp)
 4028dd4:	dfc00315 	stw	ra,12(sp)
 4028dd8:	dc800215 	stw	r18,8(sp)
 4028ddc:	2023883a 	mov	r17,r4
 4028de0:	2821883a 	mov	r16,r5
 4028de4:	20000226 	beq	r4,zero,4028df0 <_fclose_r+0x2c>
 4028de8:	20800e17 	ldw	r2,56(r4)
 4028dec:	10002726 	beq	r2,zero,4028e8c <_fclose_r+0xc8>
 4028df0:	8080030f 	ldh	r2,12(r16)
 4028df4:	1000071e 	bne	r2,zero,4028e14 <_fclose_r+0x50>
 4028df8:	0005883a 	mov	r2,zero
 4028dfc:	dfc00317 	ldw	ra,12(sp)
 4028e00:	dc800217 	ldw	r18,8(sp)
 4028e04:	dc400117 	ldw	r17,4(sp)
 4028e08:	dc000017 	ldw	r16,0(sp)
 4028e0c:	dec00404 	addi	sp,sp,16
 4028e10:	f800283a 	ret
 4028e14:	800b883a 	mov	r5,r16
 4028e18:	8809883a 	mov	r4,r17
 4028e1c:	40247000 	call	4024700 <__sflush_r>
 4028e20:	1025883a 	mov	r18,r2
 4028e24:	80800b17 	ldw	r2,44(r16)
 4028e28:	10000426 	beq	r2,zero,4028e3c <_fclose_r+0x78>
 4028e2c:	81400717 	ldw	r5,28(r16)
 4028e30:	8809883a 	mov	r4,r17
 4028e34:	103ee83a 	callr	r2
 4028e38:	10001616 	blt	r2,zero,4028e94 <_fclose_r+0xd0>
 4028e3c:	8080030b 	ldhu	r2,12(r16)
 4028e40:	1080200c 	andi	r2,r2,128
 4028e44:	1000151e 	bne	r2,zero,4028e9c <_fclose_r+0xd8>
 4028e48:	81400c17 	ldw	r5,48(r16)
 4028e4c:	28000526 	beq	r5,zero,4028e64 <_fclose_r+0xa0>
 4028e50:	80801004 	addi	r2,r16,64
 4028e54:	28800226 	beq	r5,r2,4028e60 <_fclose_r+0x9c>
 4028e58:	8809883a 	mov	r4,r17
 4028e5c:	4024e7c0 	call	4024e7c <_free_r>
 4028e60:	80000c15 	stw	zero,48(r16)
 4028e64:	81401117 	ldw	r5,68(r16)
 4028e68:	28000326 	beq	r5,zero,4028e78 <_fclose_r+0xb4>
 4028e6c:	8809883a 	mov	r4,r17
 4028e70:	4024e7c0 	call	4024e7c <_free_r>
 4028e74:	80001115 	stw	zero,68(r16)
 4028e78:	4024d180 	call	4024d18 <__sfp_lock_acquire>
 4028e7c:	8000030d 	sth	zero,12(r16)
 4028e80:	4024d1c0 	call	4024d1c <__sfp_lock_release>
 4028e84:	9005883a 	mov	r2,r18
 4028e88:	003fdc06 	br	4028dfc <__flash_rwdata_start+0xffff8ae8>
 4028e8c:	4024d080 	call	4024d08 <__sinit>
 4028e90:	003fd706 	br	4028df0 <__flash_rwdata_start+0xffff8adc>
 4028e94:	04bfffc4 	movi	r18,-1
 4028e98:	003fe806 	br	4028e3c <__flash_rwdata_start+0xffff8b28>
 4028e9c:	81400417 	ldw	r5,16(r16)
 4028ea0:	8809883a 	mov	r4,r17
 4028ea4:	4024e7c0 	call	4024e7c <_free_r>
 4028ea8:	003fe706 	br	4028e48 <__flash_rwdata_start+0xffff8b34>
 4028eac:	0005883a 	mov	r2,zero
 4028eb0:	f800283a 	ret

04028eb4 <fclose>:
 4028eb4:	00800034 	movhi	r2,0
 4028eb8:	10878b04 	addi	r2,r2,7724
 4028ebc:	200b883a 	mov	r5,r4
 4028ec0:	11000017 	ldw	r4,0(r2)
 4028ec4:	4028dc41 	jmpi	4028dc4 <_fclose_r>

04028ec8 <__fputwc>:
 4028ec8:	defff804 	addi	sp,sp,-32
 4028ecc:	dcc00415 	stw	r19,16(sp)
 4028ed0:	dc800315 	stw	r18,12(sp)
 4028ed4:	dc000115 	stw	r16,4(sp)
 4028ed8:	dfc00715 	stw	ra,28(sp)
 4028edc:	dd400615 	stw	r21,24(sp)
 4028ee0:	dd000515 	stw	r20,20(sp)
 4028ee4:	dc400215 	stw	r17,8(sp)
 4028ee8:	2027883a 	mov	r19,r4
 4028eec:	2825883a 	mov	r18,r5
 4028ef0:	3021883a 	mov	r16,r6
 4028ef4:	402539c0 	call	402539c <__locale_mb_cur_max>
 4028ef8:	00c00044 	movi	r3,1
 4028efc:	10c03e26 	beq	r2,r3,4028ff8 <__fputwc+0x130>
 4028f00:	81c01704 	addi	r7,r16,92
 4028f04:	900d883a 	mov	r6,r18
 4028f08:	d80b883a 	mov	r5,sp
 4028f0c:	9809883a 	mov	r4,r19
 4028f10:	4029f200 	call	4029f20 <_wcrtomb_r>
 4028f14:	1029883a 	mov	r20,r2
 4028f18:	00bfffc4 	movi	r2,-1
 4028f1c:	a0802026 	beq	r20,r2,4028fa0 <__fputwc+0xd8>
 4028f20:	d9400003 	ldbu	r5,0(sp)
 4028f24:	a0001c26 	beq	r20,zero,4028f98 <__fputwc+0xd0>
 4028f28:	0023883a 	mov	r17,zero
 4028f2c:	05400284 	movi	r21,10
 4028f30:	00000906 	br	4028f58 <__fputwc+0x90>
 4028f34:	80800017 	ldw	r2,0(r16)
 4028f38:	11400005 	stb	r5,0(r2)
 4028f3c:	80c00017 	ldw	r3,0(r16)
 4028f40:	18c00044 	addi	r3,r3,1
 4028f44:	80c00015 	stw	r3,0(r16)
 4028f48:	8c400044 	addi	r17,r17,1
 4028f4c:	dc45883a 	add	r2,sp,r17
 4028f50:	8d00112e 	bgeu	r17,r20,4028f98 <__fputwc+0xd0>
 4028f54:	11400003 	ldbu	r5,0(r2)
 4028f58:	80c00217 	ldw	r3,8(r16)
 4028f5c:	18ffffc4 	addi	r3,r3,-1
 4028f60:	80c00215 	stw	r3,8(r16)
 4028f64:	183ff30e 	bge	r3,zero,4028f34 <__flash_rwdata_start+0xffff8c20>
 4028f68:	80800617 	ldw	r2,24(r16)
 4028f6c:	18801916 	blt	r3,r2,4028fd4 <__fputwc+0x10c>
 4028f70:	80800017 	ldw	r2,0(r16)
 4028f74:	11400005 	stb	r5,0(r2)
 4028f78:	80800017 	ldw	r2,0(r16)
 4028f7c:	10c00003 	ldbu	r3,0(r2)
 4028f80:	10800044 	addi	r2,r2,1
 4028f84:	1d402326 	beq	r3,r21,4029014 <__fputwc+0x14c>
 4028f88:	80800015 	stw	r2,0(r16)
 4028f8c:	8c400044 	addi	r17,r17,1
 4028f90:	dc45883a 	add	r2,sp,r17
 4028f94:	8d3fef36 	bltu	r17,r20,4028f54 <__flash_rwdata_start+0xffff8c40>
 4028f98:	9005883a 	mov	r2,r18
 4028f9c:	00000406 	br	4028fb0 <__fputwc+0xe8>
 4028fa0:	80c0030b 	ldhu	r3,12(r16)
 4028fa4:	a005883a 	mov	r2,r20
 4028fa8:	18c01014 	ori	r3,r3,64
 4028fac:	80c0030d 	sth	r3,12(r16)
 4028fb0:	dfc00717 	ldw	ra,28(sp)
 4028fb4:	dd400617 	ldw	r21,24(sp)
 4028fb8:	dd000517 	ldw	r20,20(sp)
 4028fbc:	dcc00417 	ldw	r19,16(sp)
 4028fc0:	dc800317 	ldw	r18,12(sp)
 4028fc4:	dc400217 	ldw	r17,8(sp)
 4028fc8:	dc000117 	ldw	r16,4(sp)
 4028fcc:	dec00804 	addi	sp,sp,32
 4028fd0:	f800283a 	ret
 4028fd4:	800d883a 	mov	r6,r16
 4028fd8:	29403fcc 	andi	r5,r5,255
 4028fdc:	9809883a 	mov	r4,r19
 4028fe0:	4029dc80 	call	4029dc8 <__swbuf_r>
 4028fe4:	10bfffe0 	cmpeqi	r2,r2,-1
 4028fe8:	10803fcc 	andi	r2,r2,255
 4028fec:	103fd626 	beq	r2,zero,4028f48 <__flash_rwdata_start+0xffff8c34>
 4028ff0:	00bfffc4 	movi	r2,-1
 4028ff4:	003fee06 	br	4028fb0 <__flash_rwdata_start+0xffff8c9c>
 4028ff8:	90ffffc4 	addi	r3,r18,-1
 4028ffc:	01003f84 	movi	r4,254
 4029000:	20ffbf36 	bltu	r4,r3,4028f00 <__flash_rwdata_start+0xffff8bec>
 4029004:	900b883a 	mov	r5,r18
 4029008:	dc800005 	stb	r18,0(sp)
 402900c:	1029883a 	mov	r20,r2
 4029010:	003fc506 	br	4028f28 <__flash_rwdata_start+0xffff8c14>
 4029014:	800d883a 	mov	r6,r16
 4029018:	a80b883a 	mov	r5,r21
 402901c:	9809883a 	mov	r4,r19
 4029020:	4029dc80 	call	4029dc8 <__swbuf_r>
 4029024:	10bfffe0 	cmpeqi	r2,r2,-1
 4029028:	003fef06 	br	4028fe8 <__flash_rwdata_start+0xffff8cd4>

0402902c <_fputwc_r>:
 402902c:	3080030b 	ldhu	r2,12(r6)
 4029030:	10c8000c 	andi	r3,r2,8192
 4029034:	1800051e 	bne	r3,zero,402904c <_fputwc_r+0x20>
 4029038:	30c01917 	ldw	r3,100(r6)
 402903c:	10880014 	ori	r2,r2,8192
 4029040:	3080030d 	sth	r2,12(r6)
 4029044:	18880014 	ori	r2,r3,8192
 4029048:	30801915 	stw	r2,100(r6)
 402904c:	4028ec81 	jmpi	4028ec8 <__fputwc>

04029050 <fputwc>:
 4029050:	00800034 	movhi	r2,0
 4029054:	defffc04 	addi	sp,sp,-16
 4029058:	10878b04 	addi	r2,r2,7724
 402905c:	dc000115 	stw	r16,4(sp)
 4029060:	14000017 	ldw	r16,0(r2)
 4029064:	dc400215 	stw	r17,8(sp)
 4029068:	dfc00315 	stw	ra,12(sp)
 402906c:	2023883a 	mov	r17,r4
 4029070:	80000226 	beq	r16,zero,402907c <fputwc+0x2c>
 4029074:	80800e17 	ldw	r2,56(r16)
 4029078:	10001026 	beq	r2,zero,40290bc <fputwc+0x6c>
 402907c:	2880030b 	ldhu	r2,12(r5)
 4029080:	10c8000c 	andi	r3,r2,8192
 4029084:	1800051e 	bne	r3,zero,402909c <fputwc+0x4c>
 4029088:	28c01917 	ldw	r3,100(r5)
 402908c:	10880014 	ori	r2,r2,8192
 4029090:	2880030d 	sth	r2,12(r5)
 4029094:	18880014 	ori	r2,r3,8192
 4029098:	28801915 	stw	r2,100(r5)
 402909c:	280d883a 	mov	r6,r5
 40290a0:	8009883a 	mov	r4,r16
 40290a4:	880b883a 	mov	r5,r17
 40290a8:	dfc00317 	ldw	ra,12(sp)
 40290ac:	dc400217 	ldw	r17,8(sp)
 40290b0:	dc000117 	ldw	r16,4(sp)
 40290b4:	dec00404 	addi	sp,sp,16
 40290b8:	4028ec81 	jmpi	4028ec8 <__fputwc>
 40290bc:	8009883a 	mov	r4,r16
 40290c0:	d9400015 	stw	r5,0(sp)
 40290c4:	4024d080 	call	4024d08 <__sinit>
 40290c8:	d9400017 	ldw	r5,0(sp)
 40290cc:	003feb06 	br	402907c <__flash_rwdata_start+0xffff8d68>

040290d0 <_fstat_r>:
 40290d0:	defffd04 	addi	sp,sp,-12
 40290d4:	2805883a 	mov	r2,r5
 40290d8:	dc000015 	stw	r16,0(sp)
 40290dc:	04000034 	movhi	r16,0
 40290e0:	dc400115 	stw	r17,4(sp)
 40290e4:	8407a104 	addi	r16,r16,7812
 40290e8:	2023883a 	mov	r17,r4
 40290ec:	300b883a 	mov	r5,r6
 40290f0:	1009883a 	mov	r4,r2
 40290f4:	dfc00215 	stw	ra,8(sp)
 40290f8:	80000015 	stw	zero,0(r16)
 40290fc:	402d7f40 	call	402d7f4 <fstat>
 4029100:	00ffffc4 	movi	r3,-1
 4029104:	10c00526 	beq	r2,r3,402911c <_fstat_r+0x4c>
 4029108:	dfc00217 	ldw	ra,8(sp)
 402910c:	dc400117 	ldw	r17,4(sp)
 4029110:	dc000017 	ldw	r16,0(sp)
 4029114:	dec00304 	addi	sp,sp,12
 4029118:	f800283a 	ret
 402911c:	80c00017 	ldw	r3,0(r16)
 4029120:	183ff926 	beq	r3,zero,4029108 <__flash_rwdata_start+0xffff8df4>
 4029124:	88c00015 	stw	r3,0(r17)
 4029128:	003ff706 	br	4029108 <__flash_rwdata_start+0xffff8df4>

0402912c <__sfvwrite_r>:
 402912c:	30800217 	ldw	r2,8(r6)
 4029130:	10006726 	beq	r2,zero,40292d0 <__sfvwrite_r+0x1a4>
 4029134:	28c0030b 	ldhu	r3,12(r5)
 4029138:	defff404 	addi	sp,sp,-48
 402913c:	dd400715 	stw	r21,28(sp)
 4029140:	dd000615 	stw	r20,24(sp)
 4029144:	dc000215 	stw	r16,8(sp)
 4029148:	dfc00b15 	stw	ra,44(sp)
 402914c:	df000a15 	stw	fp,40(sp)
 4029150:	ddc00915 	stw	r23,36(sp)
 4029154:	dd800815 	stw	r22,32(sp)
 4029158:	dcc00515 	stw	r19,20(sp)
 402915c:	dc800415 	stw	r18,16(sp)
 4029160:	dc400315 	stw	r17,12(sp)
 4029164:	1880020c 	andi	r2,r3,8
 4029168:	2821883a 	mov	r16,r5
 402916c:	202b883a 	mov	r21,r4
 4029170:	3029883a 	mov	r20,r6
 4029174:	10002726 	beq	r2,zero,4029214 <__sfvwrite_r+0xe8>
 4029178:	28800417 	ldw	r2,16(r5)
 402917c:	10002526 	beq	r2,zero,4029214 <__sfvwrite_r+0xe8>
 4029180:	1880008c 	andi	r2,r3,2
 4029184:	a4400017 	ldw	r17,0(r20)
 4029188:	10002a26 	beq	r2,zero,4029234 <__sfvwrite_r+0x108>
 402918c:	05a00034 	movhi	r22,32768
 4029190:	0027883a 	mov	r19,zero
 4029194:	0025883a 	mov	r18,zero
 4029198:	b5bf0004 	addi	r22,r22,-1024
 402919c:	980d883a 	mov	r6,r19
 40291a0:	a809883a 	mov	r4,r21
 40291a4:	90004626 	beq	r18,zero,40292c0 <__sfvwrite_r+0x194>
 40291a8:	900f883a 	mov	r7,r18
 40291ac:	b480022e 	bgeu	r22,r18,40291b8 <__sfvwrite_r+0x8c>
 40291b0:	01e00034 	movhi	r7,32768
 40291b4:	39ff0004 	addi	r7,r7,-1024
 40291b8:	80800917 	ldw	r2,36(r16)
 40291bc:	81400717 	ldw	r5,28(r16)
 40291c0:	103ee83a 	callr	r2
 40291c4:	00805a0e 	bge	zero,r2,4029330 <__sfvwrite_r+0x204>
 40291c8:	a0c00217 	ldw	r3,8(r20)
 40291cc:	98a7883a 	add	r19,r19,r2
 40291d0:	90a5c83a 	sub	r18,r18,r2
 40291d4:	1885c83a 	sub	r2,r3,r2
 40291d8:	a0800215 	stw	r2,8(r20)
 40291dc:	103fef1e 	bne	r2,zero,402919c <__flash_rwdata_start+0xffff8e88>
 40291e0:	0005883a 	mov	r2,zero
 40291e4:	dfc00b17 	ldw	ra,44(sp)
 40291e8:	df000a17 	ldw	fp,40(sp)
 40291ec:	ddc00917 	ldw	r23,36(sp)
 40291f0:	dd800817 	ldw	r22,32(sp)
 40291f4:	dd400717 	ldw	r21,28(sp)
 40291f8:	dd000617 	ldw	r20,24(sp)
 40291fc:	dcc00517 	ldw	r19,20(sp)
 4029200:	dc800417 	ldw	r18,16(sp)
 4029204:	dc400317 	ldw	r17,12(sp)
 4029208:	dc000217 	ldw	r16,8(sp)
 402920c:	dec00c04 	addi	sp,sp,48
 4029210:	f800283a 	ret
 4029214:	800b883a 	mov	r5,r16
 4029218:	a809883a 	mov	r4,r21
 402921c:	4022cfc0 	call	4022cfc <__swsetup_r>
 4029220:	1000ee1e 	bne	r2,zero,40295dc <__sfvwrite_r+0x4b0>
 4029224:	80c0030b 	ldhu	r3,12(r16)
 4029228:	a4400017 	ldw	r17,0(r20)
 402922c:	1880008c 	andi	r2,r3,2
 4029230:	103fd61e 	bne	r2,zero,402918c <__flash_rwdata_start+0xffff8e78>
 4029234:	1880004c 	andi	r2,r3,1
 4029238:	1000421e 	bne	r2,zero,4029344 <__sfvwrite_r+0x218>
 402923c:	0039883a 	mov	fp,zero
 4029240:	0025883a 	mov	r18,zero
 4029244:	90001a26 	beq	r18,zero,40292b0 <__sfvwrite_r+0x184>
 4029248:	1880800c 	andi	r2,r3,512
 402924c:	84c00217 	ldw	r19,8(r16)
 4029250:	10002126 	beq	r2,zero,40292d8 <__sfvwrite_r+0x1ac>
 4029254:	982f883a 	mov	r23,r19
 4029258:	94c09636 	bltu	r18,r19,40294b4 <__sfvwrite_r+0x388>
 402925c:	1881200c 	andi	r2,r3,1152
 4029260:	1000a11e 	bne	r2,zero,40294e8 <__sfvwrite_r+0x3bc>
 4029264:	81000017 	ldw	r4,0(r16)
 4029268:	b80d883a 	mov	r6,r23
 402926c:	e00b883a 	mov	r5,fp
 4029270:	40296a80 	call	40296a8 <memmove>
 4029274:	80c00217 	ldw	r3,8(r16)
 4029278:	81000017 	ldw	r4,0(r16)
 402927c:	9005883a 	mov	r2,r18
 4029280:	1ce7c83a 	sub	r19,r3,r19
 4029284:	25cf883a 	add	r7,r4,r23
 4029288:	84c00215 	stw	r19,8(r16)
 402928c:	81c00015 	stw	r7,0(r16)
 4029290:	a0c00217 	ldw	r3,8(r20)
 4029294:	e0b9883a 	add	fp,fp,r2
 4029298:	90a5c83a 	sub	r18,r18,r2
 402929c:	18a7c83a 	sub	r19,r3,r2
 40292a0:	a4c00215 	stw	r19,8(r20)
 40292a4:	983fce26 	beq	r19,zero,40291e0 <__flash_rwdata_start+0xffff8ecc>
 40292a8:	80c0030b 	ldhu	r3,12(r16)
 40292ac:	903fe61e 	bne	r18,zero,4029248 <__flash_rwdata_start+0xffff8f34>
 40292b0:	8f000017 	ldw	fp,0(r17)
 40292b4:	8c800117 	ldw	r18,4(r17)
 40292b8:	8c400204 	addi	r17,r17,8
 40292bc:	003fe106 	br	4029244 <__flash_rwdata_start+0xffff8f30>
 40292c0:	8cc00017 	ldw	r19,0(r17)
 40292c4:	8c800117 	ldw	r18,4(r17)
 40292c8:	8c400204 	addi	r17,r17,8
 40292cc:	003fb306 	br	402919c <__flash_rwdata_start+0xffff8e88>
 40292d0:	0005883a 	mov	r2,zero
 40292d4:	f800283a 	ret
 40292d8:	81000017 	ldw	r4,0(r16)
 40292dc:	80800417 	ldw	r2,16(r16)
 40292e0:	11005a36 	bltu	r2,r4,402944c <__sfvwrite_r+0x320>
 40292e4:	85c00517 	ldw	r23,20(r16)
 40292e8:	95c05836 	bltu	r18,r23,402944c <__sfvwrite_r+0x320>
 40292ec:	00a00034 	movhi	r2,32768
 40292f0:	10bfffc4 	addi	r2,r2,-1
 40292f4:	9009883a 	mov	r4,r18
 40292f8:	1480012e 	bgeu	r2,r18,4029300 <__sfvwrite_r+0x1d4>
 40292fc:	1009883a 	mov	r4,r2
 4029300:	b80b883a 	mov	r5,r23
 4029304:	40206840 	call	4020684 <__divsi3>
 4029308:	b80b883a 	mov	r5,r23
 402930c:	1009883a 	mov	r4,r2
 4029310:	40208380 	call	4020838 <__mulsi3>
 4029314:	81400717 	ldw	r5,28(r16)
 4029318:	80c00917 	ldw	r3,36(r16)
 402931c:	100f883a 	mov	r7,r2
 4029320:	e00d883a 	mov	r6,fp
 4029324:	a809883a 	mov	r4,r21
 4029328:	183ee83a 	callr	r3
 402932c:	00bfd816 	blt	zero,r2,4029290 <__flash_rwdata_start+0xffff8f7c>
 4029330:	8080030b 	ldhu	r2,12(r16)
 4029334:	10801014 	ori	r2,r2,64
 4029338:	8080030d 	sth	r2,12(r16)
 402933c:	00bfffc4 	movi	r2,-1
 4029340:	003fa806 	br	40291e4 <__flash_rwdata_start+0xffff8ed0>
 4029344:	0027883a 	mov	r19,zero
 4029348:	0011883a 	mov	r8,zero
 402934c:	0039883a 	mov	fp,zero
 4029350:	0025883a 	mov	r18,zero
 4029354:	90001f26 	beq	r18,zero,40293d4 <__sfvwrite_r+0x2a8>
 4029358:	40005a26 	beq	r8,zero,40294c4 <__sfvwrite_r+0x398>
 402935c:	982d883a 	mov	r22,r19
 4029360:	94c0012e 	bgeu	r18,r19,4029368 <__sfvwrite_r+0x23c>
 4029364:	902d883a 	mov	r22,r18
 4029368:	81000017 	ldw	r4,0(r16)
 402936c:	80800417 	ldw	r2,16(r16)
 4029370:	b02f883a 	mov	r23,r22
 4029374:	81c00517 	ldw	r7,20(r16)
 4029378:	1100032e 	bgeu	r2,r4,4029388 <__sfvwrite_r+0x25c>
 402937c:	80c00217 	ldw	r3,8(r16)
 4029380:	38c7883a 	add	r3,r7,r3
 4029384:	1d801816 	blt	r3,r22,40293e8 <__sfvwrite_r+0x2bc>
 4029388:	b1c03e16 	blt	r22,r7,4029484 <__sfvwrite_r+0x358>
 402938c:	80800917 	ldw	r2,36(r16)
 4029390:	81400717 	ldw	r5,28(r16)
 4029394:	e00d883a 	mov	r6,fp
 4029398:	da000115 	stw	r8,4(sp)
 402939c:	a809883a 	mov	r4,r21
 40293a0:	103ee83a 	callr	r2
 40293a4:	102f883a 	mov	r23,r2
 40293a8:	da000117 	ldw	r8,4(sp)
 40293ac:	00bfe00e 	bge	zero,r2,4029330 <__flash_rwdata_start+0xffff901c>
 40293b0:	9de7c83a 	sub	r19,r19,r23
 40293b4:	98001f26 	beq	r19,zero,4029434 <__sfvwrite_r+0x308>
 40293b8:	a0800217 	ldw	r2,8(r20)
 40293bc:	e5f9883a 	add	fp,fp,r23
 40293c0:	95e5c83a 	sub	r18,r18,r23
 40293c4:	15efc83a 	sub	r23,r2,r23
 40293c8:	a5c00215 	stw	r23,8(r20)
 40293cc:	b83f8426 	beq	r23,zero,40291e0 <__flash_rwdata_start+0xffff8ecc>
 40293d0:	903fe11e 	bne	r18,zero,4029358 <__flash_rwdata_start+0xffff9044>
 40293d4:	8f000017 	ldw	fp,0(r17)
 40293d8:	8c800117 	ldw	r18,4(r17)
 40293dc:	0011883a 	mov	r8,zero
 40293e0:	8c400204 	addi	r17,r17,8
 40293e4:	003fdb06 	br	4029354 <__flash_rwdata_start+0xffff9040>
 40293e8:	180d883a 	mov	r6,r3
 40293ec:	e00b883a 	mov	r5,fp
 40293f0:	da000115 	stw	r8,4(sp)
 40293f4:	d8c00015 	stw	r3,0(sp)
 40293f8:	40296a80 	call	40296a8 <memmove>
 40293fc:	d8c00017 	ldw	r3,0(sp)
 4029400:	80800017 	ldw	r2,0(r16)
 4029404:	800b883a 	mov	r5,r16
 4029408:	a809883a 	mov	r4,r21
 402940c:	10c5883a 	add	r2,r2,r3
 4029410:	80800015 	stw	r2,0(r16)
 4029414:	d8c00015 	stw	r3,0(sp)
 4029418:	402491c0 	call	402491c <_fflush_r>
 402941c:	d8c00017 	ldw	r3,0(sp)
 4029420:	da000117 	ldw	r8,4(sp)
 4029424:	103fc21e 	bne	r2,zero,4029330 <__flash_rwdata_start+0xffff901c>
 4029428:	182f883a 	mov	r23,r3
 402942c:	9de7c83a 	sub	r19,r19,r23
 4029430:	983fe11e 	bne	r19,zero,40293b8 <__flash_rwdata_start+0xffff90a4>
 4029434:	800b883a 	mov	r5,r16
 4029438:	a809883a 	mov	r4,r21
 402943c:	402491c0 	call	402491c <_fflush_r>
 4029440:	103fbb1e 	bne	r2,zero,4029330 <__flash_rwdata_start+0xffff901c>
 4029444:	0011883a 	mov	r8,zero
 4029448:	003fdb06 	br	40293b8 <__flash_rwdata_start+0xffff90a4>
 402944c:	94c0012e 	bgeu	r18,r19,4029454 <__sfvwrite_r+0x328>
 4029450:	9027883a 	mov	r19,r18
 4029454:	980d883a 	mov	r6,r19
 4029458:	e00b883a 	mov	r5,fp
 402945c:	40296a80 	call	40296a8 <memmove>
 4029460:	80800217 	ldw	r2,8(r16)
 4029464:	80c00017 	ldw	r3,0(r16)
 4029468:	14c5c83a 	sub	r2,r2,r19
 402946c:	1cc7883a 	add	r3,r3,r19
 4029470:	80800215 	stw	r2,8(r16)
 4029474:	80c00015 	stw	r3,0(r16)
 4029478:	10004326 	beq	r2,zero,4029588 <__sfvwrite_r+0x45c>
 402947c:	9805883a 	mov	r2,r19
 4029480:	003f8306 	br	4029290 <__flash_rwdata_start+0xffff8f7c>
 4029484:	b00d883a 	mov	r6,r22
 4029488:	e00b883a 	mov	r5,fp
 402948c:	da000115 	stw	r8,4(sp)
 4029490:	40296a80 	call	40296a8 <memmove>
 4029494:	80800217 	ldw	r2,8(r16)
 4029498:	80c00017 	ldw	r3,0(r16)
 402949c:	da000117 	ldw	r8,4(sp)
 40294a0:	1585c83a 	sub	r2,r2,r22
 40294a4:	1dad883a 	add	r22,r3,r22
 40294a8:	80800215 	stw	r2,8(r16)
 40294ac:	85800015 	stw	r22,0(r16)
 40294b0:	003fbf06 	br	40293b0 <__flash_rwdata_start+0xffff909c>
 40294b4:	81000017 	ldw	r4,0(r16)
 40294b8:	9027883a 	mov	r19,r18
 40294bc:	902f883a 	mov	r23,r18
 40294c0:	003f6906 	br	4029268 <__flash_rwdata_start+0xffff8f54>
 40294c4:	900d883a 	mov	r6,r18
 40294c8:	01400284 	movi	r5,10
 40294cc:	e009883a 	mov	r4,fp
 40294d0:	4025db80 	call	4025db8 <memchr>
 40294d4:	10003e26 	beq	r2,zero,40295d0 <__sfvwrite_r+0x4a4>
 40294d8:	10800044 	addi	r2,r2,1
 40294dc:	1727c83a 	sub	r19,r2,fp
 40294e0:	02000044 	movi	r8,1
 40294e4:	003f9d06 	br	402935c <__flash_rwdata_start+0xffff9048>
 40294e8:	80800517 	ldw	r2,20(r16)
 40294ec:	81400417 	ldw	r5,16(r16)
 40294f0:	81c00017 	ldw	r7,0(r16)
 40294f4:	10a7883a 	add	r19,r2,r2
 40294f8:	9885883a 	add	r2,r19,r2
 40294fc:	1026d7fa 	srli	r19,r2,31
 4029500:	396dc83a 	sub	r22,r7,r5
 4029504:	b1000044 	addi	r4,r22,1
 4029508:	9885883a 	add	r2,r19,r2
 402950c:	1027d07a 	srai	r19,r2,1
 4029510:	2485883a 	add	r2,r4,r18
 4029514:	980d883a 	mov	r6,r19
 4029518:	9880022e 	bgeu	r19,r2,4029524 <__sfvwrite_r+0x3f8>
 402951c:	1027883a 	mov	r19,r2
 4029520:	100d883a 	mov	r6,r2
 4029524:	18c1000c 	andi	r3,r3,1024
 4029528:	18001c26 	beq	r3,zero,402959c <__sfvwrite_r+0x470>
 402952c:	300b883a 	mov	r5,r6
 4029530:	a809883a 	mov	r4,r21
 4029534:	40255ac0 	call	40255ac <_malloc_r>
 4029538:	102f883a 	mov	r23,r2
 402953c:	10002926 	beq	r2,zero,40295e4 <__sfvwrite_r+0x4b8>
 4029540:	81400417 	ldw	r5,16(r16)
 4029544:	b00d883a 	mov	r6,r22
 4029548:	1009883a 	mov	r4,r2
 402954c:	4025e9c0 	call	4025e9c <memcpy>
 4029550:	8080030b 	ldhu	r2,12(r16)
 4029554:	00fedfc4 	movi	r3,-1153
 4029558:	10c4703a 	and	r2,r2,r3
 402955c:	10802014 	ori	r2,r2,128
 4029560:	8080030d 	sth	r2,12(r16)
 4029564:	bd89883a 	add	r4,r23,r22
 4029568:	9d8fc83a 	sub	r7,r19,r22
 402956c:	85c00415 	stw	r23,16(r16)
 4029570:	84c00515 	stw	r19,20(r16)
 4029574:	81000015 	stw	r4,0(r16)
 4029578:	9027883a 	mov	r19,r18
 402957c:	81c00215 	stw	r7,8(r16)
 4029580:	902f883a 	mov	r23,r18
 4029584:	003f3806 	br	4029268 <__flash_rwdata_start+0xffff8f54>
 4029588:	800b883a 	mov	r5,r16
 402958c:	a809883a 	mov	r4,r21
 4029590:	402491c0 	call	402491c <_fflush_r>
 4029594:	103fb926 	beq	r2,zero,402947c <__flash_rwdata_start+0xffff9168>
 4029598:	003f6506 	br	4029330 <__flash_rwdata_start+0xffff901c>
 402959c:	a809883a 	mov	r4,r21
 40295a0:	40298640 	call	4029864 <_realloc_r>
 40295a4:	102f883a 	mov	r23,r2
 40295a8:	103fee1e 	bne	r2,zero,4029564 <__flash_rwdata_start+0xffff9250>
 40295ac:	81400417 	ldw	r5,16(r16)
 40295b0:	a809883a 	mov	r4,r21
 40295b4:	4024e7c0 	call	4024e7c <_free_r>
 40295b8:	8080030b 	ldhu	r2,12(r16)
 40295bc:	00ffdfc4 	movi	r3,-129
 40295c0:	1884703a 	and	r2,r3,r2
 40295c4:	00c00304 	movi	r3,12
 40295c8:	a8c00015 	stw	r3,0(r21)
 40295cc:	003f5906 	br	4029334 <__flash_rwdata_start+0xffff9020>
 40295d0:	94c00044 	addi	r19,r18,1
 40295d4:	02000044 	movi	r8,1
 40295d8:	003f6006 	br	402935c <__flash_rwdata_start+0xffff9048>
 40295dc:	00bfffc4 	movi	r2,-1
 40295e0:	003f0006 	br	40291e4 <__flash_rwdata_start+0xffff8ed0>
 40295e4:	00800304 	movi	r2,12
 40295e8:	a8800015 	stw	r2,0(r21)
 40295ec:	8080030b 	ldhu	r2,12(r16)
 40295f0:	003f5006 	br	4029334 <__flash_rwdata_start+0xffff9020>

040295f4 <_isatty_r>:
 40295f4:	defffd04 	addi	sp,sp,-12
 40295f8:	dc000015 	stw	r16,0(sp)
 40295fc:	04000034 	movhi	r16,0
 4029600:	dc400115 	stw	r17,4(sp)
 4029604:	8407a104 	addi	r16,r16,7812
 4029608:	2023883a 	mov	r17,r4
 402960c:	2809883a 	mov	r4,r5
 4029610:	dfc00215 	stw	ra,8(sp)
 4029614:	80000015 	stw	zero,0(r16)
 4029618:	402d8e80 	call	402d8e8 <isatty>
 402961c:	00ffffc4 	movi	r3,-1
 4029620:	10c00526 	beq	r2,r3,4029638 <_isatty_r+0x44>
 4029624:	dfc00217 	ldw	ra,8(sp)
 4029628:	dc400117 	ldw	r17,4(sp)
 402962c:	dc000017 	ldw	r16,0(sp)
 4029630:	dec00304 	addi	sp,sp,12
 4029634:	f800283a 	ret
 4029638:	80c00017 	ldw	r3,0(r16)
 402963c:	183ff926 	beq	r3,zero,4029624 <__flash_rwdata_start+0xffff9310>
 4029640:	88c00015 	stw	r3,0(r17)
 4029644:	003ff706 	br	4029624 <__flash_rwdata_start+0xffff9310>

04029648 <_lseek_r>:
 4029648:	defffd04 	addi	sp,sp,-12
 402964c:	2805883a 	mov	r2,r5
 4029650:	dc000015 	stw	r16,0(sp)
 4029654:	04000034 	movhi	r16,0
 4029658:	dc400115 	stw	r17,4(sp)
 402965c:	300b883a 	mov	r5,r6
 4029660:	8407a104 	addi	r16,r16,7812
 4029664:	2023883a 	mov	r17,r4
 4029668:	380d883a 	mov	r6,r7
 402966c:	1009883a 	mov	r4,r2
 4029670:	dfc00215 	stw	ra,8(sp)
 4029674:	80000015 	stw	zero,0(r16)
 4029678:	402dabc0 	call	402dabc <lseek>
 402967c:	00ffffc4 	movi	r3,-1
 4029680:	10c00526 	beq	r2,r3,4029698 <_lseek_r+0x50>
 4029684:	dfc00217 	ldw	ra,8(sp)
 4029688:	dc400117 	ldw	r17,4(sp)
 402968c:	dc000017 	ldw	r16,0(sp)
 4029690:	dec00304 	addi	sp,sp,12
 4029694:	f800283a 	ret
 4029698:	80c00017 	ldw	r3,0(r16)
 402969c:	183ff926 	beq	r3,zero,4029684 <__flash_rwdata_start+0xffff9370>
 40296a0:	88c00015 	stw	r3,0(r17)
 40296a4:	003ff706 	br	4029684 <__flash_rwdata_start+0xffff9370>

040296a8 <memmove>:
 40296a8:	2005883a 	mov	r2,r4
 40296ac:	29000b2e 	bgeu	r5,r4,40296dc <memmove+0x34>
 40296b0:	298f883a 	add	r7,r5,r6
 40296b4:	21c0092e 	bgeu	r4,r7,40296dc <memmove+0x34>
 40296b8:	2187883a 	add	r3,r4,r6
 40296bc:	198bc83a 	sub	r5,r3,r6
 40296c0:	30004826 	beq	r6,zero,40297e4 <memmove+0x13c>
 40296c4:	39ffffc4 	addi	r7,r7,-1
 40296c8:	39000003 	ldbu	r4,0(r7)
 40296cc:	18ffffc4 	addi	r3,r3,-1
 40296d0:	19000005 	stb	r4,0(r3)
 40296d4:	28fffb1e 	bne	r5,r3,40296c4 <__flash_rwdata_start+0xffff93b0>
 40296d8:	f800283a 	ret
 40296dc:	00c003c4 	movi	r3,15
 40296e0:	1980412e 	bgeu	r3,r6,40297e8 <memmove+0x140>
 40296e4:	2886b03a 	or	r3,r5,r2
 40296e8:	18c000cc 	andi	r3,r3,3
 40296ec:	1800401e 	bne	r3,zero,40297f0 <memmove+0x148>
 40296f0:	33fffc04 	addi	r15,r6,-16
 40296f4:	781ed13a 	srli	r15,r15,4
 40296f8:	28c00104 	addi	r3,r5,4
 40296fc:	13400104 	addi	r13,r2,4
 4029700:	781c913a 	slli	r14,r15,4
 4029704:	2b000204 	addi	r12,r5,8
 4029708:	12c00204 	addi	r11,r2,8
 402970c:	73800504 	addi	r14,r14,20
 4029710:	2a800304 	addi	r10,r5,12
 4029714:	12400304 	addi	r9,r2,12
 4029718:	2b9d883a 	add	r14,r5,r14
 402971c:	2811883a 	mov	r8,r5
 4029720:	100f883a 	mov	r7,r2
 4029724:	41000017 	ldw	r4,0(r8)
 4029728:	39c00404 	addi	r7,r7,16
 402972c:	18c00404 	addi	r3,r3,16
 4029730:	393ffc15 	stw	r4,-16(r7)
 4029734:	193ffc17 	ldw	r4,-16(r3)
 4029738:	6b400404 	addi	r13,r13,16
 402973c:	5ac00404 	addi	r11,r11,16
 4029740:	693ffc15 	stw	r4,-16(r13)
 4029744:	61000017 	ldw	r4,0(r12)
 4029748:	4a400404 	addi	r9,r9,16
 402974c:	42000404 	addi	r8,r8,16
 4029750:	593ffc15 	stw	r4,-16(r11)
 4029754:	51000017 	ldw	r4,0(r10)
 4029758:	63000404 	addi	r12,r12,16
 402975c:	52800404 	addi	r10,r10,16
 4029760:	493ffc15 	stw	r4,-16(r9)
 4029764:	1bbfef1e 	bne	r3,r14,4029724 <__flash_rwdata_start+0xffff9410>
 4029768:	79000044 	addi	r4,r15,1
 402976c:	2008913a 	slli	r4,r4,4
 4029770:	328003cc 	andi	r10,r6,15
 4029774:	02c000c4 	movi	r11,3
 4029778:	1107883a 	add	r3,r2,r4
 402977c:	290b883a 	add	r5,r5,r4
 4029780:	5a801e2e 	bgeu	r11,r10,40297fc <memmove+0x154>
 4029784:	1813883a 	mov	r9,r3
 4029788:	2811883a 	mov	r8,r5
 402978c:	500f883a 	mov	r7,r10
 4029790:	41000017 	ldw	r4,0(r8)
 4029794:	4a400104 	addi	r9,r9,4
 4029798:	39ffff04 	addi	r7,r7,-4
 402979c:	493fff15 	stw	r4,-4(r9)
 40297a0:	42000104 	addi	r8,r8,4
 40297a4:	59fffa36 	bltu	r11,r7,4029790 <__flash_rwdata_start+0xffff947c>
 40297a8:	513fff04 	addi	r4,r10,-4
 40297ac:	2008d0ba 	srli	r4,r4,2
 40297b0:	318000cc 	andi	r6,r6,3
 40297b4:	21000044 	addi	r4,r4,1
 40297b8:	2109883a 	add	r4,r4,r4
 40297bc:	2109883a 	add	r4,r4,r4
 40297c0:	1907883a 	add	r3,r3,r4
 40297c4:	290b883a 	add	r5,r5,r4
 40297c8:	30000b26 	beq	r6,zero,40297f8 <memmove+0x150>
 40297cc:	198d883a 	add	r6,r3,r6
 40297d0:	29c00003 	ldbu	r7,0(r5)
 40297d4:	18c00044 	addi	r3,r3,1
 40297d8:	29400044 	addi	r5,r5,1
 40297dc:	19ffffc5 	stb	r7,-1(r3)
 40297e0:	19bffb1e 	bne	r3,r6,40297d0 <__flash_rwdata_start+0xffff94bc>
 40297e4:	f800283a 	ret
 40297e8:	1007883a 	mov	r3,r2
 40297ec:	003ff606 	br	40297c8 <__flash_rwdata_start+0xffff94b4>
 40297f0:	1007883a 	mov	r3,r2
 40297f4:	003ff506 	br	40297cc <__flash_rwdata_start+0xffff94b8>
 40297f8:	f800283a 	ret
 40297fc:	500d883a 	mov	r6,r10
 4029800:	003ff106 	br	40297c8 <__flash_rwdata_start+0xffff94b4>

04029804 <_read_r>:
 4029804:	defffd04 	addi	sp,sp,-12
 4029808:	2805883a 	mov	r2,r5
 402980c:	dc000015 	stw	r16,0(sp)
 4029810:	04000034 	movhi	r16,0
 4029814:	dc400115 	stw	r17,4(sp)
 4029818:	300b883a 	mov	r5,r6
 402981c:	8407a104 	addi	r16,r16,7812
 4029820:	2023883a 	mov	r17,r4
 4029824:	380d883a 	mov	r6,r7
 4029828:	1009883a 	mov	r4,r2
 402982c:	dfc00215 	stw	ra,8(sp)
 4029830:	80000015 	stw	zero,0(r16)
 4029834:	402dc980 	call	402dc98 <read>
 4029838:	00ffffc4 	movi	r3,-1
 402983c:	10c00526 	beq	r2,r3,4029854 <_read_r+0x50>
 4029840:	dfc00217 	ldw	ra,8(sp)
 4029844:	dc400117 	ldw	r17,4(sp)
 4029848:	dc000017 	ldw	r16,0(sp)
 402984c:	dec00304 	addi	sp,sp,12
 4029850:	f800283a 	ret
 4029854:	80c00017 	ldw	r3,0(r16)
 4029858:	183ff926 	beq	r3,zero,4029840 <__flash_rwdata_start+0xffff952c>
 402985c:	88c00015 	stw	r3,0(r17)
 4029860:	003ff706 	br	4029840 <__flash_rwdata_start+0xffff952c>

04029864 <_realloc_r>:
 4029864:	defff604 	addi	sp,sp,-40
 4029868:	dc800215 	stw	r18,8(sp)
 402986c:	dfc00915 	stw	ra,36(sp)
 4029870:	df000815 	stw	fp,32(sp)
 4029874:	ddc00715 	stw	r23,28(sp)
 4029878:	dd800615 	stw	r22,24(sp)
 402987c:	dd400515 	stw	r21,20(sp)
 4029880:	dd000415 	stw	r20,16(sp)
 4029884:	dcc00315 	stw	r19,12(sp)
 4029888:	dc400115 	stw	r17,4(sp)
 402988c:	dc000015 	stw	r16,0(sp)
 4029890:	3025883a 	mov	r18,r6
 4029894:	2800b726 	beq	r5,zero,4029b74 <_realloc_r+0x310>
 4029898:	282b883a 	mov	r21,r5
 402989c:	2029883a 	mov	r20,r4
 40298a0:	402dc140 	call	402dc14 <__malloc_lock>
 40298a4:	a8bfff17 	ldw	r2,-4(r21)
 40298a8:	043fff04 	movi	r16,-4
 40298ac:	90c002c4 	addi	r3,r18,11
 40298b0:	01000584 	movi	r4,22
 40298b4:	acfffe04 	addi	r19,r21,-8
 40298b8:	1420703a 	and	r16,r2,r16
 40298bc:	20c0332e 	bgeu	r4,r3,402998c <_realloc_r+0x128>
 40298c0:	047ffe04 	movi	r17,-8
 40298c4:	1c62703a 	and	r17,r3,r17
 40298c8:	8807883a 	mov	r3,r17
 40298cc:	88005816 	blt	r17,zero,4029a30 <_realloc_r+0x1cc>
 40298d0:	8c805736 	bltu	r17,r18,4029a30 <_realloc_r+0x1cc>
 40298d4:	80c0300e 	bge	r16,r3,4029998 <_realloc_r+0x134>
 40298d8:	07000034 	movhi	fp,0
 40298dc:	e701fb04 	addi	fp,fp,2028
 40298e0:	e1c00217 	ldw	r7,8(fp)
 40298e4:	9c09883a 	add	r4,r19,r16
 40298e8:	22000117 	ldw	r8,4(r4)
 40298ec:	21c06326 	beq	r4,r7,4029a7c <_realloc_r+0x218>
 40298f0:	017fff84 	movi	r5,-2
 40298f4:	414a703a 	and	r5,r8,r5
 40298f8:	214b883a 	add	r5,r4,r5
 40298fc:	29800117 	ldw	r6,4(r5)
 4029900:	3180004c 	andi	r6,r6,1
 4029904:	30003f26 	beq	r6,zero,4029a04 <_realloc_r+0x1a0>
 4029908:	1080004c 	andi	r2,r2,1
 402990c:	10008326 	beq	r2,zero,4029b1c <_realloc_r+0x2b8>
 4029910:	900b883a 	mov	r5,r18
 4029914:	a009883a 	mov	r4,r20
 4029918:	40255ac0 	call	40255ac <_malloc_r>
 402991c:	1025883a 	mov	r18,r2
 4029920:	10011e26 	beq	r2,zero,4029d9c <_realloc_r+0x538>
 4029924:	a93fff17 	ldw	r4,-4(r21)
 4029928:	10fffe04 	addi	r3,r2,-8
 402992c:	00bfff84 	movi	r2,-2
 4029930:	2084703a 	and	r2,r4,r2
 4029934:	9885883a 	add	r2,r19,r2
 4029938:	1880ee26 	beq	r3,r2,4029cf4 <_realloc_r+0x490>
 402993c:	81bfff04 	addi	r6,r16,-4
 4029940:	00800904 	movi	r2,36
 4029944:	1180b836 	bltu	r2,r6,4029c28 <_realloc_r+0x3c4>
 4029948:	00c004c4 	movi	r3,19
 402994c:	19809636 	bltu	r3,r6,4029ba8 <_realloc_r+0x344>
 4029950:	9005883a 	mov	r2,r18
 4029954:	a807883a 	mov	r3,r21
 4029958:	19000017 	ldw	r4,0(r3)
 402995c:	11000015 	stw	r4,0(r2)
 4029960:	19000117 	ldw	r4,4(r3)
 4029964:	11000115 	stw	r4,4(r2)
 4029968:	18c00217 	ldw	r3,8(r3)
 402996c:	10c00215 	stw	r3,8(r2)
 4029970:	a80b883a 	mov	r5,r21
 4029974:	a009883a 	mov	r4,r20
 4029978:	4024e7c0 	call	4024e7c <_free_r>
 402997c:	a009883a 	mov	r4,r20
 4029980:	402dc380 	call	402dc38 <__malloc_unlock>
 4029984:	9005883a 	mov	r2,r18
 4029988:	00001206 	br	40299d4 <_realloc_r+0x170>
 402998c:	00c00404 	movi	r3,16
 4029990:	1823883a 	mov	r17,r3
 4029994:	003fce06 	br	40298d0 <__flash_rwdata_start+0xffff95bc>
 4029998:	a825883a 	mov	r18,r21
 402999c:	8445c83a 	sub	r2,r16,r17
 40299a0:	00c003c4 	movi	r3,15
 40299a4:	18802636 	bltu	r3,r2,4029a40 <_realloc_r+0x1dc>
 40299a8:	99800117 	ldw	r6,4(r19)
 40299ac:	9c07883a 	add	r3,r19,r16
 40299b0:	3180004c 	andi	r6,r6,1
 40299b4:	3420b03a 	or	r16,r6,r16
 40299b8:	9c000115 	stw	r16,4(r19)
 40299bc:	18800117 	ldw	r2,4(r3)
 40299c0:	10800054 	ori	r2,r2,1
 40299c4:	18800115 	stw	r2,4(r3)
 40299c8:	a009883a 	mov	r4,r20
 40299cc:	402dc380 	call	402dc38 <__malloc_unlock>
 40299d0:	9005883a 	mov	r2,r18
 40299d4:	dfc00917 	ldw	ra,36(sp)
 40299d8:	df000817 	ldw	fp,32(sp)
 40299dc:	ddc00717 	ldw	r23,28(sp)
 40299e0:	dd800617 	ldw	r22,24(sp)
 40299e4:	dd400517 	ldw	r21,20(sp)
 40299e8:	dd000417 	ldw	r20,16(sp)
 40299ec:	dcc00317 	ldw	r19,12(sp)
 40299f0:	dc800217 	ldw	r18,8(sp)
 40299f4:	dc400117 	ldw	r17,4(sp)
 40299f8:	dc000017 	ldw	r16,0(sp)
 40299fc:	dec00a04 	addi	sp,sp,40
 4029a00:	f800283a 	ret
 4029a04:	017fff04 	movi	r5,-4
 4029a08:	414a703a 	and	r5,r8,r5
 4029a0c:	814d883a 	add	r6,r16,r5
 4029a10:	30c01f16 	blt	r6,r3,4029a90 <_realloc_r+0x22c>
 4029a14:	20800317 	ldw	r2,12(r4)
 4029a18:	20c00217 	ldw	r3,8(r4)
 4029a1c:	a825883a 	mov	r18,r21
 4029a20:	3021883a 	mov	r16,r6
 4029a24:	18800315 	stw	r2,12(r3)
 4029a28:	10c00215 	stw	r3,8(r2)
 4029a2c:	003fdb06 	br	402999c <__flash_rwdata_start+0xffff9688>
 4029a30:	00800304 	movi	r2,12
 4029a34:	a0800015 	stw	r2,0(r20)
 4029a38:	0005883a 	mov	r2,zero
 4029a3c:	003fe506 	br	40299d4 <__flash_rwdata_start+0xffff96c0>
 4029a40:	98c00117 	ldw	r3,4(r19)
 4029a44:	9c4b883a 	add	r5,r19,r17
 4029a48:	11000054 	ori	r4,r2,1
 4029a4c:	18c0004c 	andi	r3,r3,1
 4029a50:	1c62b03a 	or	r17,r3,r17
 4029a54:	9c400115 	stw	r17,4(r19)
 4029a58:	29000115 	stw	r4,4(r5)
 4029a5c:	2885883a 	add	r2,r5,r2
 4029a60:	10c00117 	ldw	r3,4(r2)
 4029a64:	29400204 	addi	r5,r5,8
 4029a68:	a009883a 	mov	r4,r20
 4029a6c:	18c00054 	ori	r3,r3,1
 4029a70:	10c00115 	stw	r3,4(r2)
 4029a74:	4024e7c0 	call	4024e7c <_free_r>
 4029a78:	003fd306 	br	40299c8 <__flash_rwdata_start+0xffff96b4>
 4029a7c:	017fff04 	movi	r5,-4
 4029a80:	414a703a 	and	r5,r8,r5
 4029a84:	89800404 	addi	r6,r17,16
 4029a88:	8151883a 	add	r8,r16,r5
 4029a8c:	4180590e 	bge	r8,r6,4029bf4 <_realloc_r+0x390>
 4029a90:	1080004c 	andi	r2,r2,1
 4029a94:	103f9e1e 	bne	r2,zero,4029910 <__flash_rwdata_start+0xffff95fc>
 4029a98:	adbffe17 	ldw	r22,-8(r21)
 4029a9c:	00bfff04 	movi	r2,-4
 4029aa0:	9dadc83a 	sub	r22,r19,r22
 4029aa4:	b1800117 	ldw	r6,4(r22)
 4029aa8:	3084703a 	and	r2,r6,r2
 4029aac:	20002026 	beq	r4,zero,4029b30 <_realloc_r+0x2cc>
 4029ab0:	80af883a 	add	r23,r16,r2
 4029ab4:	b96f883a 	add	r23,r23,r5
 4029ab8:	21c05f26 	beq	r4,r7,4029c38 <_realloc_r+0x3d4>
 4029abc:	b8c01c16 	blt	r23,r3,4029b30 <_realloc_r+0x2cc>
 4029ac0:	20800317 	ldw	r2,12(r4)
 4029ac4:	20c00217 	ldw	r3,8(r4)
 4029ac8:	81bfff04 	addi	r6,r16,-4
 4029acc:	01000904 	movi	r4,36
 4029ad0:	18800315 	stw	r2,12(r3)
 4029ad4:	10c00215 	stw	r3,8(r2)
 4029ad8:	b0c00217 	ldw	r3,8(r22)
 4029adc:	b0800317 	ldw	r2,12(r22)
 4029ae0:	b4800204 	addi	r18,r22,8
 4029ae4:	18800315 	stw	r2,12(r3)
 4029ae8:	10c00215 	stw	r3,8(r2)
 4029aec:	21801b36 	bltu	r4,r6,4029b5c <_realloc_r+0x2f8>
 4029af0:	008004c4 	movi	r2,19
 4029af4:	1180352e 	bgeu	r2,r6,4029bcc <_realloc_r+0x368>
 4029af8:	a8800017 	ldw	r2,0(r21)
 4029afc:	b0800215 	stw	r2,8(r22)
 4029b00:	a8800117 	ldw	r2,4(r21)
 4029b04:	b0800315 	stw	r2,12(r22)
 4029b08:	008006c4 	movi	r2,27
 4029b0c:	11807f36 	bltu	r2,r6,4029d0c <_realloc_r+0x4a8>
 4029b10:	b0800404 	addi	r2,r22,16
 4029b14:	ad400204 	addi	r21,r21,8
 4029b18:	00002d06 	br	4029bd0 <_realloc_r+0x36c>
 4029b1c:	adbffe17 	ldw	r22,-8(r21)
 4029b20:	00bfff04 	movi	r2,-4
 4029b24:	9dadc83a 	sub	r22,r19,r22
 4029b28:	b1000117 	ldw	r4,4(r22)
 4029b2c:	2084703a 	and	r2,r4,r2
 4029b30:	b03f7726 	beq	r22,zero,4029910 <__flash_rwdata_start+0xffff95fc>
 4029b34:	80af883a 	add	r23,r16,r2
 4029b38:	b8ff7516 	blt	r23,r3,4029910 <__flash_rwdata_start+0xffff95fc>
 4029b3c:	b0800317 	ldw	r2,12(r22)
 4029b40:	b0c00217 	ldw	r3,8(r22)
 4029b44:	81bfff04 	addi	r6,r16,-4
 4029b48:	01000904 	movi	r4,36
 4029b4c:	18800315 	stw	r2,12(r3)
 4029b50:	10c00215 	stw	r3,8(r2)
 4029b54:	b4800204 	addi	r18,r22,8
 4029b58:	21bfe52e 	bgeu	r4,r6,4029af0 <__flash_rwdata_start+0xffff97dc>
 4029b5c:	a80b883a 	mov	r5,r21
 4029b60:	9009883a 	mov	r4,r18
 4029b64:	40296a80 	call	40296a8 <memmove>
 4029b68:	b821883a 	mov	r16,r23
 4029b6c:	b027883a 	mov	r19,r22
 4029b70:	003f8a06 	br	402999c <__flash_rwdata_start+0xffff9688>
 4029b74:	300b883a 	mov	r5,r6
 4029b78:	dfc00917 	ldw	ra,36(sp)
 4029b7c:	df000817 	ldw	fp,32(sp)
 4029b80:	ddc00717 	ldw	r23,28(sp)
 4029b84:	dd800617 	ldw	r22,24(sp)
 4029b88:	dd400517 	ldw	r21,20(sp)
 4029b8c:	dd000417 	ldw	r20,16(sp)
 4029b90:	dcc00317 	ldw	r19,12(sp)
 4029b94:	dc800217 	ldw	r18,8(sp)
 4029b98:	dc400117 	ldw	r17,4(sp)
 4029b9c:	dc000017 	ldw	r16,0(sp)
 4029ba0:	dec00a04 	addi	sp,sp,40
 4029ba4:	40255ac1 	jmpi	40255ac <_malloc_r>
 4029ba8:	a8c00017 	ldw	r3,0(r21)
 4029bac:	90c00015 	stw	r3,0(r18)
 4029bb0:	a8c00117 	ldw	r3,4(r21)
 4029bb4:	90c00115 	stw	r3,4(r18)
 4029bb8:	00c006c4 	movi	r3,27
 4029bbc:	19804536 	bltu	r3,r6,4029cd4 <_realloc_r+0x470>
 4029bc0:	90800204 	addi	r2,r18,8
 4029bc4:	a8c00204 	addi	r3,r21,8
 4029bc8:	003f6306 	br	4029958 <__flash_rwdata_start+0xffff9644>
 4029bcc:	9005883a 	mov	r2,r18
 4029bd0:	a8c00017 	ldw	r3,0(r21)
 4029bd4:	b821883a 	mov	r16,r23
 4029bd8:	b027883a 	mov	r19,r22
 4029bdc:	10c00015 	stw	r3,0(r2)
 4029be0:	a8c00117 	ldw	r3,4(r21)
 4029be4:	10c00115 	stw	r3,4(r2)
 4029be8:	a8c00217 	ldw	r3,8(r21)
 4029bec:	10c00215 	stw	r3,8(r2)
 4029bf0:	003f6a06 	br	402999c <__flash_rwdata_start+0xffff9688>
 4029bf4:	9c67883a 	add	r19,r19,r17
 4029bf8:	4445c83a 	sub	r2,r8,r17
 4029bfc:	e4c00215 	stw	r19,8(fp)
 4029c00:	10800054 	ori	r2,r2,1
 4029c04:	98800115 	stw	r2,4(r19)
 4029c08:	a8bfff17 	ldw	r2,-4(r21)
 4029c0c:	a009883a 	mov	r4,r20
 4029c10:	1080004c 	andi	r2,r2,1
 4029c14:	1462b03a 	or	r17,r2,r17
 4029c18:	ac7fff15 	stw	r17,-4(r21)
 4029c1c:	402dc380 	call	402dc38 <__malloc_unlock>
 4029c20:	a805883a 	mov	r2,r21
 4029c24:	003f6b06 	br	40299d4 <__flash_rwdata_start+0xffff96c0>
 4029c28:	a80b883a 	mov	r5,r21
 4029c2c:	9009883a 	mov	r4,r18
 4029c30:	40296a80 	call	40296a8 <memmove>
 4029c34:	003f4e06 	br	4029970 <__flash_rwdata_start+0xffff965c>
 4029c38:	89000404 	addi	r4,r17,16
 4029c3c:	b93fbc16 	blt	r23,r4,4029b30 <__flash_rwdata_start+0xffff981c>
 4029c40:	b0800317 	ldw	r2,12(r22)
 4029c44:	b0c00217 	ldw	r3,8(r22)
 4029c48:	81bfff04 	addi	r6,r16,-4
 4029c4c:	01000904 	movi	r4,36
 4029c50:	18800315 	stw	r2,12(r3)
 4029c54:	10c00215 	stw	r3,8(r2)
 4029c58:	b4800204 	addi	r18,r22,8
 4029c5c:	21804336 	bltu	r4,r6,4029d6c <_realloc_r+0x508>
 4029c60:	008004c4 	movi	r2,19
 4029c64:	11803f2e 	bgeu	r2,r6,4029d64 <_realloc_r+0x500>
 4029c68:	a8800017 	ldw	r2,0(r21)
 4029c6c:	b0800215 	stw	r2,8(r22)
 4029c70:	a8800117 	ldw	r2,4(r21)
 4029c74:	b0800315 	stw	r2,12(r22)
 4029c78:	008006c4 	movi	r2,27
 4029c7c:	11803f36 	bltu	r2,r6,4029d7c <_realloc_r+0x518>
 4029c80:	b0800404 	addi	r2,r22,16
 4029c84:	ad400204 	addi	r21,r21,8
 4029c88:	a8c00017 	ldw	r3,0(r21)
 4029c8c:	10c00015 	stw	r3,0(r2)
 4029c90:	a8c00117 	ldw	r3,4(r21)
 4029c94:	10c00115 	stw	r3,4(r2)
 4029c98:	a8c00217 	ldw	r3,8(r21)
 4029c9c:	10c00215 	stw	r3,8(r2)
 4029ca0:	b447883a 	add	r3,r22,r17
 4029ca4:	bc45c83a 	sub	r2,r23,r17
 4029ca8:	e0c00215 	stw	r3,8(fp)
 4029cac:	10800054 	ori	r2,r2,1
 4029cb0:	18800115 	stw	r2,4(r3)
 4029cb4:	b0800117 	ldw	r2,4(r22)
 4029cb8:	a009883a 	mov	r4,r20
 4029cbc:	1080004c 	andi	r2,r2,1
 4029cc0:	1462b03a 	or	r17,r2,r17
 4029cc4:	b4400115 	stw	r17,4(r22)
 4029cc8:	402dc380 	call	402dc38 <__malloc_unlock>
 4029ccc:	9005883a 	mov	r2,r18
 4029cd0:	003f4006 	br	40299d4 <__flash_rwdata_start+0xffff96c0>
 4029cd4:	a8c00217 	ldw	r3,8(r21)
 4029cd8:	90c00215 	stw	r3,8(r18)
 4029cdc:	a8c00317 	ldw	r3,12(r21)
 4029ce0:	90c00315 	stw	r3,12(r18)
 4029ce4:	30801126 	beq	r6,r2,4029d2c <_realloc_r+0x4c8>
 4029ce8:	90800404 	addi	r2,r18,16
 4029cec:	a8c00404 	addi	r3,r21,16
 4029cf0:	003f1906 	br	4029958 <__flash_rwdata_start+0xffff9644>
 4029cf4:	90ffff17 	ldw	r3,-4(r18)
 4029cf8:	00bfff04 	movi	r2,-4
 4029cfc:	a825883a 	mov	r18,r21
 4029d00:	1884703a 	and	r2,r3,r2
 4029d04:	80a1883a 	add	r16,r16,r2
 4029d08:	003f2406 	br	402999c <__flash_rwdata_start+0xffff9688>
 4029d0c:	a8800217 	ldw	r2,8(r21)
 4029d10:	b0800415 	stw	r2,16(r22)
 4029d14:	a8800317 	ldw	r2,12(r21)
 4029d18:	b0800515 	stw	r2,20(r22)
 4029d1c:	31000a26 	beq	r6,r4,4029d48 <_realloc_r+0x4e4>
 4029d20:	b0800604 	addi	r2,r22,24
 4029d24:	ad400404 	addi	r21,r21,16
 4029d28:	003fa906 	br	4029bd0 <__flash_rwdata_start+0xffff98bc>
 4029d2c:	a9000417 	ldw	r4,16(r21)
 4029d30:	90800604 	addi	r2,r18,24
 4029d34:	a8c00604 	addi	r3,r21,24
 4029d38:	91000415 	stw	r4,16(r18)
 4029d3c:	a9000517 	ldw	r4,20(r21)
 4029d40:	91000515 	stw	r4,20(r18)
 4029d44:	003f0406 	br	4029958 <__flash_rwdata_start+0xffff9644>
 4029d48:	a8c00417 	ldw	r3,16(r21)
 4029d4c:	ad400604 	addi	r21,r21,24
 4029d50:	b0800804 	addi	r2,r22,32
 4029d54:	b0c00615 	stw	r3,24(r22)
 4029d58:	a8ffff17 	ldw	r3,-4(r21)
 4029d5c:	b0c00715 	stw	r3,28(r22)
 4029d60:	003f9b06 	br	4029bd0 <__flash_rwdata_start+0xffff98bc>
 4029d64:	9005883a 	mov	r2,r18
 4029d68:	003fc706 	br	4029c88 <__flash_rwdata_start+0xffff9974>
 4029d6c:	a80b883a 	mov	r5,r21
 4029d70:	9009883a 	mov	r4,r18
 4029d74:	40296a80 	call	40296a8 <memmove>
 4029d78:	003fc906 	br	4029ca0 <__flash_rwdata_start+0xffff998c>
 4029d7c:	a8800217 	ldw	r2,8(r21)
 4029d80:	b0800415 	stw	r2,16(r22)
 4029d84:	a8800317 	ldw	r2,12(r21)
 4029d88:	b0800515 	stw	r2,20(r22)
 4029d8c:	31000726 	beq	r6,r4,4029dac <_realloc_r+0x548>
 4029d90:	b0800604 	addi	r2,r22,24
 4029d94:	ad400404 	addi	r21,r21,16
 4029d98:	003fbb06 	br	4029c88 <__flash_rwdata_start+0xffff9974>
 4029d9c:	a009883a 	mov	r4,r20
 4029da0:	402dc380 	call	402dc38 <__malloc_unlock>
 4029da4:	0005883a 	mov	r2,zero
 4029da8:	003f0a06 	br	40299d4 <__flash_rwdata_start+0xffff96c0>
 4029dac:	a8c00417 	ldw	r3,16(r21)
 4029db0:	ad400604 	addi	r21,r21,24
 4029db4:	b0800804 	addi	r2,r22,32
 4029db8:	b0c00615 	stw	r3,24(r22)
 4029dbc:	a8ffff17 	ldw	r3,-4(r21)
 4029dc0:	b0c00715 	stw	r3,28(r22)
 4029dc4:	003fb006 	br	4029c88 <__flash_rwdata_start+0xffff9974>

04029dc8 <__swbuf_r>:
 4029dc8:	defffb04 	addi	sp,sp,-20
 4029dcc:	dcc00315 	stw	r19,12(sp)
 4029dd0:	dc800215 	stw	r18,8(sp)
 4029dd4:	dc000015 	stw	r16,0(sp)
 4029dd8:	dfc00415 	stw	ra,16(sp)
 4029ddc:	dc400115 	stw	r17,4(sp)
 4029de0:	2025883a 	mov	r18,r4
 4029de4:	2827883a 	mov	r19,r5
 4029de8:	3021883a 	mov	r16,r6
 4029dec:	20000226 	beq	r4,zero,4029df8 <__swbuf_r+0x30>
 4029df0:	20800e17 	ldw	r2,56(r4)
 4029df4:	10004226 	beq	r2,zero,4029f00 <__swbuf_r+0x138>
 4029df8:	80800617 	ldw	r2,24(r16)
 4029dfc:	8100030b 	ldhu	r4,12(r16)
 4029e00:	80800215 	stw	r2,8(r16)
 4029e04:	2080020c 	andi	r2,r4,8
 4029e08:	10003626 	beq	r2,zero,4029ee4 <__swbuf_r+0x11c>
 4029e0c:	80c00417 	ldw	r3,16(r16)
 4029e10:	18003426 	beq	r3,zero,4029ee4 <__swbuf_r+0x11c>
 4029e14:	2088000c 	andi	r2,r4,8192
 4029e18:	9c403fcc 	andi	r17,r19,255
 4029e1c:	10001a26 	beq	r2,zero,4029e88 <__swbuf_r+0xc0>
 4029e20:	80800017 	ldw	r2,0(r16)
 4029e24:	81000517 	ldw	r4,20(r16)
 4029e28:	10c7c83a 	sub	r3,r2,r3
 4029e2c:	1900200e 	bge	r3,r4,4029eb0 <__swbuf_r+0xe8>
 4029e30:	18c00044 	addi	r3,r3,1
 4029e34:	81000217 	ldw	r4,8(r16)
 4029e38:	11400044 	addi	r5,r2,1
 4029e3c:	81400015 	stw	r5,0(r16)
 4029e40:	213fffc4 	addi	r4,r4,-1
 4029e44:	81000215 	stw	r4,8(r16)
 4029e48:	14c00005 	stb	r19,0(r2)
 4029e4c:	80800517 	ldw	r2,20(r16)
 4029e50:	10c01e26 	beq	r2,r3,4029ecc <__swbuf_r+0x104>
 4029e54:	8080030b 	ldhu	r2,12(r16)
 4029e58:	1080004c 	andi	r2,r2,1
 4029e5c:	10000226 	beq	r2,zero,4029e68 <__swbuf_r+0xa0>
 4029e60:	00800284 	movi	r2,10
 4029e64:	88801926 	beq	r17,r2,4029ecc <__swbuf_r+0x104>
 4029e68:	8805883a 	mov	r2,r17
 4029e6c:	dfc00417 	ldw	ra,16(sp)
 4029e70:	dcc00317 	ldw	r19,12(sp)
 4029e74:	dc800217 	ldw	r18,8(sp)
 4029e78:	dc400117 	ldw	r17,4(sp)
 4029e7c:	dc000017 	ldw	r16,0(sp)
 4029e80:	dec00504 	addi	sp,sp,20
 4029e84:	f800283a 	ret
 4029e88:	81401917 	ldw	r5,100(r16)
 4029e8c:	00b7ffc4 	movi	r2,-8193
 4029e90:	21080014 	ori	r4,r4,8192
 4029e94:	2884703a 	and	r2,r5,r2
 4029e98:	80801915 	stw	r2,100(r16)
 4029e9c:	80800017 	ldw	r2,0(r16)
 4029ea0:	8100030d 	sth	r4,12(r16)
 4029ea4:	81000517 	ldw	r4,20(r16)
 4029ea8:	10c7c83a 	sub	r3,r2,r3
 4029eac:	193fe016 	blt	r3,r4,4029e30 <__flash_rwdata_start+0xffff9b1c>
 4029eb0:	800b883a 	mov	r5,r16
 4029eb4:	9009883a 	mov	r4,r18
 4029eb8:	402491c0 	call	402491c <_fflush_r>
 4029ebc:	1000071e 	bne	r2,zero,4029edc <__swbuf_r+0x114>
 4029ec0:	80800017 	ldw	r2,0(r16)
 4029ec4:	00c00044 	movi	r3,1
 4029ec8:	003fda06 	br	4029e34 <__flash_rwdata_start+0xffff9b20>
 4029ecc:	800b883a 	mov	r5,r16
 4029ed0:	9009883a 	mov	r4,r18
 4029ed4:	402491c0 	call	402491c <_fflush_r>
 4029ed8:	103fe326 	beq	r2,zero,4029e68 <__flash_rwdata_start+0xffff9b54>
 4029edc:	00bfffc4 	movi	r2,-1
 4029ee0:	003fe206 	br	4029e6c <__flash_rwdata_start+0xffff9b58>
 4029ee4:	800b883a 	mov	r5,r16
 4029ee8:	9009883a 	mov	r4,r18
 4029eec:	4022cfc0 	call	4022cfc <__swsetup_r>
 4029ef0:	103ffa1e 	bne	r2,zero,4029edc <__flash_rwdata_start+0xffff9bc8>
 4029ef4:	8100030b 	ldhu	r4,12(r16)
 4029ef8:	80c00417 	ldw	r3,16(r16)
 4029efc:	003fc506 	br	4029e14 <__flash_rwdata_start+0xffff9b00>
 4029f00:	4024d080 	call	4024d08 <__sinit>
 4029f04:	003fbc06 	br	4029df8 <__flash_rwdata_start+0xffff9ae4>

04029f08 <__swbuf>:
 4029f08:	00800034 	movhi	r2,0
 4029f0c:	10878b04 	addi	r2,r2,7724
 4029f10:	280d883a 	mov	r6,r5
 4029f14:	200b883a 	mov	r5,r4
 4029f18:	11000017 	ldw	r4,0(r2)
 4029f1c:	4029dc81 	jmpi	4029dc8 <__swbuf_r>

04029f20 <_wcrtomb_r>:
 4029f20:	defff604 	addi	sp,sp,-40
 4029f24:	00800034 	movhi	r2,0
 4029f28:	dc800815 	stw	r18,32(sp)
 4029f2c:	dc400715 	stw	r17,28(sp)
 4029f30:	dc000615 	stw	r16,24(sp)
 4029f34:	10878f04 	addi	r2,r2,7740
 4029f38:	dfc00915 	stw	ra,36(sp)
 4029f3c:	2021883a 	mov	r16,r4
 4029f40:	3823883a 	mov	r17,r7
 4029f44:	14800017 	ldw	r18,0(r2)
 4029f48:	28001426 	beq	r5,zero,4029f9c <_wcrtomb_r+0x7c>
 4029f4c:	d9400415 	stw	r5,16(sp)
 4029f50:	d9800515 	stw	r6,20(sp)
 4029f54:	40253900 	call	4025390 <__locale_charset>
 4029f58:	d9800517 	ldw	r6,20(sp)
 4029f5c:	d9400417 	ldw	r5,16(sp)
 4029f60:	100f883a 	mov	r7,r2
 4029f64:	dc400015 	stw	r17,0(sp)
 4029f68:	8009883a 	mov	r4,r16
 4029f6c:	903ee83a 	callr	r18
 4029f70:	00ffffc4 	movi	r3,-1
 4029f74:	10c0031e 	bne	r2,r3,4029f84 <_wcrtomb_r+0x64>
 4029f78:	88000015 	stw	zero,0(r17)
 4029f7c:	00c02284 	movi	r3,138
 4029f80:	80c00015 	stw	r3,0(r16)
 4029f84:	dfc00917 	ldw	ra,36(sp)
 4029f88:	dc800817 	ldw	r18,32(sp)
 4029f8c:	dc400717 	ldw	r17,28(sp)
 4029f90:	dc000617 	ldw	r16,24(sp)
 4029f94:	dec00a04 	addi	sp,sp,40
 4029f98:	f800283a 	ret
 4029f9c:	40253900 	call	4025390 <__locale_charset>
 4029fa0:	100f883a 	mov	r7,r2
 4029fa4:	dc400015 	stw	r17,0(sp)
 4029fa8:	000d883a 	mov	r6,zero
 4029fac:	d9400104 	addi	r5,sp,4
 4029fb0:	8009883a 	mov	r4,r16
 4029fb4:	903ee83a 	callr	r18
 4029fb8:	003fed06 	br	4029f70 <__flash_rwdata_start+0xffff9c5c>

04029fbc <wcrtomb>:
 4029fbc:	defff604 	addi	sp,sp,-40
 4029fc0:	00800034 	movhi	r2,0
 4029fc4:	dc800615 	stw	r18,24(sp)
 4029fc8:	dc400515 	stw	r17,20(sp)
 4029fcc:	10878b04 	addi	r2,r2,7724
 4029fd0:	dfc00915 	stw	ra,36(sp)
 4029fd4:	dd000815 	stw	r20,32(sp)
 4029fd8:	dcc00715 	stw	r19,28(sp)
 4029fdc:	dc000415 	stw	r16,16(sp)
 4029fe0:	3025883a 	mov	r18,r6
 4029fe4:	14400017 	ldw	r17,0(r2)
 4029fe8:	20001926 	beq	r4,zero,402a050 <wcrtomb+0x94>
 4029fec:	00800034 	movhi	r2,0
 4029ff0:	10878f04 	addi	r2,r2,7740
 4029ff4:	15000017 	ldw	r20,0(r2)
 4029ff8:	2021883a 	mov	r16,r4
 4029ffc:	2827883a 	mov	r19,r5
 402a000:	40253900 	call	4025390 <__locale_charset>
 402a004:	100f883a 	mov	r7,r2
 402a008:	dc800015 	stw	r18,0(sp)
 402a00c:	980d883a 	mov	r6,r19
 402a010:	800b883a 	mov	r5,r16
 402a014:	8809883a 	mov	r4,r17
 402a018:	a03ee83a 	callr	r20
 402a01c:	00ffffc4 	movi	r3,-1
 402a020:	10c0031e 	bne	r2,r3,402a030 <wcrtomb+0x74>
 402a024:	90000015 	stw	zero,0(r18)
 402a028:	00c02284 	movi	r3,138
 402a02c:	88c00015 	stw	r3,0(r17)
 402a030:	dfc00917 	ldw	ra,36(sp)
 402a034:	dd000817 	ldw	r20,32(sp)
 402a038:	dcc00717 	ldw	r19,28(sp)
 402a03c:	dc800617 	ldw	r18,24(sp)
 402a040:	dc400517 	ldw	r17,20(sp)
 402a044:	dc000417 	ldw	r16,16(sp)
 402a048:	dec00a04 	addi	sp,sp,40
 402a04c:	f800283a 	ret
 402a050:	00800034 	movhi	r2,0
 402a054:	10878f04 	addi	r2,r2,7740
 402a058:	14000017 	ldw	r16,0(r2)
 402a05c:	40253900 	call	4025390 <__locale_charset>
 402a060:	100f883a 	mov	r7,r2
 402a064:	dc800015 	stw	r18,0(sp)
 402a068:	000d883a 	mov	r6,zero
 402a06c:	d9400104 	addi	r5,sp,4
 402a070:	8809883a 	mov	r4,r17
 402a074:	803ee83a 	callr	r16
 402a078:	003fe806 	br	402a01c <__flash_rwdata_start+0xffff9d08>

0402a07c <__ascii_wctomb>:
 402a07c:	28000526 	beq	r5,zero,402a094 <__ascii_wctomb+0x18>
 402a080:	00803fc4 	movi	r2,255
 402a084:	11800536 	bltu	r2,r6,402a09c <__ascii_wctomb+0x20>
 402a088:	29800005 	stb	r6,0(r5)
 402a08c:	00800044 	movi	r2,1
 402a090:	f800283a 	ret
 402a094:	0005883a 	mov	r2,zero
 402a098:	f800283a 	ret
 402a09c:	00802284 	movi	r2,138
 402a0a0:	20800015 	stw	r2,0(r4)
 402a0a4:	00bfffc4 	movi	r2,-1
 402a0a8:	f800283a 	ret

0402a0ac <_wctomb_r>:
 402a0ac:	00800034 	movhi	r2,0
 402a0b0:	defff904 	addi	sp,sp,-28
 402a0b4:	10878f04 	addi	r2,r2,7740
 402a0b8:	dfc00615 	stw	ra,24(sp)
 402a0bc:	dc400515 	stw	r17,20(sp)
 402a0c0:	dc000415 	stw	r16,16(sp)
 402a0c4:	3823883a 	mov	r17,r7
 402a0c8:	14000017 	ldw	r16,0(r2)
 402a0cc:	d9000115 	stw	r4,4(sp)
 402a0d0:	d9400215 	stw	r5,8(sp)
 402a0d4:	d9800315 	stw	r6,12(sp)
 402a0d8:	40253900 	call	4025390 <__locale_charset>
 402a0dc:	d9800317 	ldw	r6,12(sp)
 402a0e0:	d9400217 	ldw	r5,8(sp)
 402a0e4:	d9000117 	ldw	r4,4(sp)
 402a0e8:	100f883a 	mov	r7,r2
 402a0ec:	dc400015 	stw	r17,0(sp)
 402a0f0:	803ee83a 	callr	r16
 402a0f4:	dfc00617 	ldw	ra,24(sp)
 402a0f8:	dc400517 	ldw	r17,20(sp)
 402a0fc:	dc000417 	ldw	r16,16(sp)
 402a100:	dec00704 	addi	sp,sp,28
 402a104:	f800283a 	ret

0402a108 <__muldi3>:
 402a108:	defff604 	addi	sp,sp,-40
 402a10c:	dd800615 	stw	r22,24(sp)
 402a110:	dd400515 	stw	r21,20(sp)
 402a114:	dc400115 	stw	r17,4(sp)
 402a118:	357fffcc 	andi	r21,r6,65535
 402a11c:	2022d43a 	srli	r17,r4,16
 402a120:	25bfffcc 	andi	r22,r4,65535
 402a124:	dcc00315 	stw	r19,12(sp)
 402a128:	dc800215 	stw	r18,8(sp)
 402a12c:	2027883a 	mov	r19,r4
 402a130:	2825883a 	mov	r18,r5
 402a134:	b009883a 	mov	r4,r22
 402a138:	a80b883a 	mov	r5,r21
 402a13c:	dfc00915 	stw	ra,36(sp)
 402a140:	df000815 	stw	fp,32(sp)
 402a144:	ddc00715 	stw	r23,28(sp)
 402a148:	3839883a 	mov	fp,r7
 402a14c:	302ed43a 	srli	r23,r6,16
 402a150:	dd000415 	stw	r20,16(sp)
 402a154:	dc000015 	stw	r16,0(sp)
 402a158:	3029883a 	mov	r20,r6
 402a15c:	40208380 	call	4020838 <__mulsi3>
 402a160:	a80b883a 	mov	r5,r21
 402a164:	8809883a 	mov	r4,r17
 402a168:	1021883a 	mov	r16,r2
 402a16c:	40208380 	call	4020838 <__mulsi3>
 402a170:	8809883a 	mov	r4,r17
 402a174:	b80b883a 	mov	r5,r23
 402a178:	102b883a 	mov	r21,r2
 402a17c:	40208380 	call	4020838 <__mulsi3>
 402a180:	b80b883a 	mov	r5,r23
 402a184:	b009883a 	mov	r4,r22
 402a188:	1023883a 	mov	r17,r2
 402a18c:	40208380 	call	4020838 <__mulsi3>
 402a190:	8006d43a 	srli	r3,r16,16
 402a194:	1545883a 	add	r2,r2,r21
 402a198:	1885883a 	add	r2,r3,r2
 402a19c:	1540022e 	bgeu	r2,r21,402a1a8 <__muldi3+0xa0>
 402a1a0:	00c00074 	movhi	r3,1
 402a1a4:	88e3883a 	add	r17,r17,r3
 402a1a8:	1006d43a 	srli	r3,r2,16
 402a1ac:	1004943a 	slli	r2,r2,16
 402a1b0:	e00b883a 	mov	r5,fp
 402a1b4:	9809883a 	mov	r4,r19
 402a1b8:	843fffcc 	andi	r16,r16,65535
 402a1bc:	1c63883a 	add	r17,r3,r17
 402a1c0:	1421883a 	add	r16,r2,r16
 402a1c4:	40208380 	call	4020838 <__mulsi3>
 402a1c8:	900b883a 	mov	r5,r18
 402a1cc:	a009883a 	mov	r4,r20
 402a1d0:	1027883a 	mov	r19,r2
 402a1d4:	40208380 	call	4020838 <__mulsi3>
 402a1d8:	9885883a 	add	r2,r19,r2
 402a1dc:	1447883a 	add	r3,r2,r17
 402a1e0:	8005883a 	mov	r2,r16
 402a1e4:	dfc00917 	ldw	ra,36(sp)
 402a1e8:	df000817 	ldw	fp,32(sp)
 402a1ec:	ddc00717 	ldw	r23,28(sp)
 402a1f0:	dd800617 	ldw	r22,24(sp)
 402a1f4:	dd400517 	ldw	r21,20(sp)
 402a1f8:	dd000417 	ldw	r20,16(sp)
 402a1fc:	dcc00317 	ldw	r19,12(sp)
 402a200:	dc800217 	ldw	r18,8(sp)
 402a204:	dc400117 	ldw	r17,4(sp)
 402a208:	dc000017 	ldw	r16,0(sp)
 402a20c:	dec00a04 	addi	sp,sp,40
 402a210:	f800283a 	ret

0402a214 <__udivdi3>:
 402a214:	defff404 	addi	sp,sp,-48
 402a218:	dcc00515 	stw	r19,20(sp)
 402a21c:	dc000215 	stw	r16,8(sp)
 402a220:	dfc00b15 	stw	ra,44(sp)
 402a224:	df000a15 	stw	fp,40(sp)
 402a228:	ddc00915 	stw	r23,36(sp)
 402a22c:	dd800815 	stw	r22,32(sp)
 402a230:	dd400715 	stw	r21,28(sp)
 402a234:	dd000615 	stw	r20,24(sp)
 402a238:	dc800415 	stw	r18,16(sp)
 402a23c:	dc400315 	stw	r17,12(sp)
 402a240:	2027883a 	mov	r19,r4
 402a244:	2821883a 	mov	r16,r5
 402a248:	3800461e 	bne	r7,zero,402a364 <__udivdi3+0x150>
 402a24c:	3023883a 	mov	r17,r6
 402a250:	2025883a 	mov	r18,r4
 402a254:	2980572e 	bgeu	r5,r6,402a3b4 <__udivdi3+0x1a0>
 402a258:	00bfffd4 	movui	r2,65535
 402a25c:	282d883a 	mov	r22,r5
 402a260:	1180b236 	bltu	r2,r6,402a52c <__udivdi3+0x318>
 402a264:	00803fc4 	movi	r2,255
 402a268:	1185803a 	cmpltu	r2,r2,r6
 402a26c:	100490fa 	slli	r2,r2,3
 402a270:	3086d83a 	srl	r3,r6,r2
 402a274:	01000034 	movhi	r4,0
 402a278:	21008404 	addi	r4,r4,528
 402a27c:	20c7883a 	add	r3,r4,r3
 402a280:	18c00003 	ldbu	r3,0(r3)
 402a284:	1885883a 	add	r2,r3,r2
 402a288:	00c00804 	movi	r3,32
 402a28c:	1887c83a 	sub	r3,r3,r2
 402a290:	18000526 	beq	r3,zero,402a2a8 <__udivdi3+0x94>
 402a294:	80e0983a 	sll	r16,r16,r3
 402a298:	9884d83a 	srl	r2,r19,r2
 402a29c:	30e2983a 	sll	r17,r6,r3
 402a2a0:	98e4983a 	sll	r18,r19,r3
 402a2a4:	142cb03a 	or	r22,r2,r16
 402a2a8:	882ad43a 	srli	r21,r17,16
 402a2ac:	b009883a 	mov	r4,r22
 402a2b0:	8d3fffcc 	andi	r20,r17,65535
 402a2b4:	a80b883a 	mov	r5,r21
 402a2b8:	40207e00 	call	40207e0 <__umodsi3>
 402a2bc:	b009883a 	mov	r4,r22
 402a2c0:	a80b883a 	mov	r5,r21
 402a2c4:	1027883a 	mov	r19,r2
 402a2c8:	402077c0 	call	402077c <__udivsi3>
 402a2cc:	100b883a 	mov	r5,r2
 402a2d0:	a009883a 	mov	r4,r20
 402a2d4:	102d883a 	mov	r22,r2
 402a2d8:	40208380 	call	4020838 <__mulsi3>
 402a2dc:	9826943a 	slli	r19,r19,16
 402a2e0:	9006d43a 	srli	r3,r18,16
 402a2e4:	1cc6b03a 	or	r3,r3,r19
 402a2e8:	1880052e 	bgeu	r3,r2,402a300 <__udivdi3+0xec>
 402a2ec:	1c47883a 	add	r3,r3,r17
 402a2f0:	b13fffc4 	addi	r4,r22,-1
 402a2f4:	1c400136 	bltu	r3,r17,402a2fc <__udivdi3+0xe8>
 402a2f8:	18814236 	bltu	r3,r2,402a804 <__udivdi3+0x5f0>
 402a2fc:	202d883a 	mov	r22,r4
 402a300:	18a1c83a 	sub	r16,r3,r2
 402a304:	8009883a 	mov	r4,r16
 402a308:	a80b883a 	mov	r5,r21
 402a30c:	40207e00 	call	40207e0 <__umodsi3>
 402a310:	1027883a 	mov	r19,r2
 402a314:	8009883a 	mov	r4,r16
 402a318:	a80b883a 	mov	r5,r21
 402a31c:	9826943a 	slli	r19,r19,16
 402a320:	402077c0 	call	402077c <__udivsi3>
 402a324:	100b883a 	mov	r5,r2
 402a328:	a009883a 	mov	r4,r20
 402a32c:	94bfffcc 	andi	r18,r18,65535
 402a330:	1021883a 	mov	r16,r2
 402a334:	94e4b03a 	or	r18,r18,r19
 402a338:	40208380 	call	4020838 <__mulsi3>
 402a33c:	9080052e 	bgeu	r18,r2,402a354 <__udivdi3+0x140>
 402a340:	8ca5883a 	add	r18,r17,r18
 402a344:	80ffffc4 	addi	r3,r16,-1
 402a348:	94410c36 	bltu	r18,r17,402a77c <__udivdi3+0x568>
 402a34c:	90810b2e 	bgeu	r18,r2,402a77c <__udivdi3+0x568>
 402a350:	843fff84 	addi	r16,r16,-2
 402a354:	b004943a 	slli	r2,r22,16
 402a358:	0007883a 	mov	r3,zero
 402a35c:	1404b03a 	or	r2,r2,r16
 402a360:	00005e06 	br	402a4dc <__udivdi3+0x2c8>
 402a364:	29c05b36 	bltu	r5,r7,402a4d4 <__udivdi3+0x2c0>
 402a368:	00bfffd4 	movui	r2,65535
 402a36c:	11c0672e 	bgeu	r2,r7,402a50c <__udivdi3+0x2f8>
 402a370:	00804034 	movhi	r2,256
 402a374:	10bfffc4 	addi	r2,r2,-1
 402a378:	11c10a36 	bltu	r2,r7,402a7a4 <__udivdi3+0x590>
 402a37c:	00800404 	movi	r2,16
 402a380:	3886d83a 	srl	r3,r7,r2
 402a384:	01000034 	movhi	r4,0
 402a388:	21008404 	addi	r4,r4,528
 402a38c:	20c7883a 	add	r3,r4,r3
 402a390:	18c00003 	ldbu	r3,0(r3)
 402a394:	05c00804 	movi	r23,32
 402a398:	1885883a 	add	r2,r3,r2
 402a39c:	b8afc83a 	sub	r23,r23,r2
 402a3a0:	b800671e 	bne	r23,zero,402a540 <__udivdi3+0x32c>
 402a3a4:	3c010536 	bltu	r7,r16,402a7bc <__udivdi3+0x5a8>
 402a3a8:	9985403a 	cmpgeu	r2,r19,r6
 402a3ac:	0007883a 	mov	r3,zero
 402a3b0:	00004a06 	br	402a4dc <__udivdi3+0x2c8>
 402a3b4:	3000041e 	bne	r6,zero,402a3c8 <__udivdi3+0x1b4>
 402a3b8:	000b883a 	mov	r5,zero
 402a3bc:	01000044 	movi	r4,1
 402a3c0:	402077c0 	call	402077c <__udivsi3>
 402a3c4:	1023883a 	mov	r17,r2
 402a3c8:	00bfffd4 	movui	r2,65535
 402a3cc:	1440532e 	bgeu	r2,r17,402a51c <__udivdi3+0x308>
 402a3d0:	00804034 	movhi	r2,256
 402a3d4:	10bfffc4 	addi	r2,r2,-1
 402a3d8:	1440f436 	bltu	r2,r17,402a7ac <__udivdi3+0x598>
 402a3dc:	00800404 	movi	r2,16
 402a3e0:	8886d83a 	srl	r3,r17,r2
 402a3e4:	01000034 	movhi	r4,0
 402a3e8:	21008404 	addi	r4,r4,528
 402a3ec:	20c7883a 	add	r3,r4,r3
 402a3f0:	18c00003 	ldbu	r3,0(r3)
 402a3f4:	1885883a 	add	r2,r3,r2
 402a3f8:	00c00804 	movi	r3,32
 402a3fc:	1887c83a 	sub	r3,r3,r2
 402a400:	1800a51e 	bne	r3,zero,402a698 <__udivdi3+0x484>
 402a404:	882ad43a 	srli	r21,r17,16
 402a408:	8461c83a 	sub	r16,r16,r17
 402a40c:	8d3fffcc 	andi	r20,r17,65535
 402a410:	00c00044 	movi	r3,1
 402a414:	a80b883a 	mov	r5,r21
 402a418:	8009883a 	mov	r4,r16
 402a41c:	d8c00115 	stw	r3,4(sp)
 402a420:	40207e00 	call	40207e0 <__umodsi3>
 402a424:	a80b883a 	mov	r5,r21
 402a428:	8009883a 	mov	r4,r16
 402a42c:	1027883a 	mov	r19,r2
 402a430:	402077c0 	call	402077c <__udivsi3>
 402a434:	a00b883a 	mov	r5,r20
 402a438:	1009883a 	mov	r4,r2
 402a43c:	102d883a 	mov	r22,r2
 402a440:	40208380 	call	4020838 <__mulsi3>
 402a444:	9826943a 	slli	r19,r19,16
 402a448:	900ed43a 	srli	r7,r18,16
 402a44c:	d8c00117 	ldw	r3,4(sp)
 402a450:	3cceb03a 	or	r7,r7,r19
 402a454:	3880052e 	bgeu	r7,r2,402a46c <__udivdi3+0x258>
 402a458:	3c4f883a 	add	r7,r7,r17
 402a45c:	b13fffc4 	addi	r4,r22,-1
 402a460:	3c400136 	bltu	r7,r17,402a468 <__udivdi3+0x254>
 402a464:	3880e436 	bltu	r7,r2,402a7f8 <__udivdi3+0x5e4>
 402a468:	202d883a 	mov	r22,r4
 402a46c:	38a1c83a 	sub	r16,r7,r2
 402a470:	8009883a 	mov	r4,r16
 402a474:	a80b883a 	mov	r5,r21
 402a478:	d8c00115 	stw	r3,4(sp)
 402a47c:	40207e00 	call	40207e0 <__umodsi3>
 402a480:	1027883a 	mov	r19,r2
 402a484:	8009883a 	mov	r4,r16
 402a488:	a80b883a 	mov	r5,r21
 402a48c:	9826943a 	slli	r19,r19,16
 402a490:	402077c0 	call	402077c <__udivsi3>
 402a494:	a00b883a 	mov	r5,r20
 402a498:	1009883a 	mov	r4,r2
 402a49c:	94bfffcc 	andi	r18,r18,65535
 402a4a0:	1021883a 	mov	r16,r2
 402a4a4:	94e4b03a 	or	r18,r18,r19
 402a4a8:	40208380 	call	4020838 <__mulsi3>
 402a4ac:	d8c00117 	ldw	r3,4(sp)
 402a4b0:	9080052e 	bgeu	r18,r2,402a4c8 <__udivdi3+0x2b4>
 402a4b4:	8ca5883a 	add	r18,r17,r18
 402a4b8:	813fffc4 	addi	r4,r16,-1
 402a4bc:	9440ad36 	bltu	r18,r17,402a774 <__udivdi3+0x560>
 402a4c0:	9080ac2e 	bgeu	r18,r2,402a774 <__udivdi3+0x560>
 402a4c4:	843fff84 	addi	r16,r16,-2
 402a4c8:	b004943a 	slli	r2,r22,16
 402a4cc:	1404b03a 	or	r2,r2,r16
 402a4d0:	00000206 	br	402a4dc <__udivdi3+0x2c8>
 402a4d4:	0007883a 	mov	r3,zero
 402a4d8:	0005883a 	mov	r2,zero
 402a4dc:	dfc00b17 	ldw	ra,44(sp)
 402a4e0:	df000a17 	ldw	fp,40(sp)
 402a4e4:	ddc00917 	ldw	r23,36(sp)
 402a4e8:	dd800817 	ldw	r22,32(sp)
 402a4ec:	dd400717 	ldw	r21,28(sp)
 402a4f0:	dd000617 	ldw	r20,24(sp)
 402a4f4:	dcc00517 	ldw	r19,20(sp)
 402a4f8:	dc800417 	ldw	r18,16(sp)
 402a4fc:	dc400317 	ldw	r17,12(sp)
 402a500:	dc000217 	ldw	r16,8(sp)
 402a504:	dec00c04 	addi	sp,sp,48
 402a508:	f800283a 	ret
 402a50c:	00803fc4 	movi	r2,255
 402a510:	11c5803a 	cmpltu	r2,r2,r7
 402a514:	100490fa 	slli	r2,r2,3
 402a518:	003f9906 	br	402a380 <__flash_rwdata_start+0xffffa06c>
 402a51c:	00803fc4 	movi	r2,255
 402a520:	1445803a 	cmpltu	r2,r2,r17
 402a524:	100490fa 	slli	r2,r2,3
 402a528:	003fad06 	br	402a3e0 <__flash_rwdata_start+0xffffa0cc>
 402a52c:	00804034 	movhi	r2,256
 402a530:	10bfffc4 	addi	r2,r2,-1
 402a534:	11809f36 	bltu	r2,r6,402a7b4 <__udivdi3+0x5a0>
 402a538:	00800404 	movi	r2,16
 402a53c:	003f4c06 	br	402a270 <__flash_rwdata_start+0xffff9f5c>
 402a540:	3dce983a 	sll	r7,r7,r23
 402a544:	30b8d83a 	srl	fp,r6,r2
 402a548:	80a2d83a 	srl	r17,r16,r2
 402a54c:	35cc983a 	sll	r6,r6,r23
 402a550:	3f38b03a 	or	fp,r7,fp
 402a554:	e024d43a 	srli	r18,fp,16
 402a558:	9884d83a 	srl	r2,r19,r2
 402a55c:	85e0983a 	sll	r16,r16,r23
 402a560:	8809883a 	mov	r4,r17
 402a564:	900b883a 	mov	r5,r18
 402a568:	d9800015 	stw	r6,0(sp)
 402a56c:	1420b03a 	or	r16,r2,r16
 402a570:	40207e00 	call	40207e0 <__umodsi3>
 402a574:	900b883a 	mov	r5,r18
 402a578:	8809883a 	mov	r4,r17
 402a57c:	1029883a 	mov	r20,r2
 402a580:	e5bfffcc 	andi	r22,fp,65535
 402a584:	402077c0 	call	402077c <__udivsi3>
 402a588:	100b883a 	mov	r5,r2
 402a58c:	b009883a 	mov	r4,r22
 402a590:	102b883a 	mov	r21,r2
 402a594:	40208380 	call	4020838 <__mulsi3>
 402a598:	a028943a 	slli	r20,r20,16
 402a59c:	8006d43a 	srli	r3,r16,16
 402a5a0:	1d06b03a 	or	r3,r3,r20
 402a5a4:	1880042e 	bgeu	r3,r2,402a5b8 <__udivdi3+0x3a4>
 402a5a8:	1f07883a 	add	r3,r3,fp
 402a5ac:	a93fffc4 	addi	r4,r21,-1
 402a5b0:	1f00892e 	bgeu	r3,fp,402a7d8 <__udivdi3+0x5c4>
 402a5b4:	202b883a 	mov	r21,r4
 402a5b8:	18a3c83a 	sub	r17,r3,r2
 402a5bc:	8809883a 	mov	r4,r17
 402a5c0:	900b883a 	mov	r5,r18
 402a5c4:	40207e00 	call	40207e0 <__umodsi3>
 402a5c8:	1029883a 	mov	r20,r2
 402a5cc:	8809883a 	mov	r4,r17
 402a5d0:	900b883a 	mov	r5,r18
 402a5d4:	a028943a 	slli	r20,r20,16
 402a5d8:	402077c0 	call	402077c <__udivsi3>
 402a5dc:	100b883a 	mov	r5,r2
 402a5e0:	b009883a 	mov	r4,r22
 402a5e4:	843fffcc 	andi	r16,r16,65535
 402a5e8:	1023883a 	mov	r17,r2
 402a5ec:	8520b03a 	or	r16,r16,r20
 402a5f0:	40208380 	call	4020838 <__mulsi3>
 402a5f4:	8080042e 	bgeu	r16,r2,402a608 <__udivdi3+0x3f4>
 402a5f8:	8721883a 	add	r16,r16,fp
 402a5fc:	88ffffc4 	addi	r3,r17,-1
 402a600:	8700712e 	bgeu	r16,fp,402a7c8 <__udivdi3+0x5b4>
 402a604:	1823883a 	mov	r17,r3
 402a608:	a80e943a 	slli	r7,r21,16
 402a60c:	d8c00017 	ldw	r3,0(sp)
 402a610:	80a1c83a 	sub	r16,r16,r2
 402a614:	3c64b03a 	or	r18,r7,r17
 402a618:	1d3fffcc 	andi	r20,r3,65535
 402a61c:	9022d43a 	srli	r17,r18,16
 402a620:	95bfffcc 	andi	r22,r18,65535
 402a624:	a00b883a 	mov	r5,r20
 402a628:	b009883a 	mov	r4,r22
 402a62c:	182ad43a 	srli	r21,r3,16
 402a630:	40208380 	call	4020838 <__mulsi3>
 402a634:	a00b883a 	mov	r5,r20
 402a638:	8809883a 	mov	r4,r17
 402a63c:	1039883a 	mov	fp,r2
 402a640:	40208380 	call	4020838 <__mulsi3>
 402a644:	8809883a 	mov	r4,r17
 402a648:	a80b883a 	mov	r5,r21
 402a64c:	1029883a 	mov	r20,r2
 402a650:	40208380 	call	4020838 <__mulsi3>
 402a654:	a80b883a 	mov	r5,r21
 402a658:	b009883a 	mov	r4,r22
 402a65c:	1023883a 	mov	r17,r2
 402a660:	40208380 	call	4020838 <__mulsi3>
 402a664:	e006d43a 	srli	r3,fp,16
 402a668:	1505883a 	add	r2,r2,r20
 402a66c:	1887883a 	add	r3,r3,r2
 402a670:	1d00022e 	bgeu	r3,r20,402a67c <__udivdi3+0x468>
 402a674:	00800074 	movhi	r2,1
 402a678:	88a3883a 	add	r17,r17,r2
 402a67c:	1804d43a 	srli	r2,r3,16
 402a680:	1463883a 	add	r17,r2,r17
 402a684:	84404436 	bltu	r16,r17,402a798 <__udivdi3+0x584>
 402a688:	84403e26 	beq	r16,r17,402a784 <__udivdi3+0x570>
 402a68c:	9005883a 	mov	r2,r18
 402a690:	0007883a 	mov	r3,zero
 402a694:	003f9106 	br	402a4dc <__flash_rwdata_start+0xffffa1c8>
 402a698:	88e2983a 	sll	r17,r17,r3
 402a69c:	80aed83a 	srl	r23,r16,r2
 402a6a0:	80e0983a 	sll	r16,r16,r3
 402a6a4:	882ad43a 	srli	r21,r17,16
 402a6a8:	9884d83a 	srl	r2,r19,r2
 402a6ac:	b809883a 	mov	r4,r23
 402a6b0:	a80b883a 	mov	r5,r21
 402a6b4:	98e4983a 	sll	r18,r19,r3
 402a6b8:	142cb03a 	or	r22,r2,r16
 402a6bc:	40207e00 	call	40207e0 <__umodsi3>
 402a6c0:	b809883a 	mov	r4,r23
 402a6c4:	a80b883a 	mov	r5,r21
 402a6c8:	1027883a 	mov	r19,r2
 402a6cc:	8d3fffcc 	andi	r20,r17,65535
 402a6d0:	402077c0 	call	402077c <__udivsi3>
 402a6d4:	a009883a 	mov	r4,r20
 402a6d8:	100b883a 	mov	r5,r2
 402a6dc:	102f883a 	mov	r23,r2
 402a6e0:	40208380 	call	4020838 <__mulsi3>
 402a6e4:	9826943a 	slli	r19,r19,16
 402a6e8:	b008d43a 	srli	r4,r22,16
 402a6ec:	24c8b03a 	or	r4,r4,r19
 402a6f0:	2080062e 	bgeu	r4,r2,402a70c <__udivdi3+0x4f8>
 402a6f4:	2449883a 	add	r4,r4,r17
 402a6f8:	b8ffffc4 	addi	r3,r23,-1
 402a6fc:	24403c36 	bltu	r4,r17,402a7f0 <__udivdi3+0x5dc>
 402a700:	20803b2e 	bgeu	r4,r2,402a7f0 <__udivdi3+0x5dc>
 402a704:	bdffff84 	addi	r23,r23,-2
 402a708:	2449883a 	add	r4,r4,r17
 402a70c:	20a1c83a 	sub	r16,r4,r2
 402a710:	a80b883a 	mov	r5,r21
 402a714:	8009883a 	mov	r4,r16
 402a718:	40207e00 	call	40207e0 <__umodsi3>
 402a71c:	a80b883a 	mov	r5,r21
 402a720:	8009883a 	mov	r4,r16
 402a724:	1027883a 	mov	r19,r2
 402a728:	402077c0 	call	402077c <__udivsi3>
 402a72c:	a009883a 	mov	r4,r20
 402a730:	100b883a 	mov	r5,r2
 402a734:	9826943a 	slli	r19,r19,16
 402a738:	1039883a 	mov	fp,r2
 402a73c:	40208380 	call	4020838 <__mulsi3>
 402a740:	b13fffcc 	andi	r4,r22,65535
 402a744:	24c8b03a 	or	r4,r4,r19
 402a748:	2080062e 	bgeu	r4,r2,402a764 <__udivdi3+0x550>
 402a74c:	2449883a 	add	r4,r4,r17
 402a750:	e0ffffc4 	addi	r3,fp,-1
 402a754:	24402436 	bltu	r4,r17,402a7e8 <__udivdi3+0x5d4>
 402a758:	2080232e 	bgeu	r4,r2,402a7e8 <__udivdi3+0x5d4>
 402a75c:	e73fff84 	addi	fp,fp,-2
 402a760:	2449883a 	add	r4,r4,r17
 402a764:	b82e943a 	slli	r23,r23,16
 402a768:	20a1c83a 	sub	r16,r4,r2
 402a76c:	bf06b03a 	or	r3,r23,fp
 402a770:	003f2806 	br	402a414 <__flash_rwdata_start+0xffffa100>
 402a774:	2021883a 	mov	r16,r4
 402a778:	003f5306 	br	402a4c8 <__flash_rwdata_start+0xffffa1b4>
 402a77c:	1821883a 	mov	r16,r3
 402a780:	003ef406 	br	402a354 <__flash_rwdata_start+0xffffa040>
 402a784:	1806943a 	slli	r3,r3,16
 402a788:	9de6983a 	sll	r19,r19,r23
 402a78c:	e73fffcc 	andi	fp,fp,65535
 402a790:	1f07883a 	add	r3,r3,fp
 402a794:	98ffbd2e 	bgeu	r19,r3,402a68c <__flash_rwdata_start+0xffffa378>
 402a798:	90bfffc4 	addi	r2,r18,-1
 402a79c:	0007883a 	mov	r3,zero
 402a7a0:	003f4e06 	br	402a4dc <__flash_rwdata_start+0xffffa1c8>
 402a7a4:	00800604 	movi	r2,24
 402a7a8:	003ef506 	br	402a380 <__flash_rwdata_start+0xffffa06c>
 402a7ac:	00800604 	movi	r2,24
 402a7b0:	003f0b06 	br	402a3e0 <__flash_rwdata_start+0xffffa0cc>
 402a7b4:	00800604 	movi	r2,24
 402a7b8:	003ead06 	br	402a270 <__flash_rwdata_start+0xffff9f5c>
 402a7bc:	0007883a 	mov	r3,zero
 402a7c0:	00800044 	movi	r2,1
 402a7c4:	003f4506 	br	402a4dc <__flash_rwdata_start+0xffffa1c8>
 402a7c8:	80bf8e2e 	bgeu	r16,r2,402a604 <__flash_rwdata_start+0xffffa2f0>
 402a7cc:	8c7fff84 	addi	r17,r17,-2
 402a7d0:	8721883a 	add	r16,r16,fp
 402a7d4:	003f8c06 	br	402a608 <__flash_rwdata_start+0xffffa2f4>
 402a7d8:	18bf762e 	bgeu	r3,r2,402a5b4 <__flash_rwdata_start+0xffffa2a0>
 402a7dc:	ad7fff84 	addi	r21,r21,-2
 402a7e0:	1f07883a 	add	r3,r3,fp
 402a7e4:	003f7406 	br	402a5b8 <__flash_rwdata_start+0xffffa2a4>
 402a7e8:	1839883a 	mov	fp,r3
 402a7ec:	003fdd06 	br	402a764 <__flash_rwdata_start+0xffffa450>
 402a7f0:	182f883a 	mov	r23,r3
 402a7f4:	003fc506 	br	402a70c <__flash_rwdata_start+0xffffa3f8>
 402a7f8:	b5bfff84 	addi	r22,r22,-2
 402a7fc:	3c4f883a 	add	r7,r7,r17
 402a800:	003f1a06 	br	402a46c <__flash_rwdata_start+0xffffa158>
 402a804:	b5bfff84 	addi	r22,r22,-2
 402a808:	1c47883a 	add	r3,r3,r17
 402a80c:	003ebc06 	br	402a300 <__flash_rwdata_start+0xffff9fec>

0402a810 <__umoddi3>:
 402a810:	defff304 	addi	sp,sp,-52
 402a814:	df000b15 	stw	fp,44(sp)
 402a818:	dc400415 	stw	r17,16(sp)
 402a81c:	dc000315 	stw	r16,12(sp)
 402a820:	dfc00c15 	stw	ra,48(sp)
 402a824:	ddc00a15 	stw	r23,40(sp)
 402a828:	dd800915 	stw	r22,36(sp)
 402a82c:	dd400815 	stw	r21,32(sp)
 402a830:	dd000715 	stw	r20,28(sp)
 402a834:	dcc00615 	stw	r19,24(sp)
 402a838:	dc800515 	stw	r18,20(sp)
 402a83c:	2021883a 	mov	r16,r4
 402a840:	2823883a 	mov	r17,r5
 402a844:	2839883a 	mov	fp,r5
 402a848:	3800401e 	bne	r7,zero,402a94c <__umoddi3+0x13c>
 402a84c:	3027883a 	mov	r19,r6
 402a850:	2029883a 	mov	r20,r4
 402a854:	2980552e 	bgeu	r5,r6,402a9ac <__umoddi3+0x19c>
 402a858:	00bfffd4 	movui	r2,65535
 402a85c:	1180a236 	bltu	r2,r6,402aae8 <__umoddi3+0x2d8>
 402a860:	01003fc4 	movi	r4,255
 402a864:	2189803a 	cmpltu	r4,r4,r6
 402a868:	200890fa 	slli	r4,r4,3
 402a86c:	3104d83a 	srl	r2,r6,r4
 402a870:	00c00034 	movhi	r3,0
 402a874:	18c08404 	addi	r3,r3,528
 402a878:	1885883a 	add	r2,r3,r2
 402a87c:	10c00003 	ldbu	r3,0(r2)
 402a880:	00800804 	movi	r2,32
 402a884:	1909883a 	add	r4,r3,r4
 402a888:	1125c83a 	sub	r18,r2,r4
 402a88c:	90000526 	beq	r18,zero,402a8a4 <__umoddi3+0x94>
 402a890:	8ca2983a 	sll	r17,r17,r18
 402a894:	8108d83a 	srl	r4,r16,r4
 402a898:	34a6983a 	sll	r19,r6,r18
 402a89c:	84a8983a 	sll	r20,r16,r18
 402a8a0:	2478b03a 	or	fp,r4,r17
 402a8a4:	982cd43a 	srli	r22,r19,16
 402a8a8:	e009883a 	mov	r4,fp
 402a8ac:	9dffffcc 	andi	r23,r19,65535
 402a8b0:	b00b883a 	mov	r5,r22
 402a8b4:	40207e00 	call	40207e0 <__umodsi3>
 402a8b8:	b00b883a 	mov	r5,r22
 402a8bc:	e009883a 	mov	r4,fp
 402a8c0:	102b883a 	mov	r21,r2
 402a8c4:	402077c0 	call	402077c <__udivsi3>
 402a8c8:	100b883a 	mov	r5,r2
 402a8cc:	b809883a 	mov	r4,r23
 402a8d0:	40208380 	call	4020838 <__mulsi3>
 402a8d4:	a82a943a 	slli	r21,r21,16
 402a8d8:	a006d43a 	srli	r3,r20,16
 402a8dc:	1d46b03a 	or	r3,r3,r21
 402a8e0:	1880032e 	bgeu	r3,r2,402a8f0 <__umoddi3+0xe0>
 402a8e4:	1cc7883a 	add	r3,r3,r19
 402a8e8:	1cc00136 	bltu	r3,r19,402a8f0 <__umoddi3+0xe0>
 402a8ec:	18813136 	bltu	r3,r2,402adb4 <__umoddi3+0x5a4>
 402a8f0:	18a1c83a 	sub	r16,r3,r2
 402a8f4:	b00b883a 	mov	r5,r22
 402a8f8:	8009883a 	mov	r4,r16
 402a8fc:	40207e00 	call	40207e0 <__umodsi3>
 402a900:	b00b883a 	mov	r5,r22
 402a904:	8009883a 	mov	r4,r16
 402a908:	1023883a 	mov	r17,r2
 402a90c:	402077c0 	call	402077c <__udivsi3>
 402a910:	100b883a 	mov	r5,r2
 402a914:	b809883a 	mov	r4,r23
 402a918:	8822943a 	slli	r17,r17,16
 402a91c:	40208380 	call	4020838 <__mulsi3>
 402a920:	a0ffffcc 	andi	r3,r20,65535
 402a924:	1c46b03a 	or	r3,r3,r17
 402a928:	1880042e 	bgeu	r3,r2,402a93c <__umoddi3+0x12c>
 402a92c:	1cc7883a 	add	r3,r3,r19
 402a930:	1cc00236 	bltu	r3,r19,402a93c <__umoddi3+0x12c>
 402a934:	1880012e 	bgeu	r3,r2,402a93c <__umoddi3+0x12c>
 402a938:	1cc7883a 	add	r3,r3,r19
 402a93c:	1885c83a 	sub	r2,r3,r2
 402a940:	1484d83a 	srl	r2,r2,r18
 402a944:	0007883a 	mov	r3,zero
 402a948:	00005306 	br	402aa98 <__umoddi3+0x288>
 402a94c:	29c05036 	bltu	r5,r7,402aa90 <__umoddi3+0x280>
 402a950:	00bfffd4 	movui	r2,65535
 402a954:	11c05c2e 	bgeu	r2,r7,402aac8 <__umoddi3+0x2b8>
 402a958:	00804034 	movhi	r2,256
 402a95c:	10bfffc4 	addi	r2,r2,-1
 402a960:	11c10636 	bltu	r2,r7,402ad7c <__umoddi3+0x56c>
 402a964:	01000404 	movi	r4,16
 402a968:	3904d83a 	srl	r2,r7,r4
 402a96c:	00c00034 	movhi	r3,0
 402a970:	18c08404 	addi	r3,r3,528
 402a974:	1885883a 	add	r2,r3,r2
 402a978:	14c00003 	ldbu	r19,0(r2)
 402a97c:	00c00804 	movi	r3,32
 402a980:	9927883a 	add	r19,r19,r4
 402a984:	1ce9c83a 	sub	r20,r3,r19
 402a988:	a0005c1e 	bne	r20,zero,402aafc <__umoddi3+0x2ec>
 402a98c:	3c400136 	bltu	r7,r17,402a994 <__umoddi3+0x184>
 402a990:	81810a36 	bltu	r16,r6,402adbc <__umoddi3+0x5ac>
 402a994:	8185c83a 	sub	r2,r16,r6
 402a998:	89e3c83a 	sub	r17,r17,r7
 402a99c:	8089803a 	cmpltu	r4,r16,r2
 402a9a0:	8939c83a 	sub	fp,r17,r4
 402a9a4:	e007883a 	mov	r3,fp
 402a9a8:	00003b06 	br	402aa98 <__umoddi3+0x288>
 402a9ac:	3000041e 	bne	r6,zero,402a9c0 <__umoddi3+0x1b0>
 402a9b0:	000b883a 	mov	r5,zero
 402a9b4:	01000044 	movi	r4,1
 402a9b8:	402077c0 	call	402077c <__udivsi3>
 402a9bc:	1027883a 	mov	r19,r2
 402a9c0:	00bfffd4 	movui	r2,65535
 402a9c4:	14c0442e 	bgeu	r2,r19,402aad8 <__umoddi3+0x2c8>
 402a9c8:	00804034 	movhi	r2,256
 402a9cc:	10bfffc4 	addi	r2,r2,-1
 402a9d0:	14c0ec36 	bltu	r2,r19,402ad84 <__umoddi3+0x574>
 402a9d4:	00800404 	movi	r2,16
 402a9d8:	9886d83a 	srl	r3,r19,r2
 402a9dc:	01000034 	movhi	r4,0
 402a9e0:	21008404 	addi	r4,r4,528
 402a9e4:	20c7883a 	add	r3,r4,r3
 402a9e8:	18c00003 	ldbu	r3,0(r3)
 402a9ec:	1887883a 	add	r3,r3,r2
 402a9f0:	00800804 	movi	r2,32
 402a9f4:	10e5c83a 	sub	r18,r2,r3
 402a9f8:	9000ab1e 	bne	r18,zero,402aca8 <__umoddi3+0x498>
 402a9fc:	982cd43a 	srli	r22,r19,16
 402aa00:	8ce3c83a 	sub	r17,r17,r19
 402aa04:	9dffffcc 	andi	r23,r19,65535
 402aa08:	b00b883a 	mov	r5,r22
 402aa0c:	8809883a 	mov	r4,r17
 402aa10:	40207e00 	call	40207e0 <__umodsi3>
 402aa14:	b00b883a 	mov	r5,r22
 402aa18:	8809883a 	mov	r4,r17
 402aa1c:	102b883a 	mov	r21,r2
 402aa20:	402077c0 	call	402077c <__udivsi3>
 402aa24:	b80b883a 	mov	r5,r23
 402aa28:	1009883a 	mov	r4,r2
 402aa2c:	40208380 	call	4020838 <__mulsi3>
 402aa30:	a82a943a 	slli	r21,r21,16
 402aa34:	a006d43a 	srli	r3,r20,16
 402aa38:	1d46b03a 	or	r3,r3,r21
 402aa3c:	1880042e 	bgeu	r3,r2,402aa50 <__umoddi3+0x240>
 402aa40:	1cc7883a 	add	r3,r3,r19
 402aa44:	1cc00236 	bltu	r3,r19,402aa50 <__umoddi3+0x240>
 402aa48:	1880012e 	bgeu	r3,r2,402aa50 <__umoddi3+0x240>
 402aa4c:	1cc7883a 	add	r3,r3,r19
 402aa50:	18a1c83a 	sub	r16,r3,r2
 402aa54:	b00b883a 	mov	r5,r22
 402aa58:	8009883a 	mov	r4,r16
 402aa5c:	40207e00 	call	40207e0 <__umodsi3>
 402aa60:	1023883a 	mov	r17,r2
 402aa64:	b00b883a 	mov	r5,r22
 402aa68:	8009883a 	mov	r4,r16
 402aa6c:	402077c0 	call	402077c <__udivsi3>
 402aa70:	8822943a 	slli	r17,r17,16
 402aa74:	b80b883a 	mov	r5,r23
 402aa78:	1009883a 	mov	r4,r2
 402aa7c:	40208380 	call	4020838 <__mulsi3>
 402aa80:	a53fffcc 	andi	r20,r20,65535
 402aa84:	a446b03a 	or	r3,r20,r17
 402aa88:	18bfac2e 	bgeu	r3,r2,402a93c <__flash_rwdata_start+0xffffa628>
 402aa8c:	003fa706 	br	402a92c <__flash_rwdata_start+0xffffa618>
 402aa90:	2005883a 	mov	r2,r4
 402aa94:	2807883a 	mov	r3,r5
 402aa98:	dfc00c17 	ldw	ra,48(sp)
 402aa9c:	df000b17 	ldw	fp,44(sp)
 402aaa0:	ddc00a17 	ldw	r23,40(sp)
 402aaa4:	dd800917 	ldw	r22,36(sp)
 402aaa8:	dd400817 	ldw	r21,32(sp)
 402aaac:	dd000717 	ldw	r20,28(sp)
 402aab0:	dcc00617 	ldw	r19,24(sp)
 402aab4:	dc800517 	ldw	r18,20(sp)
 402aab8:	dc400417 	ldw	r17,16(sp)
 402aabc:	dc000317 	ldw	r16,12(sp)
 402aac0:	dec00d04 	addi	sp,sp,52
 402aac4:	f800283a 	ret
 402aac8:	04c03fc4 	movi	r19,255
 402aacc:	99c9803a 	cmpltu	r4,r19,r7
 402aad0:	200890fa 	slli	r4,r4,3
 402aad4:	003fa406 	br	402a968 <__flash_rwdata_start+0xffffa654>
 402aad8:	00803fc4 	movi	r2,255
 402aadc:	14c5803a 	cmpltu	r2,r2,r19
 402aae0:	100490fa 	slli	r2,r2,3
 402aae4:	003fbc06 	br	402a9d8 <__flash_rwdata_start+0xffffa6c4>
 402aae8:	00804034 	movhi	r2,256
 402aaec:	10bfffc4 	addi	r2,r2,-1
 402aaf0:	1180a636 	bltu	r2,r6,402ad8c <__umoddi3+0x57c>
 402aaf4:	01000404 	movi	r4,16
 402aaf8:	003f5c06 	br	402a86c <__flash_rwdata_start+0xffffa558>
 402aafc:	3d0e983a 	sll	r7,r7,r20
 402ab00:	34ead83a 	srl	r21,r6,r19
 402ab04:	8cc6d83a 	srl	r3,r17,r19
 402ab08:	8d10983a 	sll	r8,r17,r20
 402ab0c:	3d6ab03a 	or	r21,r7,r21
 402ab10:	a82cd43a 	srli	r22,r21,16
 402ab14:	84e2d83a 	srl	r17,r16,r19
 402ab18:	1809883a 	mov	r4,r3
 402ab1c:	b00b883a 	mov	r5,r22
 402ab20:	8a22b03a 	or	r17,r17,r8
 402ab24:	3524983a 	sll	r18,r6,r20
 402ab28:	dc400015 	stw	r17,0(sp)
 402ab2c:	d8c00115 	stw	r3,4(sp)
 402ab30:	40207e00 	call	40207e0 <__umodsi3>
 402ab34:	d8c00117 	ldw	r3,4(sp)
 402ab38:	b00b883a 	mov	r5,r22
 402ab3c:	1039883a 	mov	fp,r2
 402ab40:	1809883a 	mov	r4,r3
 402ab44:	402077c0 	call	402077c <__udivsi3>
 402ab48:	adffffcc 	andi	r23,r21,65535
 402ab4c:	100b883a 	mov	r5,r2
 402ab50:	b809883a 	mov	r4,r23
 402ab54:	1023883a 	mov	r17,r2
 402ab58:	40208380 	call	4020838 <__mulsi3>
 402ab5c:	d9400017 	ldw	r5,0(sp)
 402ab60:	e008943a 	slli	r4,fp,16
 402ab64:	8520983a 	sll	r16,r16,r20
 402ab68:	2806d43a 	srli	r3,r5,16
 402ab6c:	1906b03a 	or	r3,r3,r4
 402ab70:	1880042e 	bgeu	r3,r2,402ab84 <__umoddi3+0x374>
 402ab74:	1d47883a 	add	r3,r3,r21
 402ab78:	893fffc4 	addi	r4,r17,-1
 402ab7c:	1d40892e 	bgeu	r3,r21,402ada4 <__umoddi3+0x594>
 402ab80:	2023883a 	mov	r17,r4
 402ab84:	18b9c83a 	sub	fp,r3,r2
 402ab88:	b00b883a 	mov	r5,r22
 402ab8c:	e009883a 	mov	r4,fp
 402ab90:	40207e00 	call	40207e0 <__umodsi3>
 402ab94:	b00b883a 	mov	r5,r22
 402ab98:	e009883a 	mov	r4,fp
 402ab9c:	d8800215 	stw	r2,8(sp)
 402aba0:	402077c0 	call	402077c <__udivsi3>
 402aba4:	100b883a 	mov	r5,r2
 402aba8:	b809883a 	mov	r4,r23
 402abac:	102d883a 	mov	r22,r2
 402abb0:	40208380 	call	4020838 <__mulsi3>
 402abb4:	d9800217 	ldw	r6,8(sp)
 402abb8:	d8c00017 	ldw	r3,0(sp)
 402abbc:	300c943a 	slli	r6,r6,16
 402abc0:	1a3fffcc 	andi	r8,r3,65535
 402abc4:	4190b03a 	or	r8,r8,r6
 402abc8:	4080042e 	bgeu	r8,r2,402abdc <__umoddi3+0x3cc>
 402abcc:	4551883a 	add	r8,r8,r21
 402abd0:	b0ffffc4 	addi	r3,r22,-1
 402abd4:	45406f2e 	bgeu	r8,r21,402ad94 <__umoddi3+0x584>
 402abd8:	182d883a 	mov	r22,r3
 402abdc:	880e943a 	slli	r7,r17,16
 402abe0:	9006d43a 	srli	r3,r18,16
 402abe4:	91bfffcc 	andi	r6,r18,65535
 402abe8:	3dacb03a 	or	r22,r7,r22
 402abec:	b02ed43a 	srli	r23,r22,16
 402abf0:	b5bfffcc 	andi	r22,r22,65535
 402abf4:	300b883a 	mov	r5,r6
 402abf8:	b009883a 	mov	r4,r22
 402abfc:	40a3c83a 	sub	r17,r8,r2
 402ac00:	d8c00115 	stw	r3,4(sp)
 402ac04:	d9800215 	stw	r6,8(sp)
 402ac08:	40208380 	call	4020838 <__mulsi3>
 402ac0c:	d9800217 	ldw	r6,8(sp)
 402ac10:	b809883a 	mov	r4,r23
 402ac14:	1039883a 	mov	fp,r2
 402ac18:	300b883a 	mov	r5,r6
 402ac1c:	40208380 	call	4020838 <__mulsi3>
 402ac20:	d8c00117 	ldw	r3,4(sp)
 402ac24:	b809883a 	mov	r4,r23
 402ac28:	d8800215 	stw	r2,8(sp)
 402ac2c:	180b883a 	mov	r5,r3
 402ac30:	40208380 	call	4020838 <__mulsi3>
 402ac34:	d8c00117 	ldw	r3,4(sp)
 402ac38:	b009883a 	mov	r4,r22
 402ac3c:	102f883a 	mov	r23,r2
 402ac40:	180b883a 	mov	r5,r3
 402ac44:	40208380 	call	4020838 <__mulsi3>
 402ac48:	d9800217 	ldw	r6,8(sp)
 402ac4c:	e006d43a 	srli	r3,fp,16
 402ac50:	1185883a 	add	r2,r2,r6
 402ac54:	1885883a 	add	r2,r3,r2
 402ac58:	1180022e 	bgeu	r2,r6,402ac64 <__umoddi3+0x454>
 402ac5c:	00c00074 	movhi	r3,1
 402ac60:	b8ef883a 	add	r23,r23,r3
 402ac64:	1006d43a 	srli	r3,r2,16
 402ac68:	1004943a 	slli	r2,r2,16
 402ac6c:	e73fffcc 	andi	fp,fp,65535
 402ac70:	1dc7883a 	add	r3,r3,r23
 402ac74:	1739883a 	add	fp,r2,fp
 402ac78:	88c03a36 	bltu	r17,r3,402ad64 <__umoddi3+0x554>
 402ac7c:	88c05126 	beq	r17,r3,402adc4 <__umoddi3+0x5b4>
 402ac80:	88c9c83a 	sub	r4,r17,r3
 402ac84:	e00f883a 	mov	r7,fp
 402ac88:	81cfc83a 	sub	r7,r16,r7
 402ac8c:	81c7803a 	cmpltu	r3,r16,r7
 402ac90:	20c7c83a 	sub	r3,r4,r3
 402ac94:	1cc4983a 	sll	r2,r3,r19
 402ac98:	3d0ed83a 	srl	r7,r7,r20
 402ac9c:	1d06d83a 	srl	r3,r3,r20
 402aca0:	11c4b03a 	or	r2,r2,r7
 402aca4:	003f7c06 	br	402aa98 <__flash_rwdata_start+0xffffa784>
 402aca8:	9ca6983a 	sll	r19,r19,r18
 402acac:	88f8d83a 	srl	fp,r17,r3
 402acb0:	80c4d83a 	srl	r2,r16,r3
 402acb4:	982cd43a 	srli	r22,r19,16
 402acb8:	8ca2983a 	sll	r17,r17,r18
 402acbc:	e009883a 	mov	r4,fp
 402acc0:	b00b883a 	mov	r5,r22
 402acc4:	146ab03a 	or	r21,r2,r17
 402acc8:	40207e00 	call	40207e0 <__umodsi3>
 402accc:	b00b883a 	mov	r5,r22
 402acd0:	e009883a 	mov	r4,fp
 402acd4:	1029883a 	mov	r20,r2
 402acd8:	9dffffcc 	andi	r23,r19,65535
 402acdc:	402077c0 	call	402077c <__udivsi3>
 402ace0:	b809883a 	mov	r4,r23
 402ace4:	100b883a 	mov	r5,r2
 402ace8:	40208380 	call	4020838 <__mulsi3>
 402acec:	a008943a 	slli	r4,r20,16
 402acf0:	a806d43a 	srli	r3,r21,16
 402acf4:	84a8983a 	sll	r20,r16,r18
 402acf8:	1906b03a 	or	r3,r3,r4
 402acfc:	1880042e 	bgeu	r3,r2,402ad10 <__umoddi3+0x500>
 402ad00:	1cc7883a 	add	r3,r3,r19
 402ad04:	1cc00236 	bltu	r3,r19,402ad10 <__umoddi3+0x500>
 402ad08:	1880012e 	bgeu	r3,r2,402ad10 <__umoddi3+0x500>
 402ad0c:	1cc7883a 	add	r3,r3,r19
 402ad10:	18a3c83a 	sub	r17,r3,r2
 402ad14:	b00b883a 	mov	r5,r22
 402ad18:	8809883a 	mov	r4,r17
 402ad1c:	40207e00 	call	40207e0 <__umodsi3>
 402ad20:	b00b883a 	mov	r5,r22
 402ad24:	8809883a 	mov	r4,r17
 402ad28:	1021883a 	mov	r16,r2
 402ad2c:	402077c0 	call	402077c <__udivsi3>
 402ad30:	100b883a 	mov	r5,r2
 402ad34:	b809883a 	mov	r4,r23
 402ad38:	8020943a 	slli	r16,r16,16
 402ad3c:	40208380 	call	4020838 <__mulsi3>
 402ad40:	a8ffffcc 	andi	r3,r21,65535
 402ad44:	1c06b03a 	or	r3,r3,r16
 402ad48:	1880042e 	bgeu	r3,r2,402ad5c <__umoddi3+0x54c>
 402ad4c:	1cc7883a 	add	r3,r3,r19
 402ad50:	1cc00236 	bltu	r3,r19,402ad5c <__umoddi3+0x54c>
 402ad54:	1880012e 	bgeu	r3,r2,402ad5c <__umoddi3+0x54c>
 402ad58:	1cc7883a 	add	r3,r3,r19
 402ad5c:	18a3c83a 	sub	r17,r3,r2
 402ad60:	003f2906 	br	402aa08 <__flash_rwdata_start+0xffffa6f4>
 402ad64:	e48fc83a 	sub	r7,fp,r18
 402ad68:	1d49c83a 	sub	r4,r3,r21
 402ad6c:	e1f9803a 	cmpltu	fp,fp,r7
 402ad70:	2739c83a 	sub	fp,r4,fp
 402ad74:	8f09c83a 	sub	r4,r17,fp
 402ad78:	003fc306 	br	402ac88 <__flash_rwdata_start+0xffffa974>
 402ad7c:	01000604 	movi	r4,24
 402ad80:	003ef906 	br	402a968 <__flash_rwdata_start+0xffffa654>
 402ad84:	00800604 	movi	r2,24
 402ad88:	003f1306 	br	402a9d8 <__flash_rwdata_start+0xffffa6c4>
 402ad8c:	01000604 	movi	r4,24
 402ad90:	003eb606 	br	402a86c <__flash_rwdata_start+0xffffa558>
 402ad94:	40bf902e 	bgeu	r8,r2,402abd8 <__flash_rwdata_start+0xffffa8c4>
 402ad98:	b5bfff84 	addi	r22,r22,-2
 402ad9c:	4551883a 	add	r8,r8,r21
 402ada0:	003f8e06 	br	402abdc <__flash_rwdata_start+0xffffa8c8>
 402ada4:	18bf762e 	bgeu	r3,r2,402ab80 <__flash_rwdata_start+0xffffa86c>
 402ada8:	8c7fff84 	addi	r17,r17,-2
 402adac:	1d47883a 	add	r3,r3,r21
 402adb0:	003f7406 	br	402ab84 <__flash_rwdata_start+0xffffa870>
 402adb4:	1cc7883a 	add	r3,r3,r19
 402adb8:	003ecd06 	br	402a8f0 <__flash_rwdata_start+0xffffa5dc>
 402adbc:	8005883a 	mov	r2,r16
 402adc0:	003ef806 	br	402a9a4 <__flash_rwdata_start+0xffffa690>
 402adc4:	873fe736 	bltu	r16,fp,402ad64 <__flash_rwdata_start+0xffffaa50>
 402adc8:	e00f883a 	mov	r7,fp
 402adcc:	0009883a 	mov	r4,zero
 402add0:	003fad06 	br	402ac88 <__flash_rwdata_start+0xffffa974>

0402add4 <__adddf3>:
 402add4:	02c00434 	movhi	r11,16
 402add8:	5affffc4 	addi	r11,r11,-1
 402addc:	2806d7fa 	srli	r3,r5,31
 402ade0:	2ad4703a 	and	r10,r5,r11
 402ade4:	3ad2703a 	and	r9,r7,r11
 402ade8:	3804d53a 	srli	r2,r7,20
 402adec:	3018d77a 	srli	r12,r6,29
 402adf0:	280ad53a 	srli	r5,r5,20
 402adf4:	501490fa 	slli	r10,r10,3
 402adf8:	2010d77a 	srli	r8,r4,29
 402adfc:	481290fa 	slli	r9,r9,3
 402ae00:	380ed7fa 	srli	r7,r7,31
 402ae04:	defffb04 	addi	sp,sp,-20
 402ae08:	dc800215 	stw	r18,8(sp)
 402ae0c:	dc400115 	stw	r17,4(sp)
 402ae10:	dc000015 	stw	r16,0(sp)
 402ae14:	dfc00415 	stw	ra,16(sp)
 402ae18:	dcc00315 	stw	r19,12(sp)
 402ae1c:	1c803fcc 	andi	r18,r3,255
 402ae20:	2c01ffcc 	andi	r16,r5,2047
 402ae24:	5210b03a 	or	r8,r10,r8
 402ae28:	202290fa 	slli	r17,r4,3
 402ae2c:	1081ffcc 	andi	r2,r2,2047
 402ae30:	4b12b03a 	or	r9,r9,r12
 402ae34:	300c90fa 	slli	r6,r6,3
 402ae38:	91c07526 	beq	r18,r7,402b010 <__adddf3+0x23c>
 402ae3c:	8087c83a 	sub	r3,r16,r2
 402ae40:	00c0ab0e 	bge	zero,r3,402b0f0 <__adddf3+0x31c>
 402ae44:	10002a1e 	bne	r2,zero,402aef0 <__adddf3+0x11c>
 402ae48:	4984b03a 	or	r2,r9,r6
 402ae4c:	1000961e 	bne	r2,zero,402b0a8 <__adddf3+0x2d4>
 402ae50:	888001cc 	andi	r2,r17,7
 402ae54:	10000726 	beq	r2,zero,402ae74 <__adddf3+0xa0>
 402ae58:	888003cc 	andi	r2,r17,15
 402ae5c:	00c00104 	movi	r3,4
 402ae60:	10c00426 	beq	r2,r3,402ae74 <__adddf3+0xa0>
 402ae64:	88c7883a 	add	r3,r17,r3
 402ae68:	1c63803a 	cmpltu	r17,r3,r17
 402ae6c:	4451883a 	add	r8,r8,r17
 402ae70:	1823883a 	mov	r17,r3
 402ae74:	4080202c 	andhi	r2,r8,128
 402ae78:	10005926 	beq	r2,zero,402afe0 <__adddf3+0x20c>
 402ae7c:	84000044 	addi	r16,r16,1
 402ae80:	0081ffc4 	movi	r2,2047
 402ae84:	8080ba26 	beq	r16,r2,402b170 <__adddf3+0x39c>
 402ae88:	00bfe034 	movhi	r2,65408
 402ae8c:	10bfffc4 	addi	r2,r2,-1
 402ae90:	4090703a 	and	r8,r8,r2
 402ae94:	4004977a 	slli	r2,r8,29
 402ae98:	4010927a 	slli	r8,r8,9
 402ae9c:	8822d0fa 	srli	r17,r17,3
 402aea0:	8401ffcc 	andi	r16,r16,2047
 402aea4:	4010d33a 	srli	r8,r8,12
 402aea8:	9007883a 	mov	r3,r18
 402aeac:	1444b03a 	or	r2,r2,r17
 402aeb0:	8401ffcc 	andi	r16,r16,2047
 402aeb4:	8020953a 	slli	r16,r16,20
 402aeb8:	18c03fcc 	andi	r3,r3,255
 402aebc:	01000434 	movhi	r4,16
 402aec0:	213fffc4 	addi	r4,r4,-1
 402aec4:	180697fa 	slli	r3,r3,31
 402aec8:	4110703a 	and	r8,r8,r4
 402aecc:	4410b03a 	or	r8,r8,r16
 402aed0:	40c6b03a 	or	r3,r8,r3
 402aed4:	dfc00417 	ldw	ra,16(sp)
 402aed8:	dcc00317 	ldw	r19,12(sp)
 402aedc:	dc800217 	ldw	r18,8(sp)
 402aee0:	dc400117 	ldw	r17,4(sp)
 402aee4:	dc000017 	ldw	r16,0(sp)
 402aee8:	dec00504 	addi	sp,sp,20
 402aeec:	f800283a 	ret
 402aef0:	0081ffc4 	movi	r2,2047
 402aef4:	80bfd626 	beq	r16,r2,402ae50 <__flash_rwdata_start+0xffffab3c>
 402aef8:	4a402034 	orhi	r9,r9,128
 402aefc:	00800e04 	movi	r2,56
 402af00:	10c09f16 	blt	r2,r3,402b180 <__adddf3+0x3ac>
 402af04:	008007c4 	movi	r2,31
 402af08:	10c0c216 	blt	r2,r3,402b214 <__adddf3+0x440>
 402af0c:	00800804 	movi	r2,32
 402af10:	10c5c83a 	sub	r2,r2,r3
 402af14:	488a983a 	sll	r5,r9,r2
 402af18:	30c8d83a 	srl	r4,r6,r3
 402af1c:	3084983a 	sll	r2,r6,r2
 402af20:	48c6d83a 	srl	r3,r9,r3
 402af24:	290cb03a 	or	r6,r5,r4
 402af28:	1004c03a 	cmpne	r2,r2,zero
 402af2c:	308cb03a 	or	r6,r6,r2
 402af30:	898dc83a 	sub	r6,r17,r6
 402af34:	89a3803a 	cmpltu	r17,r17,r6
 402af38:	40d1c83a 	sub	r8,r8,r3
 402af3c:	4451c83a 	sub	r8,r8,r17
 402af40:	3023883a 	mov	r17,r6
 402af44:	4080202c 	andhi	r2,r8,128
 402af48:	10002326 	beq	r2,zero,402afd8 <__adddf3+0x204>
 402af4c:	04c02034 	movhi	r19,128
 402af50:	9cffffc4 	addi	r19,r19,-1
 402af54:	44e6703a 	and	r19,r8,r19
 402af58:	98007626 	beq	r19,zero,402b134 <__adddf3+0x360>
 402af5c:	9809883a 	mov	r4,r19
 402af60:	402d6140 	call	402d614 <__clzsi2>
 402af64:	10fffe04 	addi	r3,r2,-8
 402af68:	010007c4 	movi	r4,31
 402af6c:	20c07716 	blt	r4,r3,402b14c <__adddf3+0x378>
 402af70:	00800804 	movi	r2,32
 402af74:	10c5c83a 	sub	r2,r2,r3
 402af78:	8884d83a 	srl	r2,r17,r2
 402af7c:	98d0983a 	sll	r8,r19,r3
 402af80:	88e2983a 	sll	r17,r17,r3
 402af84:	1204b03a 	or	r2,r2,r8
 402af88:	1c007416 	blt	r3,r16,402b15c <__adddf3+0x388>
 402af8c:	1c21c83a 	sub	r16,r3,r16
 402af90:	82000044 	addi	r8,r16,1
 402af94:	00c007c4 	movi	r3,31
 402af98:	1a009116 	blt	r3,r8,402b1e0 <__adddf3+0x40c>
 402af9c:	00c00804 	movi	r3,32
 402afa0:	1a07c83a 	sub	r3,r3,r8
 402afa4:	8a08d83a 	srl	r4,r17,r8
 402afa8:	88e2983a 	sll	r17,r17,r3
 402afac:	10c6983a 	sll	r3,r2,r3
 402afb0:	1210d83a 	srl	r8,r2,r8
 402afb4:	8804c03a 	cmpne	r2,r17,zero
 402afb8:	1906b03a 	or	r3,r3,r4
 402afbc:	18a2b03a 	or	r17,r3,r2
 402afc0:	0021883a 	mov	r16,zero
 402afc4:	003fa206 	br	402ae50 <__flash_rwdata_start+0xffffab3c>
 402afc8:	1890b03a 	or	r8,r3,r2
 402afcc:	40017d26 	beq	r8,zero,402b5c4 <__adddf3+0x7f0>
 402afd0:	1011883a 	mov	r8,r2
 402afd4:	1823883a 	mov	r17,r3
 402afd8:	888001cc 	andi	r2,r17,7
 402afdc:	103f9e1e 	bne	r2,zero,402ae58 <__flash_rwdata_start+0xffffab44>
 402afe0:	4004977a 	slli	r2,r8,29
 402afe4:	8822d0fa 	srli	r17,r17,3
 402afe8:	4010d0fa 	srli	r8,r8,3
 402afec:	9007883a 	mov	r3,r18
 402aff0:	1444b03a 	or	r2,r2,r17
 402aff4:	0101ffc4 	movi	r4,2047
 402aff8:	81002426 	beq	r16,r4,402b08c <__adddf3+0x2b8>
 402affc:	8120703a 	and	r16,r16,r4
 402b000:	01000434 	movhi	r4,16
 402b004:	213fffc4 	addi	r4,r4,-1
 402b008:	4110703a 	and	r8,r8,r4
 402b00c:	003fa806 	br	402aeb0 <__flash_rwdata_start+0xffffab9c>
 402b010:	8089c83a 	sub	r4,r16,r2
 402b014:	01005e0e 	bge	zero,r4,402b190 <__adddf3+0x3bc>
 402b018:	10002b26 	beq	r2,zero,402b0c8 <__adddf3+0x2f4>
 402b01c:	0081ffc4 	movi	r2,2047
 402b020:	80bf8b26 	beq	r16,r2,402ae50 <__flash_rwdata_start+0xffffab3c>
 402b024:	4a402034 	orhi	r9,r9,128
 402b028:	00800e04 	movi	r2,56
 402b02c:	1100a40e 	bge	r2,r4,402b2c0 <__adddf3+0x4ec>
 402b030:	498cb03a 	or	r6,r9,r6
 402b034:	300ac03a 	cmpne	r5,r6,zero
 402b038:	0013883a 	mov	r9,zero
 402b03c:	2c4b883a 	add	r5,r5,r17
 402b040:	2c63803a 	cmpltu	r17,r5,r17
 402b044:	4a11883a 	add	r8,r9,r8
 402b048:	8a11883a 	add	r8,r17,r8
 402b04c:	2823883a 	mov	r17,r5
 402b050:	4080202c 	andhi	r2,r8,128
 402b054:	103fe026 	beq	r2,zero,402afd8 <__flash_rwdata_start+0xffffacc4>
 402b058:	84000044 	addi	r16,r16,1
 402b05c:	0081ffc4 	movi	r2,2047
 402b060:	8080d226 	beq	r16,r2,402b3ac <__adddf3+0x5d8>
 402b064:	00bfe034 	movhi	r2,65408
 402b068:	10bfffc4 	addi	r2,r2,-1
 402b06c:	4090703a 	and	r8,r8,r2
 402b070:	880ad07a 	srli	r5,r17,1
 402b074:	400897fa 	slli	r4,r8,31
 402b078:	88c0004c 	andi	r3,r17,1
 402b07c:	28e2b03a 	or	r17,r5,r3
 402b080:	4010d07a 	srli	r8,r8,1
 402b084:	2462b03a 	or	r17,r4,r17
 402b088:	003f7106 	br	402ae50 <__flash_rwdata_start+0xffffab3c>
 402b08c:	4088b03a 	or	r4,r8,r2
 402b090:	20014526 	beq	r4,zero,402b5a8 <__adddf3+0x7d4>
 402b094:	01000434 	movhi	r4,16
 402b098:	42000234 	orhi	r8,r8,8
 402b09c:	213fffc4 	addi	r4,r4,-1
 402b0a0:	4110703a 	and	r8,r8,r4
 402b0a4:	003f8206 	br	402aeb0 <__flash_rwdata_start+0xffffab9c>
 402b0a8:	18ffffc4 	addi	r3,r3,-1
 402b0ac:	1800491e 	bne	r3,zero,402b1d4 <__adddf3+0x400>
 402b0b0:	898bc83a 	sub	r5,r17,r6
 402b0b4:	8963803a 	cmpltu	r17,r17,r5
 402b0b8:	4251c83a 	sub	r8,r8,r9
 402b0bc:	4451c83a 	sub	r8,r8,r17
 402b0c0:	2823883a 	mov	r17,r5
 402b0c4:	003f9f06 	br	402af44 <__flash_rwdata_start+0xffffac30>
 402b0c8:	4984b03a 	or	r2,r9,r6
 402b0cc:	103f6026 	beq	r2,zero,402ae50 <__flash_rwdata_start+0xffffab3c>
 402b0d0:	213fffc4 	addi	r4,r4,-1
 402b0d4:	2000931e 	bne	r4,zero,402b324 <__adddf3+0x550>
 402b0d8:	898d883a 	add	r6,r17,r6
 402b0dc:	3463803a 	cmpltu	r17,r6,r17
 402b0e0:	4251883a 	add	r8,r8,r9
 402b0e4:	8a11883a 	add	r8,r17,r8
 402b0e8:	3023883a 	mov	r17,r6
 402b0ec:	003fd806 	br	402b050 <__flash_rwdata_start+0xffffad3c>
 402b0f0:	1800541e 	bne	r3,zero,402b244 <__adddf3+0x470>
 402b0f4:	80800044 	addi	r2,r16,1
 402b0f8:	1081ffcc 	andi	r2,r2,2047
 402b0fc:	00c00044 	movi	r3,1
 402b100:	1880a00e 	bge	r3,r2,402b384 <__adddf3+0x5b0>
 402b104:	8989c83a 	sub	r4,r17,r6
 402b108:	8905803a 	cmpltu	r2,r17,r4
 402b10c:	4267c83a 	sub	r19,r8,r9
 402b110:	98a7c83a 	sub	r19,r19,r2
 402b114:	9880202c 	andhi	r2,r19,128
 402b118:	10006326 	beq	r2,zero,402b2a8 <__adddf3+0x4d4>
 402b11c:	3463c83a 	sub	r17,r6,r17
 402b120:	4a07c83a 	sub	r3,r9,r8
 402b124:	344d803a 	cmpltu	r6,r6,r17
 402b128:	19a7c83a 	sub	r19,r3,r6
 402b12c:	3825883a 	mov	r18,r7
 402b130:	983f8a1e 	bne	r19,zero,402af5c <__flash_rwdata_start+0xffffac48>
 402b134:	8809883a 	mov	r4,r17
 402b138:	402d6140 	call	402d614 <__clzsi2>
 402b13c:	10800804 	addi	r2,r2,32
 402b140:	10fffe04 	addi	r3,r2,-8
 402b144:	010007c4 	movi	r4,31
 402b148:	20ff890e 	bge	r4,r3,402af70 <__flash_rwdata_start+0xffffac5c>
 402b14c:	10bff604 	addi	r2,r2,-40
 402b150:	8884983a 	sll	r2,r17,r2
 402b154:	0023883a 	mov	r17,zero
 402b158:	1c3f8c0e 	bge	r3,r16,402af8c <__flash_rwdata_start+0xffffac78>
 402b15c:	023fe034 	movhi	r8,65408
 402b160:	423fffc4 	addi	r8,r8,-1
 402b164:	80e1c83a 	sub	r16,r16,r3
 402b168:	1210703a 	and	r8,r2,r8
 402b16c:	003f3806 	br	402ae50 <__flash_rwdata_start+0xffffab3c>
 402b170:	9007883a 	mov	r3,r18
 402b174:	0011883a 	mov	r8,zero
 402b178:	0005883a 	mov	r2,zero
 402b17c:	003f4c06 	br	402aeb0 <__flash_rwdata_start+0xffffab9c>
 402b180:	498cb03a 	or	r6,r9,r6
 402b184:	300cc03a 	cmpne	r6,r6,zero
 402b188:	0007883a 	mov	r3,zero
 402b18c:	003f6806 	br	402af30 <__flash_rwdata_start+0xffffac1c>
 402b190:	20009c1e 	bne	r4,zero,402b404 <__adddf3+0x630>
 402b194:	80800044 	addi	r2,r16,1
 402b198:	1141ffcc 	andi	r5,r2,2047
 402b19c:	01000044 	movi	r4,1
 402b1a0:	2140670e 	bge	r4,r5,402b340 <__adddf3+0x56c>
 402b1a4:	0101ffc4 	movi	r4,2047
 402b1a8:	11007f26 	beq	r2,r4,402b3a8 <__adddf3+0x5d4>
 402b1ac:	898d883a 	add	r6,r17,r6
 402b1b0:	4247883a 	add	r3,r8,r9
 402b1b4:	3451803a 	cmpltu	r8,r6,r17
 402b1b8:	40d1883a 	add	r8,r8,r3
 402b1bc:	402297fa 	slli	r17,r8,31
 402b1c0:	300cd07a 	srli	r6,r6,1
 402b1c4:	4010d07a 	srli	r8,r8,1
 402b1c8:	1021883a 	mov	r16,r2
 402b1cc:	89a2b03a 	or	r17,r17,r6
 402b1d0:	003f1f06 	br	402ae50 <__flash_rwdata_start+0xffffab3c>
 402b1d4:	0081ffc4 	movi	r2,2047
 402b1d8:	80bf481e 	bne	r16,r2,402aefc <__flash_rwdata_start+0xffffabe8>
 402b1dc:	003f1c06 	br	402ae50 <__flash_rwdata_start+0xffffab3c>
 402b1e0:	843ff844 	addi	r16,r16,-31
 402b1e4:	01000804 	movi	r4,32
 402b1e8:	1406d83a 	srl	r3,r2,r16
 402b1ec:	41005026 	beq	r8,r4,402b330 <__adddf3+0x55c>
 402b1f0:	01001004 	movi	r4,64
 402b1f4:	2211c83a 	sub	r8,r4,r8
 402b1f8:	1204983a 	sll	r2,r2,r8
 402b1fc:	88a2b03a 	or	r17,r17,r2
 402b200:	8822c03a 	cmpne	r17,r17,zero
 402b204:	1c62b03a 	or	r17,r3,r17
 402b208:	0011883a 	mov	r8,zero
 402b20c:	0021883a 	mov	r16,zero
 402b210:	003f7106 	br	402afd8 <__flash_rwdata_start+0xffffacc4>
 402b214:	193ff804 	addi	r4,r3,-32
 402b218:	00800804 	movi	r2,32
 402b21c:	4908d83a 	srl	r4,r9,r4
 402b220:	18804526 	beq	r3,r2,402b338 <__adddf3+0x564>
 402b224:	00801004 	movi	r2,64
 402b228:	10c5c83a 	sub	r2,r2,r3
 402b22c:	4886983a 	sll	r3,r9,r2
 402b230:	198cb03a 	or	r6,r3,r6
 402b234:	300cc03a 	cmpne	r6,r6,zero
 402b238:	218cb03a 	or	r6,r4,r6
 402b23c:	0007883a 	mov	r3,zero
 402b240:	003f3b06 	br	402af30 <__flash_rwdata_start+0xffffac1c>
 402b244:	80002a26 	beq	r16,zero,402b2f0 <__adddf3+0x51c>
 402b248:	0101ffc4 	movi	r4,2047
 402b24c:	11006826 	beq	r2,r4,402b3f0 <__adddf3+0x61c>
 402b250:	00c7c83a 	sub	r3,zero,r3
 402b254:	42002034 	orhi	r8,r8,128
 402b258:	01000e04 	movi	r4,56
 402b25c:	20c07c16 	blt	r4,r3,402b450 <__adddf3+0x67c>
 402b260:	010007c4 	movi	r4,31
 402b264:	20c0da16 	blt	r4,r3,402b5d0 <__adddf3+0x7fc>
 402b268:	01000804 	movi	r4,32
 402b26c:	20c9c83a 	sub	r4,r4,r3
 402b270:	4114983a 	sll	r10,r8,r4
 402b274:	88cad83a 	srl	r5,r17,r3
 402b278:	8908983a 	sll	r4,r17,r4
 402b27c:	40c6d83a 	srl	r3,r8,r3
 402b280:	5162b03a 	or	r17,r10,r5
 402b284:	2008c03a 	cmpne	r4,r4,zero
 402b288:	8922b03a 	or	r17,r17,r4
 402b28c:	3463c83a 	sub	r17,r6,r17
 402b290:	48c7c83a 	sub	r3,r9,r3
 402b294:	344d803a 	cmpltu	r6,r6,r17
 402b298:	1991c83a 	sub	r8,r3,r6
 402b29c:	1021883a 	mov	r16,r2
 402b2a0:	3825883a 	mov	r18,r7
 402b2a4:	003f2706 	br	402af44 <__flash_rwdata_start+0xffffac30>
 402b2a8:	24d0b03a 	or	r8,r4,r19
 402b2ac:	40001b1e 	bne	r8,zero,402b31c <__adddf3+0x548>
 402b2b0:	0005883a 	mov	r2,zero
 402b2b4:	0007883a 	mov	r3,zero
 402b2b8:	0021883a 	mov	r16,zero
 402b2bc:	003f4d06 	br	402aff4 <__flash_rwdata_start+0xfffface0>
 402b2c0:	008007c4 	movi	r2,31
 402b2c4:	11003c16 	blt	r2,r4,402b3b8 <__adddf3+0x5e4>
 402b2c8:	00800804 	movi	r2,32
 402b2cc:	1105c83a 	sub	r2,r2,r4
 402b2d0:	488e983a 	sll	r7,r9,r2
 402b2d4:	310ad83a 	srl	r5,r6,r4
 402b2d8:	3084983a 	sll	r2,r6,r2
 402b2dc:	4912d83a 	srl	r9,r9,r4
 402b2e0:	394ab03a 	or	r5,r7,r5
 402b2e4:	1004c03a 	cmpne	r2,r2,zero
 402b2e8:	288ab03a 	or	r5,r5,r2
 402b2ec:	003f5306 	br	402b03c <__flash_rwdata_start+0xffffad28>
 402b2f0:	4448b03a 	or	r4,r8,r17
 402b2f4:	20003e26 	beq	r4,zero,402b3f0 <__adddf3+0x61c>
 402b2f8:	00c6303a 	nor	r3,zero,r3
 402b2fc:	18003a1e 	bne	r3,zero,402b3e8 <__adddf3+0x614>
 402b300:	3463c83a 	sub	r17,r6,r17
 402b304:	4a07c83a 	sub	r3,r9,r8
 402b308:	344d803a 	cmpltu	r6,r6,r17
 402b30c:	1991c83a 	sub	r8,r3,r6
 402b310:	1021883a 	mov	r16,r2
 402b314:	3825883a 	mov	r18,r7
 402b318:	003f0a06 	br	402af44 <__flash_rwdata_start+0xffffac30>
 402b31c:	2023883a 	mov	r17,r4
 402b320:	003f0d06 	br	402af58 <__flash_rwdata_start+0xffffac44>
 402b324:	0081ffc4 	movi	r2,2047
 402b328:	80bf3f1e 	bne	r16,r2,402b028 <__flash_rwdata_start+0xffffad14>
 402b32c:	003ec806 	br	402ae50 <__flash_rwdata_start+0xffffab3c>
 402b330:	0005883a 	mov	r2,zero
 402b334:	003fb106 	br	402b1fc <__flash_rwdata_start+0xffffaee8>
 402b338:	0007883a 	mov	r3,zero
 402b33c:	003fbc06 	br	402b230 <__flash_rwdata_start+0xffffaf1c>
 402b340:	4444b03a 	or	r2,r8,r17
 402b344:	8000871e 	bne	r16,zero,402b564 <__adddf3+0x790>
 402b348:	1000ba26 	beq	r2,zero,402b634 <__adddf3+0x860>
 402b34c:	4984b03a 	or	r2,r9,r6
 402b350:	103ebf26 	beq	r2,zero,402ae50 <__flash_rwdata_start+0xffffab3c>
 402b354:	8985883a 	add	r2,r17,r6
 402b358:	4247883a 	add	r3,r8,r9
 402b35c:	1451803a 	cmpltu	r8,r2,r17
 402b360:	40d1883a 	add	r8,r8,r3
 402b364:	40c0202c 	andhi	r3,r8,128
 402b368:	1023883a 	mov	r17,r2
 402b36c:	183f1a26 	beq	r3,zero,402afd8 <__flash_rwdata_start+0xffffacc4>
 402b370:	00bfe034 	movhi	r2,65408
 402b374:	10bfffc4 	addi	r2,r2,-1
 402b378:	2021883a 	mov	r16,r4
 402b37c:	4090703a 	and	r8,r8,r2
 402b380:	003eb306 	br	402ae50 <__flash_rwdata_start+0xffffab3c>
 402b384:	4444b03a 	or	r2,r8,r17
 402b388:	8000291e 	bne	r16,zero,402b430 <__adddf3+0x65c>
 402b38c:	10004b1e 	bne	r2,zero,402b4bc <__adddf3+0x6e8>
 402b390:	4990b03a 	or	r8,r9,r6
 402b394:	40008b26 	beq	r8,zero,402b5c4 <__adddf3+0x7f0>
 402b398:	4811883a 	mov	r8,r9
 402b39c:	3023883a 	mov	r17,r6
 402b3a0:	3825883a 	mov	r18,r7
 402b3a4:	003eaa06 	br	402ae50 <__flash_rwdata_start+0xffffab3c>
 402b3a8:	1021883a 	mov	r16,r2
 402b3ac:	0011883a 	mov	r8,zero
 402b3b0:	0005883a 	mov	r2,zero
 402b3b4:	003f0f06 	br	402aff4 <__flash_rwdata_start+0xfffface0>
 402b3b8:	217ff804 	addi	r5,r4,-32
 402b3bc:	00800804 	movi	r2,32
 402b3c0:	494ad83a 	srl	r5,r9,r5
 402b3c4:	20807d26 	beq	r4,r2,402b5bc <__adddf3+0x7e8>
 402b3c8:	00801004 	movi	r2,64
 402b3cc:	1109c83a 	sub	r4,r2,r4
 402b3d0:	4912983a 	sll	r9,r9,r4
 402b3d4:	498cb03a 	or	r6,r9,r6
 402b3d8:	300cc03a 	cmpne	r6,r6,zero
 402b3dc:	298ab03a 	or	r5,r5,r6
 402b3e0:	0013883a 	mov	r9,zero
 402b3e4:	003f1506 	br	402b03c <__flash_rwdata_start+0xffffad28>
 402b3e8:	0101ffc4 	movi	r4,2047
 402b3ec:	113f9a1e 	bne	r2,r4,402b258 <__flash_rwdata_start+0xffffaf44>
 402b3f0:	4811883a 	mov	r8,r9
 402b3f4:	3023883a 	mov	r17,r6
 402b3f8:	1021883a 	mov	r16,r2
 402b3fc:	3825883a 	mov	r18,r7
 402b400:	003e9306 	br	402ae50 <__flash_rwdata_start+0xffffab3c>
 402b404:	8000161e 	bne	r16,zero,402b460 <__adddf3+0x68c>
 402b408:	444ab03a 	or	r5,r8,r17
 402b40c:	28005126 	beq	r5,zero,402b554 <__adddf3+0x780>
 402b410:	0108303a 	nor	r4,zero,r4
 402b414:	20004d1e 	bne	r4,zero,402b54c <__adddf3+0x778>
 402b418:	89a3883a 	add	r17,r17,r6
 402b41c:	4253883a 	add	r9,r8,r9
 402b420:	898d803a 	cmpltu	r6,r17,r6
 402b424:	3251883a 	add	r8,r6,r9
 402b428:	1021883a 	mov	r16,r2
 402b42c:	003f0806 	br	402b050 <__flash_rwdata_start+0xffffad3c>
 402b430:	1000301e 	bne	r2,zero,402b4f4 <__adddf3+0x720>
 402b434:	4984b03a 	or	r2,r9,r6
 402b438:	10007126 	beq	r2,zero,402b600 <__adddf3+0x82c>
 402b43c:	4811883a 	mov	r8,r9
 402b440:	3023883a 	mov	r17,r6
 402b444:	3825883a 	mov	r18,r7
 402b448:	0401ffc4 	movi	r16,2047
 402b44c:	003e8006 	br	402ae50 <__flash_rwdata_start+0xffffab3c>
 402b450:	4462b03a 	or	r17,r8,r17
 402b454:	8822c03a 	cmpne	r17,r17,zero
 402b458:	0007883a 	mov	r3,zero
 402b45c:	003f8b06 	br	402b28c <__flash_rwdata_start+0xffffaf78>
 402b460:	0141ffc4 	movi	r5,2047
 402b464:	11403b26 	beq	r2,r5,402b554 <__adddf3+0x780>
 402b468:	0109c83a 	sub	r4,zero,r4
 402b46c:	42002034 	orhi	r8,r8,128
 402b470:	01400e04 	movi	r5,56
 402b474:	29006716 	blt	r5,r4,402b614 <__adddf3+0x840>
 402b478:	014007c4 	movi	r5,31
 402b47c:	29007016 	blt	r5,r4,402b640 <__adddf3+0x86c>
 402b480:	01400804 	movi	r5,32
 402b484:	290bc83a 	sub	r5,r5,r4
 402b488:	4154983a 	sll	r10,r8,r5
 402b48c:	890ed83a 	srl	r7,r17,r4
 402b490:	894a983a 	sll	r5,r17,r5
 402b494:	4108d83a 	srl	r4,r8,r4
 402b498:	51e2b03a 	or	r17,r10,r7
 402b49c:	280ac03a 	cmpne	r5,r5,zero
 402b4a0:	8962b03a 	or	r17,r17,r5
 402b4a4:	89a3883a 	add	r17,r17,r6
 402b4a8:	2253883a 	add	r9,r4,r9
 402b4ac:	898d803a 	cmpltu	r6,r17,r6
 402b4b0:	3251883a 	add	r8,r6,r9
 402b4b4:	1021883a 	mov	r16,r2
 402b4b8:	003ee506 	br	402b050 <__flash_rwdata_start+0xffffad3c>
 402b4bc:	4984b03a 	or	r2,r9,r6
 402b4c0:	103e6326 	beq	r2,zero,402ae50 <__flash_rwdata_start+0xffffab3c>
 402b4c4:	8987c83a 	sub	r3,r17,r6
 402b4c8:	88c9803a 	cmpltu	r4,r17,r3
 402b4cc:	4245c83a 	sub	r2,r8,r9
 402b4d0:	1105c83a 	sub	r2,r2,r4
 402b4d4:	1100202c 	andhi	r4,r2,128
 402b4d8:	203ebb26 	beq	r4,zero,402afc8 <__flash_rwdata_start+0xffffacb4>
 402b4dc:	3463c83a 	sub	r17,r6,r17
 402b4e0:	4a07c83a 	sub	r3,r9,r8
 402b4e4:	344d803a 	cmpltu	r6,r6,r17
 402b4e8:	1991c83a 	sub	r8,r3,r6
 402b4ec:	3825883a 	mov	r18,r7
 402b4f0:	003e5706 	br	402ae50 <__flash_rwdata_start+0xffffab3c>
 402b4f4:	4984b03a 	or	r2,r9,r6
 402b4f8:	10002e26 	beq	r2,zero,402b5b4 <__adddf3+0x7e0>
 402b4fc:	4004d0fa 	srli	r2,r8,3
 402b500:	8822d0fa 	srli	r17,r17,3
 402b504:	4010977a 	slli	r8,r8,29
 402b508:	10c0022c 	andhi	r3,r2,8
 402b50c:	4462b03a 	or	r17,r8,r17
 402b510:	18000826 	beq	r3,zero,402b534 <__adddf3+0x760>
 402b514:	4808d0fa 	srli	r4,r9,3
 402b518:	20c0022c 	andhi	r3,r4,8
 402b51c:	1800051e 	bne	r3,zero,402b534 <__adddf3+0x760>
 402b520:	300cd0fa 	srli	r6,r6,3
 402b524:	4806977a 	slli	r3,r9,29
 402b528:	2005883a 	mov	r2,r4
 402b52c:	3825883a 	mov	r18,r7
 402b530:	19a2b03a 	or	r17,r3,r6
 402b534:	8810d77a 	srli	r8,r17,29
 402b538:	100490fa 	slli	r2,r2,3
 402b53c:	882290fa 	slli	r17,r17,3
 402b540:	0401ffc4 	movi	r16,2047
 402b544:	4090b03a 	or	r8,r8,r2
 402b548:	003e4106 	br	402ae50 <__flash_rwdata_start+0xffffab3c>
 402b54c:	0141ffc4 	movi	r5,2047
 402b550:	117fc71e 	bne	r2,r5,402b470 <__flash_rwdata_start+0xffffb15c>
 402b554:	4811883a 	mov	r8,r9
 402b558:	3023883a 	mov	r17,r6
 402b55c:	1021883a 	mov	r16,r2
 402b560:	003e3b06 	br	402ae50 <__flash_rwdata_start+0xffffab3c>
 402b564:	10002f26 	beq	r2,zero,402b624 <__adddf3+0x850>
 402b568:	4984b03a 	or	r2,r9,r6
 402b56c:	10001126 	beq	r2,zero,402b5b4 <__adddf3+0x7e0>
 402b570:	4004d0fa 	srli	r2,r8,3
 402b574:	8822d0fa 	srli	r17,r17,3
 402b578:	4010977a 	slli	r8,r8,29
 402b57c:	10c0022c 	andhi	r3,r2,8
 402b580:	4462b03a 	or	r17,r8,r17
 402b584:	183feb26 	beq	r3,zero,402b534 <__flash_rwdata_start+0xffffb220>
 402b588:	4808d0fa 	srli	r4,r9,3
 402b58c:	20c0022c 	andhi	r3,r4,8
 402b590:	183fe81e 	bne	r3,zero,402b534 <__flash_rwdata_start+0xffffb220>
 402b594:	300cd0fa 	srli	r6,r6,3
 402b598:	4806977a 	slli	r3,r9,29
 402b59c:	2005883a 	mov	r2,r4
 402b5a0:	19a2b03a 	or	r17,r3,r6
 402b5a4:	003fe306 	br	402b534 <__flash_rwdata_start+0xffffb220>
 402b5a8:	0011883a 	mov	r8,zero
 402b5ac:	0005883a 	mov	r2,zero
 402b5b0:	003e3f06 	br	402aeb0 <__flash_rwdata_start+0xffffab9c>
 402b5b4:	0401ffc4 	movi	r16,2047
 402b5b8:	003e2506 	br	402ae50 <__flash_rwdata_start+0xffffab3c>
 402b5bc:	0013883a 	mov	r9,zero
 402b5c0:	003f8406 	br	402b3d4 <__flash_rwdata_start+0xffffb0c0>
 402b5c4:	0005883a 	mov	r2,zero
 402b5c8:	0007883a 	mov	r3,zero
 402b5cc:	003e8906 	br	402aff4 <__flash_rwdata_start+0xfffface0>
 402b5d0:	197ff804 	addi	r5,r3,-32
 402b5d4:	01000804 	movi	r4,32
 402b5d8:	414ad83a 	srl	r5,r8,r5
 402b5dc:	19002426 	beq	r3,r4,402b670 <__adddf3+0x89c>
 402b5e0:	01001004 	movi	r4,64
 402b5e4:	20c7c83a 	sub	r3,r4,r3
 402b5e8:	40c6983a 	sll	r3,r8,r3
 402b5ec:	1c46b03a 	or	r3,r3,r17
 402b5f0:	1806c03a 	cmpne	r3,r3,zero
 402b5f4:	28e2b03a 	or	r17,r5,r3
 402b5f8:	0007883a 	mov	r3,zero
 402b5fc:	003f2306 	br	402b28c <__flash_rwdata_start+0xffffaf78>
 402b600:	0007883a 	mov	r3,zero
 402b604:	5811883a 	mov	r8,r11
 402b608:	00bfffc4 	movi	r2,-1
 402b60c:	0401ffc4 	movi	r16,2047
 402b610:	003e7806 	br	402aff4 <__flash_rwdata_start+0xfffface0>
 402b614:	4462b03a 	or	r17,r8,r17
 402b618:	8822c03a 	cmpne	r17,r17,zero
 402b61c:	0009883a 	mov	r4,zero
 402b620:	003fa006 	br	402b4a4 <__flash_rwdata_start+0xffffb190>
 402b624:	4811883a 	mov	r8,r9
 402b628:	3023883a 	mov	r17,r6
 402b62c:	0401ffc4 	movi	r16,2047
 402b630:	003e0706 	br	402ae50 <__flash_rwdata_start+0xffffab3c>
 402b634:	4811883a 	mov	r8,r9
 402b638:	3023883a 	mov	r17,r6
 402b63c:	003e0406 	br	402ae50 <__flash_rwdata_start+0xffffab3c>
 402b640:	21fff804 	addi	r7,r4,-32
 402b644:	01400804 	movi	r5,32
 402b648:	41ced83a 	srl	r7,r8,r7
 402b64c:	21400a26 	beq	r4,r5,402b678 <__adddf3+0x8a4>
 402b650:	01401004 	movi	r5,64
 402b654:	2909c83a 	sub	r4,r5,r4
 402b658:	4108983a 	sll	r4,r8,r4
 402b65c:	2448b03a 	or	r4,r4,r17
 402b660:	2008c03a 	cmpne	r4,r4,zero
 402b664:	3922b03a 	or	r17,r7,r4
 402b668:	0009883a 	mov	r4,zero
 402b66c:	003f8d06 	br	402b4a4 <__flash_rwdata_start+0xffffb190>
 402b670:	0007883a 	mov	r3,zero
 402b674:	003fdd06 	br	402b5ec <__flash_rwdata_start+0xffffb2d8>
 402b678:	0009883a 	mov	r4,zero
 402b67c:	003ff706 	br	402b65c <__flash_rwdata_start+0xffffb348>

0402b680 <__divdf3>:
 402b680:	defff004 	addi	sp,sp,-64
 402b684:	dc800815 	stw	r18,32(sp)
 402b688:	2824d53a 	srli	r18,r5,20
 402b68c:	dd800c15 	stw	r22,48(sp)
 402b690:	282cd7fa 	srli	r22,r5,31
 402b694:	dc000615 	stw	r16,24(sp)
 402b698:	04000434 	movhi	r16,16
 402b69c:	843fffc4 	addi	r16,r16,-1
 402b6a0:	dfc00f15 	stw	ra,60(sp)
 402b6a4:	df000e15 	stw	fp,56(sp)
 402b6a8:	ddc00d15 	stw	r23,52(sp)
 402b6ac:	dd400b15 	stw	r21,44(sp)
 402b6b0:	dd000a15 	stw	r20,40(sp)
 402b6b4:	dcc00915 	stw	r19,36(sp)
 402b6b8:	dc400715 	stw	r17,28(sp)
 402b6bc:	9481ffcc 	andi	r18,r18,2047
 402b6c0:	2c20703a 	and	r16,r5,r16
 402b6c4:	b2003fcc 	andi	r8,r22,255
 402b6c8:	90006126 	beq	r18,zero,402b850 <__divdf3+0x1d0>
 402b6cc:	0081ffc4 	movi	r2,2047
 402b6d0:	202b883a 	mov	r21,r4
 402b6d4:	90803726 	beq	r18,r2,402b7b4 <__divdf3+0x134>
 402b6d8:	80800434 	orhi	r2,r16,16
 402b6dc:	100490fa 	slli	r2,r2,3
 402b6e0:	2020d77a 	srli	r16,r4,29
 402b6e4:	202a90fa 	slli	r21,r4,3
 402b6e8:	94bf0044 	addi	r18,r18,-1023
 402b6ec:	80a0b03a 	or	r16,r16,r2
 402b6f0:	0013883a 	mov	r9,zero
 402b6f4:	000b883a 	mov	r5,zero
 402b6f8:	3806d53a 	srli	r3,r7,20
 402b6fc:	382ed7fa 	srli	r23,r7,31
 402b700:	04400434 	movhi	r17,16
 402b704:	8c7fffc4 	addi	r17,r17,-1
 402b708:	18c1ffcc 	andi	r3,r3,2047
 402b70c:	3029883a 	mov	r20,r6
 402b710:	3c62703a 	and	r17,r7,r17
 402b714:	bf003fcc 	andi	fp,r23,255
 402b718:	18006e26 	beq	r3,zero,402b8d4 <__divdf3+0x254>
 402b71c:	0081ffc4 	movi	r2,2047
 402b720:	18806626 	beq	r3,r2,402b8bc <__divdf3+0x23c>
 402b724:	88800434 	orhi	r2,r17,16
 402b728:	100490fa 	slli	r2,r2,3
 402b72c:	3022d77a 	srli	r17,r6,29
 402b730:	302890fa 	slli	r20,r6,3
 402b734:	18ff0044 	addi	r3,r3,-1023
 402b738:	88a2b03a 	or	r17,r17,r2
 402b73c:	000f883a 	mov	r7,zero
 402b740:	b5e6f03a 	xor	r19,r22,r23
 402b744:	3a4cb03a 	or	r6,r7,r9
 402b748:	008003c4 	movi	r2,15
 402b74c:	9809883a 	mov	r4,r19
 402b750:	90c7c83a 	sub	r3,r18,r3
 402b754:	9cc03fcc 	andi	r19,r19,255
 402b758:	11809636 	bltu	r2,r6,402b9b4 <__divdf3+0x334>
 402b75c:	300c90ba 	slli	r6,r6,2
 402b760:	008100f4 	movhi	r2,1027
 402b764:	10addd04 	addi	r2,r2,-18572
 402b768:	308d883a 	add	r6,r6,r2
 402b76c:	30800017 	ldw	r2,0(r6)
 402b770:	1000683a 	jmp	r2
 402b774:	0402b9b4 	movhi	r16,2790
 402b778:	0402b7ec 	andhi	r16,zero,2783
 402b77c:	0402b9a4 	muli	r16,zero,2790
 402b780:	0402b7e0 	cmpeqi	r16,zero,2783
 402b784:	0402b9a4 	muli	r16,zero,2790
 402b788:	0402b978 	rdprs	r16,zero,2789
 402b78c:	0402b9a4 	muli	r16,zero,2790
 402b790:	0402b7e0 	cmpeqi	r16,zero,2783
 402b794:	0402b7ec 	andhi	r16,zero,2783
 402b798:	0402b7ec 	andhi	r16,zero,2783
 402b79c:	0402b978 	rdprs	r16,zero,2789
 402b7a0:	0402b7e0 	cmpeqi	r16,zero,2783
 402b7a4:	0402b7d0 	cmplti	r16,zero,2783
 402b7a8:	0402b7d0 	cmplti	r16,zero,2783
 402b7ac:	0402b7d0 	cmplti	r16,zero,2783
 402b7b0:	0402bd3c 	xorhi	r16,zero,2804
 402b7b4:	2404b03a 	or	r2,r4,r16
 402b7b8:	10006c1e 	bne	r2,zero,402b96c <__divdf3+0x2ec>
 402b7bc:	02400204 	movi	r9,8
 402b7c0:	0021883a 	mov	r16,zero
 402b7c4:	002b883a 	mov	r21,zero
 402b7c8:	01400084 	movi	r5,2
 402b7cc:	003fca06 	br	402b6f8 <__flash_rwdata_start+0xffffb3e4>
 402b7d0:	8023883a 	mov	r17,r16
 402b7d4:	a829883a 	mov	r20,r21
 402b7d8:	4039883a 	mov	fp,r8
 402b7dc:	280f883a 	mov	r7,r5
 402b7e0:	00800084 	movi	r2,2
 402b7e4:	3881601e 	bne	r7,r2,402bd68 <__divdf3+0x6e8>
 402b7e8:	e027883a 	mov	r19,fp
 402b7ec:	9900004c 	andi	r4,r19,1
 402b7f0:	0081ffc4 	movi	r2,2047
 402b7f4:	0021883a 	mov	r16,zero
 402b7f8:	002b883a 	mov	r21,zero
 402b7fc:	1004953a 	slli	r2,r2,20
 402b800:	20c03fcc 	andi	r3,r4,255
 402b804:	01400434 	movhi	r5,16
 402b808:	297fffc4 	addi	r5,r5,-1
 402b80c:	180697fa 	slli	r3,r3,31
 402b810:	8160703a 	and	r16,r16,r5
 402b814:	80a0b03a 	or	r16,r16,r2
 402b818:	80c6b03a 	or	r3,r16,r3
 402b81c:	a805883a 	mov	r2,r21
 402b820:	dfc00f17 	ldw	ra,60(sp)
 402b824:	df000e17 	ldw	fp,56(sp)
 402b828:	ddc00d17 	ldw	r23,52(sp)
 402b82c:	dd800c17 	ldw	r22,48(sp)
 402b830:	dd400b17 	ldw	r21,44(sp)
 402b834:	dd000a17 	ldw	r20,40(sp)
 402b838:	dcc00917 	ldw	r19,36(sp)
 402b83c:	dc800817 	ldw	r18,32(sp)
 402b840:	dc400717 	ldw	r17,28(sp)
 402b844:	dc000617 	ldw	r16,24(sp)
 402b848:	dec01004 	addi	sp,sp,64
 402b84c:	f800283a 	ret
 402b850:	2404b03a 	or	r2,r4,r16
 402b854:	2023883a 	mov	r17,r4
 402b858:	10003f26 	beq	r2,zero,402b958 <__divdf3+0x2d8>
 402b85c:	80015e26 	beq	r16,zero,402bdd8 <__divdf3+0x758>
 402b860:	8009883a 	mov	r4,r16
 402b864:	d9800215 	stw	r6,8(sp)
 402b868:	d9c00515 	stw	r7,20(sp)
 402b86c:	da000415 	stw	r8,16(sp)
 402b870:	402d6140 	call	402d614 <__clzsi2>
 402b874:	d9800217 	ldw	r6,8(sp)
 402b878:	d9c00517 	ldw	r7,20(sp)
 402b87c:	da000417 	ldw	r8,16(sp)
 402b880:	113ffd44 	addi	r4,r2,-11
 402b884:	00c00704 	movi	r3,28
 402b888:	19014f16 	blt	r3,r4,402bdc8 <__divdf3+0x748>
 402b88c:	00c00744 	movi	r3,29
 402b890:	157ffe04 	addi	r21,r2,-8
 402b894:	1907c83a 	sub	r3,r3,r4
 402b898:	8560983a 	sll	r16,r16,r21
 402b89c:	88c6d83a 	srl	r3,r17,r3
 402b8a0:	8d6a983a 	sll	r21,r17,r21
 402b8a4:	1c20b03a 	or	r16,r3,r16
 402b8a8:	1080fcc4 	addi	r2,r2,1011
 402b8ac:	00a5c83a 	sub	r18,zero,r2
 402b8b0:	0013883a 	mov	r9,zero
 402b8b4:	000b883a 	mov	r5,zero
 402b8b8:	003f8f06 	br	402b6f8 <__flash_rwdata_start+0xffffb3e4>
 402b8bc:	3444b03a 	or	r2,r6,r17
 402b8c0:	1000231e 	bne	r2,zero,402b950 <__divdf3+0x2d0>
 402b8c4:	0023883a 	mov	r17,zero
 402b8c8:	0029883a 	mov	r20,zero
 402b8cc:	01c00084 	movi	r7,2
 402b8d0:	003f9b06 	br	402b740 <__flash_rwdata_start+0xffffb42c>
 402b8d4:	3444b03a 	or	r2,r6,r17
 402b8d8:	10001926 	beq	r2,zero,402b940 <__divdf3+0x2c0>
 402b8dc:	88014b26 	beq	r17,zero,402be0c <__divdf3+0x78c>
 402b8e0:	8809883a 	mov	r4,r17
 402b8e4:	d9400115 	stw	r5,4(sp)
 402b8e8:	d9800215 	stw	r6,8(sp)
 402b8ec:	da000415 	stw	r8,16(sp)
 402b8f0:	da400315 	stw	r9,12(sp)
 402b8f4:	402d6140 	call	402d614 <__clzsi2>
 402b8f8:	d9400117 	ldw	r5,4(sp)
 402b8fc:	d9800217 	ldw	r6,8(sp)
 402b900:	da000417 	ldw	r8,16(sp)
 402b904:	da400317 	ldw	r9,12(sp)
 402b908:	113ffd44 	addi	r4,r2,-11
 402b90c:	00c00704 	movi	r3,28
 402b910:	19013a16 	blt	r3,r4,402bdfc <__divdf3+0x77c>
 402b914:	00c00744 	movi	r3,29
 402b918:	153ffe04 	addi	r20,r2,-8
 402b91c:	1907c83a 	sub	r3,r3,r4
 402b920:	8d22983a 	sll	r17,r17,r20
 402b924:	30c6d83a 	srl	r3,r6,r3
 402b928:	3528983a 	sll	r20,r6,r20
 402b92c:	1c62b03a 	or	r17,r3,r17
 402b930:	1080fcc4 	addi	r2,r2,1011
 402b934:	0087c83a 	sub	r3,zero,r2
 402b938:	000f883a 	mov	r7,zero
 402b93c:	003f8006 	br	402b740 <__flash_rwdata_start+0xffffb42c>
 402b940:	0023883a 	mov	r17,zero
 402b944:	0029883a 	mov	r20,zero
 402b948:	01c00044 	movi	r7,1
 402b94c:	003f7c06 	br	402b740 <__flash_rwdata_start+0xffffb42c>
 402b950:	01c000c4 	movi	r7,3
 402b954:	003f7a06 	br	402b740 <__flash_rwdata_start+0xffffb42c>
 402b958:	02400104 	movi	r9,4
 402b95c:	0021883a 	mov	r16,zero
 402b960:	002b883a 	mov	r21,zero
 402b964:	01400044 	movi	r5,1
 402b968:	003f6306 	br	402b6f8 <__flash_rwdata_start+0xffffb3e4>
 402b96c:	02400304 	movi	r9,12
 402b970:	014000c4 	movi	r5,3
 402b974:	003f6006 	br	402b6f8 <__flash_rwdata_start+0xffffb3e4>
 402b978:	04000434 	movhi	r16,16
 402b97c:	0009883a 	mov	r4,zero
 402b980:	843fffc4 	addi	r16,r16,-1
 402b984:	057fffc4 	movi	r21,-1
 402b988:	0081ffc4 	movi	r2,2047
 402b98c:	003f9b06 	br	402b7fc <__flash_rwdata_start+0xffffb4e8>
 402b990:	00c00044 	movi	r3,1
 402b994:	1887c83a 	sub	r3,r3,r2
 402b998:	01000e04 	movi	r4,56
 402b99c:	20c1530e 	bge	r4,r3,402beec <__divdf3+0x86c>
 402b9a0:	9900004c 	andi	r4,r19,1
 402b9a4:	0005883a 	mov	r2,zero
 402b9a8:	0021883a 	mov	r16,zero
 402b9ac:	002b883a 	mov	r21,zero
 402b9b0:	003f9206 	br	402b7fc <__flash_rwdata_start+0xffffb4e8>
 402b9b4:	8c012e36 	bltu	r17,r16,402be70 <__divdf3+0x7f0>
 402b9b8:	84412c26 	beq	r16,r17,402be6c <__divdf3+0x7ec>
 402b9bc:	a82f883a 	mov	r23,r21
 402b9c0:	18ffffc4 	addi	r3,r3,-1
 402b9c4:	002b883a 	mov	r21,zero
 402b9c8:	a004d63a 	srli	r2,r20,24
 402b9cc:	8822923a 	slli	r17,r17,8
 402b9d0:	a028923a 	slli	r20,r20,8
 402b9d4:	8009883a 	mov	r4,r16
 402b9d8:	88acb03a 	or	r22,r17,r2
 402b9dc:	dd000015 	stw	r20,0(sp)
 402b9e0:	b028d43a 	srli	r20,r22,16
 402b9e4:	d8c00215 	stw	r3,8(sp)
 402b9e8:	b4bfffcc 	andi	r18,r22,65535
 402b9ec:	a00b883a 	mov	r5,r20
 402b9f0:	402077c0 	call	402077c <__udivsi3>
 402b9f4:	100b883a 	mov	r5,r2
 402b9f8:	9009883a 	mov	r4,r18
 402b9fc:	1023883a 	mov	r17,r2
 402ba00:	40208380 	call	4020838 <__mulsi3>
 402ba04:	8009883a 	mov	r4,r16
 402ba08:	a00b883a 	mov	r5,r20
 402ba0c:	1039883a 	mov	fp,r2
 402ba10:	40207e00 	call	40207e0 <__umodsi3>
 402ba14:	1004943a 	slli	r2,r2,16
 402ba18:	b808d43a 	srli	r4,r23,16
 402ba1c:	d8c00217 	ldw	r3,8(sp)
 402ba20:	2084b03a 	or	r2,r4,r2
 402ba24:	1700062e 	bgeu	r2,fp,402ba40 <__divdf3+0x3c0>
 402ba28:	1585883a 	add	r2,r2,r22
 402ba2c:	893fffc4 	addi	r4,r17,-1
 402ba30:	15811d36 	bltu	r2,r22,402bea8 <__divdf3+0x828>
 402ba34:	17011c2e 	bgeu	r2,fp,402bea8 <__divdf3+0x828>
 402ba38:	8c7fff84 	addi	r17,r17,-2
 402ba3c:	1585883a 	add	r2,r2,r22
 402ba40:	1739c83a 	sub	fp,r2,fp
 402ba44:	a00b883a 	mov	r5,r20
 402ba48:	e009883a 	mov	r4,fp
 402ba4c:	d8c00215 	stw	r3,8(sp)
 402ba50:	402077c0 	call	402077c <__udivsi3>
 402ba54:	100b883a 	mov	r5,r2
 402ba58:	9009883a 	mov	r4,r18
 402ba5c:	1021883a 	mov	r16,r2
 402ba60:	40208380 	call	4020838 <__mulsi3>
 402ba64:	a00b883a 	mov	r5,r20
 402ba68:	e009883a 	mov	r4,fp
 402ba6c:	d8800415 	stw	r2,16(sp)
 402ba70:	40207e00 	call	40207e0 <__umodsi3>
 402ba74:	1004943a 	slli	r2,r2,16
 402ba78:	da000417 	ldw	r8,16(sp)
 402ba7c:	bdffffcc 	andi	r23,r23,65535
 402ba80:	b884b03a 	or	r2,r23,r2
 402ba84:	d8c00217 	ldw	r3,8(sp)
 402ba88:	1200062e 	bgeu	r2,r8,402baa4 <__divdf3+0x424>
 402ba8c:	1585883a 	add	r2,r2,r22
 402ba90:	813fffc4 	addi	r4,r16,-1
 402ba94:	15810236 	bltu	r2,r22,402bea0 <__divdf3+0x820>
 402ba98:	1201012e 	bgeu	r2,r8,402bea0 <__divdf3+0x820>
 402ba9c:	843fff84 	addi	r16,r16,-2
 402baa0:	1585883a 	add	r2,r2,r22
 402baa4:	8822943a 	slli	r17,r17,16
 402baa8:	d9800017 	ldw	r6,0(sp)
 402baac:	1211c83a 	sub	r8,r2,r8
 402bab0:	8c22b03a 	or	r17,r17,r16
 402bab4:	373fffcc 	andi	fp,r6,65535
 402bab8:	8abfffcc 	andi	r10,r17,65535
 402babc:	8820d43a 	srli	r16,r17,16
 402bac0:	5009883a 	mov	r4,r10
 402bac4:	e00b883a 	mov	r5,fp
 402bac8:	302ed43a 	srli	r23,r6,16
 402bacc:	d8c00215 	stw	r3,8(sp)
 402bad0:	da000415 	stw	r8,16(sp)
 402bad4:	da800115 	stw	r10,4(sp)
 402bad8:	40208380 	call	4020838 <__mulsi3>
 402badc:	800b883a 	mov	r5,r16
 402bae0:	e009883a 	mov	r4,fp
 402bae4:	d8800515 	stw	r2,20(sp)
 402bae8:	40208380 	call	4020838 <__mulsi3>
 402baec:	8009883a 	mov	r4,r16
 402baf0:	b80b883a 	mov	r5,r23
 402baf4:	d8800315 	stw	r2,12(sp)
 402baf8:	40208380 	call	4020838 <__mulsi3>
 402bafc:	da800117 	ldw	r10,4(sp)
 402bb00:	b80b883a 	mov	r5,r23
 402bb04:	1021883a 	mov	r16,r2
 402bb08:	5009883a 	mov	r4,r10
 402bb0c:	40208380 	call	4020838 <__mulsi3>
 402bb10:	d9c00517 	ldw	r7,20(sp)
 402bb14:	da400317 	ldw	r9,12(sp)
 402bb18:	d8c00217 	ldw	r3,8(sp)
 402bb1c:	3808d43a 	srli	r4,r7,16
 402bb20:	1245883a 	add	r2,r2,r9
 402bb24:	da000417 	ldw	r8,16(sp)
 402bb28:	2085883a 	add	r2,r4,r2
 402bb2c:	1240022e 	bgeu	r2,r9,402bb38 <__divdf3+0x4b8>
 402bb30:	01000074 	movhi	r4,1
 402bb34:	8121883a 	add	r16,r16,r4
 402bb38:	1008d43a 	srli	r4,r2,16
 402bb3c:	1004943a 	slli	r2,r2,16
 402bb40:	39ffffcc 	andi	r7,r7,65535
 402bb44:	2409883a 	add	r4,r4,r16
 402bb48:	11c5883a 	add	r2,r2,r7
 402bb4c:	4100bb36 	bltu	r8,r4,402be3c <__divdf3+0x7bc>
 402bb50:	4100d726 	beq	r8,r4,402beb0 <__divdf3+0x830>
 402bb54:	4109c83a 	sub	r4,r8,r4
 402bb58:	a8a1c83a 	sub	r16,r21,r2
 402bb5c:	ac2b803a 	cmpltu	r21,r21,r16
 402bb60:	256bc83a 	sub	r21,r4,r21
 402bb64:	b540d926 	beq	r22,r21,402becc <__divdf3+0x84c>
 402bb68:	a00b883a 	mov	r5,r20
 402bb6c:	a809883a 	mov	r4,r21
 402bb70:	d8c00215 	stw	r3,8(sp)
 402bb74:	402077c0 	call	402077c <__udivsi3>
 402bb78:	100b883a 	mov	r5,r2
 402bb7c:	9009883a 	mov	r4,r18
 402bb80:	d8800515 	stw	r2,20(sp)
 402bb84:	40208380 	call	4020838 <__mulsi3>
 402bb88:	a809883a 	mov	r4,r21
 402bb8c:	a00b883a 	mov	r5,r20
 402bb90:	d8800415 	stw	r2,16(sp)
 402bb94:	40207e00 	call	40207e0 <__umodsi3>
 402bb98:	1004943a 	slli	r2,r2,16
 402bb9c:	8008d43a 	srli	r4,r16,16
 402bba0:	da000417 	ldw	r8,16(sp)
 402bba4:	d8c00217 	ldw	r3,8(sp)
 402bba8:	2084b03a 	or	r2,r4,r2
 402bbac:	d9c00517 	ldw	r7,20(sp)
 402bbb0:	1200062e 	bgeu	r2,r8,402bbcc <__divdf3+0x54c>
 402bbb4:	1585883a 	add	r2,r2,r22
 402bbb8:	393fffc4 	addi	r4,r7,-1
 402bbbc:	1580c536 	bltu	r2,r22,402bed4 <__divdf3+0x854>
 402bbc0:	1200c42e 	bgeu	r2,r8,402bed4 <__divdf3+0x854>
 402bbc4:	39ffff84 	addi	r7,r7,-2
 402bbc8:	1585883a 	add	r2,r2,r22
 402bbcc:	122bc83a 	sub	r21,r2,r8
 402bbd0:	a00b883a 	mov	r5,r20
 402bbd4:	a809883a 	mov	r4,r21
 402bbd8:	d8c00215 	stw	r3,8(sp)
 402bbdc:	d9c00515 	stw	r7,20(sp)
 402bbe0:	402077c0 	call	402077c <__udivsi3>
 402bbe4:	9009883a 	mov	r4,r18
 402bbe8:	100b883a 	mov	r5,r2
 402bbec:	d8800415 	stw	r2,16(sp)
 402bbf0:	40208380 	call	4020838 <__mulsi3>
 402bbf4:	a809883a 	mov	r4,r21
 402bbf8:	a00b883a 	mov	r5,r20
 402bbfc:	1025883a 	mov	r18,r2
 402bc00:	40207e00 	call	40207e0 <__umodsi3>
 402bc04:	1004943a 	slli	r2,r2,16
 402bc08:	813fffcc 	andi	r4,r16,65535
 402bc0c:	d8c00217 	ldw	r3,8(sp)
 402bc10:	20a0b03a 	or	r16,r4,r2
 402bc14:	d9c00517 	ldw	r7,20(sp)
 402bc18:	da000417 	ldw	r8,16(sp)
 402bc1c:	8480062e 	bgeu	r16,r18,402bc38 <__divdf3+0x5b8>
 402bc20:	85a1883a 	add	r16,r16,r22
 402bc24:	40bfffc4 	addi	r2,r8,-1
 402bc28:	8580ac36 	bltu	r16,r22,402bedc <__divdf3+0x85c>
 402bc2c:	8480ab2e 	bgeu	r16,r18,402bedc <__divdf3+0x85c>
 402bc30:	423fff84 	addi	r8,r8,-2
 402bc34:	85a1883a 	add	r16,r16,r22
 402bc38:	3804943a 	slli	r2,r7,16
 402bc3c:	84a1c83a 	sub	r16,r16,r18
 402bc40:	e009883a 	mov	r4,fp
 402bc44:	1228b03a 	or	r20,r2,r8
 402bc48:	a1ffffcc 	andi	r7,r20,65535
 402bc4c:	a024d43a 	srli	r18,r20,16
 402bc50:	380b883a 	mov	r5,r7
 402bc54:	d8c00215 	stw	r3,8(sp)
 402bc58:	d9c00515 	stw	r7,20(sp)
 402bc5c:	40208380 	call	4020838 <__mulsi3>
 402bc60:	900b883a 	mov	r5,r18
 402bc64:	e009883a 	mov	r4,fp
 402bc68:	102b883a 	mov	r21,r2
 402bc6c:	40208380 	call	4020838 <__mulsi3>
 402bc70:	900b883a 	mov	r5,r18
 402bc74:	b809883a 	mov	r4,r23
 402bc78:	1039883a 	mov	fp,r2
 402bc7c:	40208380 	call	4020838 <__mulsi3>
 402bc80:	d9c00517 	ldw	r7,20(sp)
 402bc84:	b80b883a 	mov	r5,r23
 402bc88:	1025883a 	mov	r18,r2
 402bc8c:	3809883a 	mov	r4,r7
 402bc90:	40208380 	call	4020838 <__mulsi3>
 402bc94:	a808d43a 	srli	r4,r21,16
 402bc98:	1705883a 	add	r2,r2,fp
 402bc9c:	d8c00217 	ldw	r3,8(sp)
 402bca0:	2085883a 	add	r2,r4,r2
 402bca4:	1700022e 	bgeu	r2,fp,402bcb0 <__divdf3+0x630>
 402bca8:	01000074 	movhi	r4,1
 402bcac:	9125883a 	add	r18,r18,r4
 402bcb0:	1008d43a 	srli	r4,r2,16
 402bcb4:	1004943a 	slli	r2,r2,16
 402bcb8:	ad7fffcc 	andi	r21,r21,65535
 402bcbc:	2489883a 	add	r4,r4,r18
 402bcc0:	1545883a 	add	r2,r2,r21
 402bcc4:	81003836 	bltu	r16,r4,402bda8 <__divdf3+0x728>
 402bcc8:	81003626 	beq	r16,r4,402bda4 <__divdf3+0x724>
 402bccc:	a5000054 	ori	r20,r20,1
 402bcd0:	1880ffc4 	addi	r2,r3,1023
 402bcd4:	00bf2e0e 	bge	zero,r2,402b990 <__flash_rwdata_start+0xffffb67c>
 402bcd8:	a10001cc 	andi	r4,r20,7
 402bcdc:	20000726 	beq	r4,zero,402bcfc <__divdf3+0x67c>
 402bce0:	a10003cc 	andi	r4,r20,15
 402bce4:	01400104 	movi	r5,4
 402bce8:	21400426 	beq	r4,r5,402bcfc <__divdf3+0x67c>
 402bcec:	a149883a 	add	r4,r20,r5
 402bcf0:	2529803a 	cmpltu	r20,r4,r20
 402bcf4:	8d23883a 	add	r17,r17,r20
 402bcf8:	2029883a 	mov	r20,r4
 402bcfc:	8900402c 	andhi	r4,r17,256
 402bd00:	20000426 	beq	r4,zero,402bd14 <__divdf3+0x694>
 402bd04:	18810004 	addi	r2,r3,1024
 402bd08:	00ffc034 	movhi	r3,65280
 402bd0c:	18ffffc4 	addi	r3,r3,-1
 402bd10:	88e2703a 	and	r17,r17,r3
 402bd14:	00c1ff84 	movi	r3,2046
 402bd18:	18beb416 	blt	r3,r2,402b7ec <__flash_rwdata_start+0xffffb4d8>
 402bd1c:	a028d0fa 	srli	r20,r20,3
 402bd20:	882a977a 	slli	r21,r17,29
 402bd24:	8820927a 	slli	r16,r17,9
 402bd28:	1081ffcc 	andi	r2,r2,2047
 402bd2c:	ad2ab03a 	or	r21,r21,r20
 402bd30:	8020d33a 	srli	r16,r16,12
 402bd34:	9900004c 	andi	r4,r19,1
 402bd38:	003eb006 	br	402b7fc <__flash_rwdata_start+0xffffb4e8>
 402bd3c:	8080022c 	andhi	r2,r16,8
 402bd40:	10001226 	beq	r2,zero,402bd8c <__divdf3+0x70c>
 402bd44:	8880022c 	andhi	r2,r17,8
 402bd48:	1000101e 	bne	r2,zero,402bd8c <__divdf3+0x70c>
 402bd4c:	00800434 	movhi	r2,16
 402bd50:	8c000234 	orhi	r16,r17,8
 402bd54:	10bfffc4 	addi	r2,r2,-1
 402bd58:	b809883a 	mov	r4,r23
 402bd5c:	80a0703a 	and	r16,r16,r2
 402bd60:	a02b883a 	mov	r21,r20
 402bd64:	003f0806 	br	402b988 <__flash_rwdata_start+0xffffb674>
 402bd68:	008000c4 	movi	r2,3
 402bd6c:	3880b126 	beq	r7,r2,402c034 <__divdf3+0x9b4>
 402bd70:	00800044 	movi	r2,1
 402bd74:	38805b1e 	bne	r7,r2,402bee4 <__divdf3+0x864>
 402bd78:	e009883a 	mov	r4,fp
 402bd7c:	0005883a 	mov	r2,zero
 402bd80:	0021883a 	mov	r16,zero
 402bd84:	002b883a 	mov	r21,zero
 402bd88:	003e9c06 	br	402b7fc <__flash_rwdata_start+0xffffb4e8>
 402bd8c:	00800434 	movhi	r2,16
 402bd90:	84000234 	orhi	r16,r16,8
 402bd94:	10bfffc4 	addi	r2,r2,-1
 402bd98:	b009883a 	mov	r4,r22
 402bd9c:	80a0703a 	and	r16,r16,r2
 402bda0:	003ef906 	br	402b988 <__flash_rwdata_start+0xffffb674>
 402bda4:	103fca26 	beq	r2,zero,402bcd0 <__flash_rwdata_start+0xffffb9bc>
 402bda8:	b421883a 	add	r16,r22,r16
 402bdac:	a17fffc4 	addi	r5,r20,-1
 402bdb0:	8580422e 	bgeu	r16,r22,402bebc <__divdf3+0x83c>
 402bdb4:	2829883a 	mov	r20,r5
 402bdb8:	813fc41e 	bne	r16,r4,402bccc <__flash_rwdata_start+0xffffb9b8>
 402bdbc:	d9800017 	ldw	r6,0(sp)
 402bdc0:	30bfc21e 	bne	r6,r2,402bccc <__flash_rwdata_start+0xffffb9b8>
 402bdc4:	003fc206 	br	402bcd0 <__flash_rwdata_start+0xffffb9bc>
 402bdc8:	143ff604 	addi	r16,r2,-40
 402bdcc:	8c20983a 	sll	r16,r17,r16
 402bdd0:	002b883a 	mov	r21,zero
 402bdd4:	003eb406 	br	402b8a8 <__flash_rwdata_start+0xffffb594>
 402bdd8:	d9800215 	stw	r6,8(sp)
 402bddc:	d9c00515 	stw	r7,20(sp)
 402bde0:	da000415 	stw	r8,16(sp)
 402bde4:	402d6140 	call	402d614 <__clzsi2>
 402bde8:	10800804 	addi	r2,r2,32
 402bdec:	da000417 	ldw	r8,16(sp)
 402bdf0:	d9c00517 	ldw	r7,20(sp)
 402bdf4:	d9800217 	ldw	r6,8(sp)
 402bdf8:	003ea106 	br	402b880 <__flash_rwdata_start+0xffffb56c>
 402bdfc:	147ff604 	addi	r17,r2,-40
 402be00:	3462983a 	sll	r17,r6,r17
 402be04:	0029883a 	mov	r20,zero
 402be08:	003ec906 	br	402b930 <__flash_rwdata_start+0xffffb61c>
 402be0c:	3009883a 	mov	r4,r6
 402be10:	d9400115 	stw	r5,4(sp)
 402be14:	d9800215 	stw	r6,8(sp)
 402be18:	da000415 	stw	r8,16(sp)
 402be1c:	da400315 	stw	r9,12(sp)
 402be20:	402d6140 	call	402d614 <__clzsi2>
 402be24:	10800804 	addi	r2,r2,32
 402be28:	da400317 	ldw	r9,12(sp)
 402be2c:	da000417 	ldw	r8,16(sp)
 402be30:	d9800217 	ldw	r6,8(sp)
 402be34:	d9400117 	ldw	r5,4(sp)
 402be38:	003eb306 	br	402b908 <__flash_rwdata_start+0xffffb5f4>
 402be3c:	d9800017 	ldw	r6,0(sp)
 402be40:	a9ab883a 	add	r21,r21,r6
 402be44:	a98b803a 	cmpltu	r5,r21,r6
 402be48:	2d8b883a 	add	r5,r5,r22
 402be4c:	2a11883a 	add	r8,r5,r8
 402be50:	897fffc4 	addi	r5,r17,-1
 402be54:	b2000c2e 	bgeu	r22,r8,402be88 <__divdf3+0x808>
 402be58:	41003f36 	bltu	r8,r4,402bf58 <__divdf3+0x8d8>
 402be5c:	22006c26 	beq	r4,r8,402c010 <__divdf3+0x990>
 402be60:	4109c83a 	sub	r4,r8,r4
 402be64:	2823883a 	mov	r17,r5
 402be68:	003f3b06 	br	402bb58 <__flash_rwdata_start+0xffffb844>
 402be6c:	ad3ed336 	bltu	r21,r20,402b9bc <__flash_rwdata_start+0xffffb6a8>
 402be70:	a804d07a 	srli	r2,r21,1
 402be74:	802e97fa 	slli	r23,r16,31
 402be78:	a82a97fa 	slli	r21,r21,31
 402be7c:	8020d07a 	srli	r16,r16,1
 402be80:	b8aeb03a 	or	r23,r23,r2
 402be84:	003ed006 	br	402b9c8 <__flash_rwdata_start+0xffffb6b4>
 402be88:	b23ff51e 	bne	r22,r8,402be60 <__flash_rwdata_start+0xffffbb4c>
 402be8c:	d9800017 	ldw	r6,0(sp)
 402be90:	a9bff12e 	bgeu	r21,r6,402be58 <__flash_rwdata_start+0xffffbb44>
 402be94:	b109c83a 	sub	r4,r22,r4
 402be98:	2823883a 	mov	r17,r5
 402be9c:	003f2e06 	br	402bb58 <__flash_rwdata_start+0xffffb844>
 402bea0:	2021883a 	mov	r16,r4
 402bea4:	003eff06 	br	402baa4 <__flash_rwdata_start+0xffffb790>
 402bea8:	2023883a 	mov	r17,r4
 402beac:	003ee406 	br	402ba40 <__flash_rwdata_start+0xffffb72c>
 402beb0:	a8bfe236 	bltu	r21,r2,402be3c <__flash_rwdata_start+0xffffbb28>
 402beb4:	0009883a 	mov	r4,zero
 402beb8:	003f2706 	br	402bb58 <__flash_rwdata_start+0xffffb844>
 402bebc:	81002d36 	bltu	r16,r4,402bf74 <__divdf3+0x8f4>
 402bec0:	24005626 	beq	r4,r16,402c01c <__divdf3+0x99c>
 402bec4:	2829883a 	mov	r20,r5
 402bec8:	003f8006 	br	402bccc <__flash_rwdata_start+0xffffb9b8>
 402becc:	053fffc4 	movi	r20,-1
 402bed0:	003f7f06 	br	402bcd0 <__flash_rwdata_start+0xffffb9bc>
 402bed4:	200f883a 	mov	r7,r4
 402bed8:	003f3c06 	br	402bbcc <__flash_rwdata_start+0xffffb8b8>
 402bedc:	1011883a 	mov	r8,r2
 402bee0:	003f5506 	br	402bc38 <__flash_rwdata_start+0xffffb924>
 402bee4:	e027883a 	mov	r19,fp
 402bee8:	003f7906 	br	402bcd0 <__flash_rwdata_start+0xffffb9bc>
 402beec:	010007c4 	movi	r4,31
 402bef0:	20c02816 	blt	r4,r3,402bf94 <__divdf3+0x914>
 402bef4:	00800804 	movi	r2,32
 402bef8:	10c5c83a 	sub	r2,r2,r3
 402befc:	888a983a 	sll	r5,r17,r2
 402bf00:	a0c8d83a 	srl	r4,r20,r3
 402bf04:	a084983a 	sll	r2,r20,r2
 402bf08:	88e2d83a 	srl	r17,r17,r3
 402bf0c:	2906b03a 	or	r3,r5,r4
 402bf10:	1004c03a 	cmpne	r2,r2,zero
 402bf14:	1886b03a 	or	r3,r3,r2
 402bf18:	188001cc 	andi	r2,r3,7
 402bf1c:	10000726 	beq	r2,zero,402bf3c <__divdf3+0x8bc>
 402bf20:	188003cc 	andi	r2,r3,15
 402bf24:	01000104 	movi	r4,4
 402bf28:	11000426 	beq	r2,r4,402bf3c <__divdf3+0x8bc>
 402bf2c:	1805883a 	mov	r2,r3
 402bf30:	10c00104 	addi	r3,r2,4
 402bf34:	1885803a 	cmpltu	r2,r3,r2
 402bf38:	88a3883a 	add	r17,r17,r2
 402bf3c:	8880202c 	andhi	r2,r17,128
 402bf40:	10002926 	beq	r2,zero,402bfe8 <__divdf3+0x968>
 402bf44:	9900004c 	andi	r4,r19,1
 402bf48:	00800044 	movi	r2,1
 402bf4c:	0021883a 	mov	r16,zero
 402bf50:	002b883a 	mov	r21,zero
 402bf54:	003e2906 	br	402b7fc <__flash_rwdata_start+0xffffb4e8>
 402bf58:	d9800017 	ldw	r6,0(sp)
 402bf5c:	8c7fff84 	addi	r17,r17,-2
 402bf60:	a9ab883a 	add	r21,r21,r6
 402bf64:	a98b803a 	cmpltu	r5,r21,r6
 402bf68:	2d8b883a 	add	r5,r5,r22
 402bf6c:	2a11883a 	add	r8,r5,r8
 402bf70:	003ef806 	br	402bb54 <__flash_rwdata_start+0xffffb840>
 402bf74:	d9800017 	ldw	r6,0(sp)
 402bf78:	318f883a 	add	r7,r6,r6
 402bf7c:	398b803a 	cmpltu	r5,r7,r6
 402bf80:	2d8d883a 	add	r6,r5,r22
 402bf84:	81a1883a 	add	r16,r16,r6
 402bf88:	a17fff84 	addi	r5,r20,-2
 402bf8c:	d9c00015 	stw	r7,0(sp)
 402bf90:	003f8806 	br	402bdb4 <__flash_rwdata_start+0xffffbaa0>
 402bf94:	013ff844 	movi	r4,-31
 402bf98:	2085c83a 	sub	r2,r4,r2
 402bf9c:	8888d83a 	srl	r4,r17,r2
 402bfa0:	00800804 	movi	r2,32
 402bfa4:	18802126 	beq	r3,r2,402c02c <__divdf3+0x9ac>
 402bfa8:	04001004 	movi	r16,64
 402bfac:	80c7c83a 	sub	r3,r16,r3
 402bfb0:	88e0983a 	sll	r16,r17,r3
 402bfb4:	8504b03a 	or	r2,r16,r20
 402bfb8:	1004c03a 	cmpne	r2,r2,zero
 402bfbc:	2084b03a 	or	r2,r4,r2
 402bfc0:	144001cc 	andi	r17,r2,7
 402bfc4:	88000d1e 	bne	r17,zero,402bffc <__divdf3+0x97c>
 402bfc8:	0021883a 	mov	r16,zero
 402bfcc:	102ad0fa 	srli	r21,r2,3
 402bfd0:	9900004c 	andi	r4,r19,1
 402bfd4:	0005883a 	mov	r2,zero
 402bfd8:	ac6ab03a 	or	r21,r21,r17
 402bfdc:	003e0706 	br	402b7fc <__flash_rwdata_start+0xffffb4e8>
 402bfe0:	1007883a 	mov	r3,r2
 402bfe4:	0023883a 	mov	r17,zero
 402bfe8:	8820927a 	slli	r16,r17,9
 402bfec:	1805883a 	mov	r2,r3
 402bff0:	8822977a 	slli	r17,r17,29
 402bff4:	8020d33a 	srli	r16,r16,12
 402bff8:	003ff406 	br	402bfcc <__flash_rwdata_start+0xffffbcb8>
 402bffc:	10c003cc 	andi	r3,r2,15
 402c000:	01000104 	movi	r4,4
 402c004:	193ff626 	beq	r3,r4,402bfe0 <__flash_rwdata_start+0xffffbccc>
 402c008:	0023883a 	mov	r17,zero
 402c00c:	003fc806 	br	402bf30 <__flash_rwdata_start+0xffffbc1c>
 402c010:	a8bfd136 	bltu	r21,r2,402bf58 <__flash_rwdata_start+0xffffbc44>
 402c014:	2823883a 	mov	r17,r5
 402c018:	003fa606 	br	402beb4 <__flash_rwdata_start+0xffffbba0>
 402c01c:	d9800017 	ldw	r6,0(sp)
 402c020:	30bfd436 	bltu	r6,r2,402bf74 <__flash_rwdata_start+0xffffbc60>
 402c024:	2829883a 	mov	r20,r5
 402c028:	003f6406 	br	402bdbc <__flash_rwdata_start+0xffffbaa8>
 402c02c:	0021883a 	mov	r16,zero
 402c030:	003fe006 	br	402bfb4 <__flash_rwdata_start+0xffffbca0>
 402c034:	00800434 	movhi	r2,16
 402c038:	8c000234 	orhi	r16,r17,8
 402c03c:	10bfffc4 	addi	r2,r2,-1
 402c040:	e009883a 	mov	r4,fp
 402c044:	80a0703a 	and	r16,r16,r2
 402c048:	a02b883a 	mov	r21,r20
 402c04c:	003e4e06 	br	402b988 <__flash_rwdata_start+0xffffb674>

0402c050 <__eqdf2>:
 402c050:	2804d53a 	srli	r2,r5,20
 402c054:	3806d53a 	srli	r3,r7,20
 402c058:	02000434 	movhi	r8,16
 402c05c:	423fffc4 	addi	r8,r8,-1
 402c060:	1081ffcc 	andi	r2,r2,2047
 402c064:	0281ffc4 	movi	r10,2047
 402c068:	2a12703a 	and	r9,r5,r8
 402c06c:	18c1ffcc 	andi	r3,r3,2047
 402c070:	3a10703a 	and	r8,r7,r8
 402c074:	280ad7fa 	srli	r5,r5,31
 402c078:	380ed7fa 	srli	r7,r7,31
 402c07c:	12801026 	beq	r2,r10,402c0c0 <__eqdf2+0x70>
 402c080:	0281ffc4 	movi	r10,2047
 402c084:	1a800a26 	beq	r3,r10,402c0b0 <__eqdf2+0x60>
 402c088:	10c00226 	beq	r2,r3,402c094 <__eqdf2+0x44>
 402c08c:	00800044 	movi	r2,1
 402c090:	f800283a 	ret
 402c094:	4a3ffd1e 	bne	r9,r8,402c08c <__flash_rwdata_start+0xffffbd78>
 402c098:	21bffc1e 	bne	r4,r6,402c08c <__flash_rwdata_start+0xffffbd78>
 402c09c:	29c00c26 	beq	r5,r7,402c0d0 <__eqdf2+0x80>
 402c0a0:	103ffa1e 	bne	r2,zero,402c08c <__flash_rwdata_start+0xffffbd78>
 402c0a4:	2244b03a 	or	r2,r4,r9
 402c0a8:	1004c03a 	cmpne	r2,r2,zero
 402c0ac:	f800283a 	ret
 402c0b0:	3214b03a 	or	r10,r6,r8
 402c0b4:	503ff426 	beq	r10,zero,402c088 <__flash_rwdata_start+0xffffbd74>
 402c0b8:	00800044 	movi	r2,1
 402c0bc:	f800283a 	ret
 402c0c0:	2254b03a 	or	r10,r4,r9
 402c0c4:	503fee26 	beq	r10,zero,402c080 <__flash_rwdata_start+0xffffbd6c>
 402c0c8:	00800044 	movi	r2,1
 402c0cc:	f800283a 	ret
 402c0d0:	0005883a 	mov	r2,zero
 402c0d4:	f800283a 	ret

0402c0d8 <__gedf2>:
 402c0d8:	2804d53a 	srli	r2,r5,20
 402c0dc:	3806d53a 	srli	r3,r7,20
 402c0e0:	02000434 	movhi	r8,16
 402c0e4:	423fffc4 	addi	r8,r8,-1
 402c0e8:	1081ffcc 	andi	r2,r2,2047
 402c0ec:	0241ffc4 	movi	r9,2047
 402c0f0:	2a14703a 	and	r10,r5,r8
 402c0f4:	18c1ffcc 	andi	r3,r3,2047
 402c0f8:	3a10703a 	and	r8,r7,r8
 402c0fc:	280ad7fa 	srli	r5,r5,31
 402c100:	380ed7fa 	srli	r7,r7,31
 402c104:	12401d26 	beq	r2,r9,402c17c <__gedf2+0xa4>
 402c108:	0241ffc4 	movi	r9,2047
 402c10c:	1a401226 	beq	r3,r9,402c158 <__gedf2+0x80>
 402c110:	1000081e 	bne	r2,zero,402c134 <__gedf2+0x5c>
 402c114:	2296b03a 	or	r11,r4,r10
 402c118:	5813003a 	cmpeq	r9,r11,zero
 402c11c:	1800091e 	bne	r3,zero,402c144 <__gedf2+0x6c>
 402c120:	3218b03a 	or	r12,r6,r8
 402c124:	6000071e 	bne	r12,zero,402c144 <__gedf2+0x6c>
 402c128:	0005883a 	mov	r2,zero
 402c12c:	5800101e 	bne	r11,zero,402c170 <__gedf2+0x98>
 402c130:	f800283a 	ret
 402c134:	18000c1e 	bne	r3,zero,402c168 <__gedf2+0x90>
 402c138:	3212b03a 	or	r9,r6,r8
 402c13c:	48000c26 	beq	r9,zero,402c170 <__gedf2+0x98>
 402c140:	0013883a 	mov	r9,zero
 402c144:	39c03fcc 	andi	r7,r7,255
 402c148:	48000826 	beq	r9,zero,402c16c <__gedf2+0x94>
 402c14c:	38000926 	beq	r7,zero,402c174 <__gedf2+0x9c>
 402c150:	00800044 	movi	r2,1
 402c154:	f800283a 	ret
 402c158:	3212b03a 	or	r9,r6,r8
 402c15c:	483fec26 	beq	r9,zero,402c110 <__flash_rwdata_start+0xffffbdfc>
 402c160:	00bfff84 	movi	r2,-2
 402c164:	f800283a 	ret
 402c168:	39c03fcc 	andi	r7,r7,255
 402c16c:	29c00626 	beq	r5,r7,402c188 <__gedf2+0xb0>
 402c170:	283ff726 	beq	r5,zero,402c150 <__flash_rwdata_start+0xffffbe3c>
 402c174:	00bfffc4 	movi	r2,-1
 402c178:	f800283a 	ret
 402c17c:	2292b03a 	or	r9,r4,r10
 402c180:	483fe126 	beq	r9,zero,402c108 <__flash_rwdata_start+0xffffbdf4>
 402c184:	003ff606 	br	402c160 <__flash_rwdata_start+0xffffbe4c>
 402c188:	18bff916 	blt	r3,r2,402c170 <__flash_rwdata_start+0xffffbe5c>
 402c18c:	10c00316 	blt	r2,r3,402c19c <__gedf2+0xc4>
 402c190:	42bff736 	bltu	r8,r10,402c170 <__flash_rwdata_start+0xffffbe5c>
 402c194:	52000326 	beq	r10,r8,402c1a4 <__gedf2+0xcc>
 402c198:	5200042e 	bgeu	r10,r8,402c1ac <__gedf2+0xd4>
 402c19c:	283fec1e 	bne	r5,zero,402c150 <__flash_rwdata_start+0xffffbe3c>
 402c1a0:	003ff406 	br	402c174 <__flash_rwdata_start+0xffffbe60>
 402c1a4:	313ff236 	bltu	r6,r4,402c170 <__flash_rwdata_start+0xffffbe5c>
 402c1a8:	21bffc36 	bltu	r4,r6,402c19c <__flash_rwdata_start+0xffffbe88>
 402c1ac:	0005883a 	mov	r2,zero
 402c1b0:	f800283a 	ret

0402c1b4 <__ledf2>:
 402c1b4:	2804d53a 	srli	r2,r5,20
 402c1b8:	3810d53a 	srli	r8,r7,20
 402c1bc:	00c00434 	movhi	r3,16
 402c1c0:	18ffffc4 	addi	r3,r3,-1
 402c1c4:	1081ffcc 	andi	r2,r2,2047
 402c1c8:	0241ffc4 	movi	r9,2047
 402c1cc:	28d4703a 	and	r10,r5,r3
 402c1d0:	4201ffcc 	andi	r8,r8,2047
 402c1d4:	38c6703a 	and	r3,r7,r3
 402c1d8:	280ad7fa 	srli	r5,r5,31
 402c1dc:	380ed7fa 	srli	r7,r7,31
 402c1e0:	12401f26 	beq	r2,r9,402c260 <__ledf2+0xac>
 402c1e4:	0241ffc4 	movi	r9,2047
 402c1e8:	42401426 	beq	r8,r9,402c23c <__ledf2+0x88>
 402c1ec:	1000091e 	bne	r2,zero,402c214 <__ledf2+0x60>
 402c1f0:	2296b03a 	or	r11,r4,r10
 402c1f4:	5813003a 	cmpeq	r9,r11,zero
 402c1f8:	29403fcc 	andi	r5,r5,255
 402c1fc:	40000a1e 	bne	r8,zero,402c228 <__ledf2+0x74>
 402c200:	30d8b03a 	or	r12,r6,r3
 402c204:	6000081e 	bne	r12,zero,402c228 <__ledf2+0x74>
 402c208:	0005883a 	mov	r2,zero
 402c20c:	5800111e 	bne	r11,zero,402c254 <__ledf2+0xa0>
 402c210:	f800283a 	ret
 402c214:	29403fcc 	andi	r5,r5,255
 402c218:	40000c1e 	bne	r8,zero,402c24c <__ledf2+0x98>
 402c21c:	30d2b03a 	or	r9,r6,r3
 402c220:	48000c26 	beq	r9,zero,402c254 <__ledf2+0xa0>
 402c224:	0013883a 	mov	r9,zero
 402c228:	39c03fcc 	andi	r7,r7,255
 402c22c:	48000826 	beq	r9,zero,402c250 <__ledf2+0x9c>
 402c230:	38001126 	beq	r7,zero,402c278 <__ledf2+0xc4>
 402c234:	00800044 	movi	r2,1
 402c238:	f800283a 	ret
 402c23c:	30d2b03a 	or	r9,r6,r3
 402c240:	483fea26 	beq	r9,zero,402c1ec <__flash_rwdata_start+0xffffbed8>
 402c244:	00800084 	movi	r2,2
 402c248:	f800283a 	ret
 402c24c:	39c03fcc 	andi	r7,r7,255
 402c250:	39400726 	beq	r7,r5,402c270 <__ledf2+0xbc>
 402c254:	2800081e 	bne	r5,zero,402c278 <__ledf2+0xc4>
 402c258:	00800044 	movi	r2,1
 402c25c:	f800283a 	ret
 402c260:	2292b03a 	or	r9,r4,r10
 402c264:	483fdf26 	beq	r9,zero,402c1e4 <__flash_rwdata_start+0xffffbed0>
 402c268:	00800084 	movi	r2,2
 402c26c:	f800283a 	ret
 402c270:	4080030e 	bge	r8,r2,402c280 <__ledf2+0xcc>
 402c274:	383fef26 	beq	r7,zero,402c234 <__flash_rwdata_start+0xffffbf20>
 402c278:	00bfffc4 	movi	r2,-1
 402c27c:	f800283a 	ret
 402c280:	123feb16 	blt	r2,r8,402c230 <__flash_rwdata_start+0xffffbf1c>
 402c284:	1abff336 	bltu	r3,r10,402c254 <__flash_rwdata_start+0xffffbf40>
 402c288:	50c00326 	beq	r10,r3,402c298 <__ledf2+0xe4>
 402c28c:	50c0042e 	bgeu	r10,r3,402c2a0 <__ledf2+0xec>
 402c290:	283fe81e 	bne	r5,zero,402c234 <__flash_rwdata_start+0xffffbf20>
 402c294:	003ff806 	br	402c278 <__flash_rwdata_start+0xffffbf64>
 402c298:	313fee36 	bltu	r6,r4,402c254 <__flash_rwdata_start+0xffffbf40>
 402c29c:	21bffc36 	bltu	r4,r6,402c290 <__flash_rwdata_start+0xffffbf7c>
 402c2a0:	0005883a 	mov	r2,zero
 402c2a4:	f800283a 	ret

0402c2a8 <__muldf3>:
 402c2a8:	deffee04 	addi	sp,sp,-72
 402c2ac:	dd000c15 	stw	r20,48(sp)
 402c2b0:	2828d53a 	srli	r20,r5,20
 402c2b4:	ddc00f15 	stw	r23,60(sp)
 402c2b8:	282ed7fa 	srli	r23,r5,31
 402c2bc:	dc000815 	stw	r16,32(sp)
 402c2c0:	04000434 	movhi	r16,16
 402c2c4:	dcc00b15 	stw	r19,44(sp)
 402c2c8:	843fffc4 	addi	r16,r16,-1
 402c2cc:	dfc01115 	stw	ra,68(sp)
 402c2d0:	df001015 	stw	fp,64(sp)
 402c2d4:	dd800e15 	stw	r22,56(sp)
 402c2d8:	dd400d15 	stw	r21,52(sp)
 402c2dc:	dc800a15 	stw	r18,40(sp)
 402c2e0:	dc400915 	stw	r17,36(sp)
 402c2e4:	a501ffcc 	andi	r20,r20,2047
 402c2e8:	2c20703a 	and	r16,r5,r16
 402c2ec:	b827883a 	mov	r19,r23
 402c2f0:	ba403fcc 	andi	r9,r23,255
 402c2f4:	a0006026 	beq	r20,zero,402c478 <__muldf3+0x1d0>
 402c2f8:	0081ffc4 	movi	r2,2047
 402c2fc:	202d883a 	mov	r22,r4
 402c300:	a0803626 	beq	r20,r2,402c3dc <__muldf3+0x134>
 402c304:	84000434 	orhi	r16,r16,16
 402c308:	200ad77a 	srli	r5,r4,29
 402c30c:	800490fa 	slli	r2,r16,3
 402c310:	202c90fa 	slli	r22,r4,3
 402c314:	a53f0044 	addi	r20,r20,-1023
 402c318:	28a0b03a 	or	r16,r5,r2
 402c31c:	002b883a 	mov	r21,zero
 402c320:	000b883a 	mov	r5,zero
 402c324:	3804d53a 	srli	r2,r7,20
 402c328:	3838d7fa 	srli	fp,r7,31
 402c32c:	04400434 	movhi	r17,16
 402c330:	8c7fffc4 	addi	r17,r17,-1
 402c334:	1081ffcc 	andi	r2,r2,2047
 402c338:	3025883a 	mov	r18,r6
 402c33c:	3c62703a 	and	r17,r7,r17
 402c340:	e2803fcc 	andi	r10,fp,255
 402c344:	10006d26 	beq	r2,zero,402c4fc <__muldf3+0x254>
 402c348:	00c1ffc4 	movi	r3,2047
 402c34c:	10c06526 	beq	r2,r3,402c4e4 <__muldf3+0x23c>
 402c350:	8c400434 	orhi	r17,r17,16
 402c354:	300ed77a 	srli	r7,r6,29
 402c358:	880690fa 	slli	r3,r17,3
 402c35c:	302490fa 	slli	r18,r6,3
 402c360:	10bf0044 	addi	r2,r2,-1023
 402c364:	38e2b03a 	or	r17,r7,r3
 402c368:	000f883a 	mov	r7,zero
 402c36c:	a087883a 	add	r3,r20,r2
 402c370:	010003c4 	movi	r4,15
 402c374:	3d44b03a 	or	r2,r7,r21
 402c378:	e5ccf03a 	xor	r6,fp,r23
 402c37c:	1a000044 	addi	r8,r3,1
 402c380:	20809b36 	bltu	r4,r2,402c5f0 <__muldf3+0x348>
 402c384:	100490ba 	slli	r2,r2,2
 402c388:	010100f4 	movhi	r4,1027
 402c38c:	2130e704 	addi	r4,r4,-15460
 402c390:	1105883a 	add	r2,r2,r4
 402c394:	10800017 	ldw	r2,0(r2)
 402c398:	1000683a 	jmp	r2
 402c39c:	0402c5f0 	cmpltui	r16,zero,2839
 402c3a0:	0402c3fc 	xorhi	r16,zero,2831
 402c3a4:	0402c3fc 	xorhi	r16,zero,2831
 402c3a8:	0402c3f8 	rdprs	r16,zero,2831
 402c3ac:	0402c5cc 	andi	r16,zero,2839
 402c3b0:	0402c5cc 	andi	r16,zero,2839
 402c3b4:	0402c5b4 	movhi	r16,2838
 402c3b8:	0402c3f8 	rdprs	r16,zero,2831
 402c3bc:	0402c5cc 	andi	r16,zero,2839
 402c3c0:	0402c5b4 	movhi	r16,2838
 402c3c4:	0402c5cc 	andi	r16,zero,2839
 402c3c8:	0402c3f8 	rdprs	r16,zero,2831
 402c3cc:	0402c5dc 	xori	r16,zero,2839
 402c3d0:	0402c5dc 	xori	r16,zero,2839
 402c3d4:	0402c5dc 	xori	r16,zero,2839
 402c3d8:	0402c93c 	xorhi	r16,zero,2852
 402c3dc:	2404b03a 	or	r2,r4,r16
 402c3e0:	1000711e 	bne	r2,zero,402c5a8 <__muldf3+0x300>
 402c3e4:	05400204 	movi	r21,8
 402c3e8:	0021883a 	mov	r16,zero
 402c3ec:	002d883a 	mov	r22,zero
 402c3f0:	01400084 	movi	r5,2
 402c3f4:	003fcb06 	br	402c324 <__flash_rwdata_start+0xffffc010>
 402c3f8:	500d883a 	mov	r6,r10
 402c3fc:	00800084 	movi	r2,2
 402c400:	38805926 	beq	r7,r2,402c568 <__muldf3+0x2c0>
 402c404:	008000c4 	movi	r2,3
 402c408:	3881bb26 	beq	r7,r2,402caf8 <__muldf3+0x850>
 402c40c:	00800044 	movi	r2,1
 402c410:	3881961e 	bne	r7,r2,402ca6c <__muldf3+0x7c4>
 402c414:	3027883a 	mov	r19,r6
 402c418:	0005883a 	mov	r2,zero
 402c41c:	0021883a 	mov	r16,zero
 402c420:	002d883a 	mov	r22,zero
 402c424:	1004953a 	slli	r2,r2,20
 402c428:	98c03fcc 	andi	r3,r19,255
 402c42c:	04400434 	movhi	r17,16
 402c430:	8c7fffc4 	addi	r17,r17,-1
 402c434:	180697fa 	slli	r3,r3,31
 402c438:	8460703a 	and	r16,r16,r17
 402c43c:	80a0b03a 	or	r16,r16,r2
 402c440:	80c6b03a 	or	r3,r16,r3
 402c444:	b005883a 	mov	r2,r22
 402c448:	dfc01117 	ldw	ra,68(sp)
 402c44c:	df001017 	ldw	fp,64(sp)
 402c450:	ddc00f17 	ldw	r23,60(sp)
 402c454:	dd800e17 	ldw	r22,56(sp)
 402c458:	dd400d17 	ldw	r21,52(sp)
 402c45c:	dd000c17 	ldw	r20,48(sp)
 402c460:	dcc00b17 	ldw	r19,44(sp)
 402c464:	dc800a17 	ldw	r18,40(sp)
 402c468:	dc400917 	ldw	r17,36(sp)
 402c46c:	dc000817 	ldw	r16,32(sp)
 402c470:	dec01204 	addi	sp,sp,72
 402c474:	f800283a 	ret
 402c478:	2404b03a 	or	r2,r4,r16
 402c47c:	202b883a 	mov	r21,r4
 402c480:	10004426 	beq	r2,zero,402c594 <__muldf3+0x2ec>
 402c484:	80015126 	beq	r16,zero,402c9cc <__muldf3+0x724>
 402c488:	8009883a 	mov	r4,r16
 402c48c:	d9800715 	stw	r6,28(sp)
 402c490:	d9c00215 	stw	r7,8(sp)
 402c494:	da400415 	stw	r9,16(sp)
 402c498:	402d6140 	call	402d614 <__clzsi2>
 402c49c:	d9800717 	ldw	r6,28(sp)
 402c4a0:	d9c00217 	ldw	r7,8(sp)
 402c4a4:	da400417 	ldw	r9,16(sp)
 402c4a8:	113ffd44 	addi	r4,r2,-11
 402c4ac:	00c00704 	movi	r3,28
 402c4b0:	19014216 	blt	r3,r4,402c9bc <__muldf3+0x714>
 402c4b4:	00c00744 	movi	r3,29
 402c4b8:	15bffe04 	addi	r22,r2,-8
 402c4bc:	1907c83a 	sub	r3,r3,r4
 402c4c0:	85a0983a 	sll	r16,r16,r22
 402c4c4:	a8c6d83a 	srl	r3,r21,r3
 402c4c8:	adac983a 	sll	r22,r21,r22
 402c4cc:	1c20b03a 	or	r16,r3,r16
 402c4d0:	1080fcc4 	addi	r2,r2,1011
 402c4d4:	00a9c83a 	sub	r20,zero,r2
 402c4d8:	002b883a 	mov	r21,zero
 402c4dc:	000b883a 	mov	r5,zero
 402c4e0:	003f9006 	br	402c324 <__flash_rwdata_start+0xffffc010>
 402c4e4:	3446b03a 	or	r3,r6,r17
 402c4e8:	1800281e 	bne	r3,zero,402c58c <__muldf3+0x2e4>
 402c4ec:	0023883a 	mov	r17,zero
 402c4f0:	0025883a 	mov	r18,zero
 402c4f4:	01c00084 	movi	r7,2
 402c4f8:	003f9c06 	br	402c36c <__flash_rwdata_start+0xffffc058>
 402c4fc:	3446b03a 	or	r3,r6,r17
 402c500:	18001e26 	beq	r3,zero,402c57c <__muldf3+0x2d4>
 402c504:	88012126 	beq	r17,zero,402c98c <__muldf3+0x6e4>
 402c508:	8809883a 	mov	r4,r17
 402c50c:	d9400215 	stw	r5,8(sp)
 402c510:	d9800715 	stw	r6,28(sp)
 402c514:	da400415 	stw	r9,16(sp)
 402c518:	da800315 	stw	r10,12(sp)
 402c51c:	402d6140 	call	402d614 <__clzsi2>
 402c520:	d9400217 	ldw	r5,8(sp)
 402c524:	d9800717 	ldw	r6,28(sp)
 402c528:	da400417 	ldw	r9,16(sp)
 402c52c:	da800317 	ldw	r10,12(sp)
 402c530:	113ffd44 	addi	r4,r2,-11
 402c534:	00c00704 	movi	r3,28
 402c538:	19011016 	blt	r3,r4,402c97c <__muldf3+0x6d4>
 402c53c:	00c00744 	movi	r3,29
 402c540:	14bffe04 	addi	r18,r2,-8
 402c544:	1907c83a 	sub	r3,r3,r4
 402c548:	8ca2983a 	sll	r17,r17,r18
 402c54c:	30c6d83a 	srl	r3,r6,r3
 402c550:	34a4983a 	sll	r18,r6,r18
 402c554:	1c62b03a 	or	r17,r3,r17
 402c558:	1080fcc4 	addi	r2,r2,1011
 402c55c:	0085c83a 	sub	r2,zero,r2
 402c560:	000f883a 	mov	r7,zero
 402c564:	003f8106 	br	402c36c <__flash_rwdata_start+0xffffc058>
 402c568:	3027883a 	mov	r19,r6
 402c56c:	0081ffc4 	movi	r2,2047
 402c570:	0021883a 	mov	r16,zero
 402c574:	002d883a 	mov	r22,zero
 402c578:	003faa06 	br	402c424 <__flash_rwdata_start+0xffffc110>
 402c57c:	0023883a 	mov	r17,zero
 402c580:	0025883a 	mov	r18,zero
 402c584:	01c00044 	movi	r7,1
 402c588:	003f7806 	br	402c36c <__flash_rwdata_start+0xffffc058>
 402c58c:	01c000c4 	movi	r7,3
 402c590:	003f7606 	br	402c36c <__flash_rwdata_start+0xffffc058>
 402c594:	05400104 	movi	r21,4
 402c598:	0021883a 	mov	r16,zero
 402c59c:	002d883a 	mov	r22,zero
 402c5a0:	01400044 	movi	r5,1
 402c5a4:	003f5f06 	br	402c324 <__flash_rwdata_start+0xffffc010>
 402c5a8:	05400304 	movi	r21,12
 402c5ac:	014000c4 	movi	r5,3
 402c5b0:	003f5c06 	br	402c324 <__flash_rwdata_start+0xffffc010>
 402c5b4:	04000434 	movhi	r16,16
 402c5b8:	0027883a 	mov	r19,zero
 402c5bc:	843fffc4 	addi	r16,r16,-1
 402c5c0:	05bfffc4 	movi	r22,-1
 402c5c4:	0081ffc4 	movi	r2,2047
 402c5c8:	003f9606 	br	402c424 <__flash_rwdata_start+0xffffc110>
 402c5cc:	8023883a 	mov	r17,r16
 402c5d0:	b025883a 	mov	r18,r22
 402c5d4:	280f883a 	mov	r7,r5
 402c5d8:	003f8806 	br	402c3fc <__flash_rwdata_start+0xffffc0e8>
 402c5dc:	8023883a 	mov	r17,r16
 402c5e0:	b025883a 	mov	r18,r22
 402c5e4:	480d883a 	mov	r6,r9
 402c5e8:	280f883a 	mov	r7,r5
 402c5ec:	003f8306 	br	402c3fc <__flash_rwdata_start+0xffffc0e8>
 402c5f0:	b026d43a 	srli	r19,r22,16
 402c5f4:	902ed43a 	srli	r23,r18,16
 402c5f8:	b5bfffcc 	andi	r22,r22,65535
 402c5fc:	94bfffcc 	andi	r18,r18,65535
 402c600:	b00b883a 	mov	r5,r22
 402c604:	9009883a 	mov	r4,r18
 402c608:	d8c00515 	stw	r3,20(sp)
 402c60c:	d9800715 	stw	r6,28(sp)
 402c610:	da000615 	stw	r8,24(sp)
 402c614:	40208380 	call	4020838 <__mulsi3>
 402c618:	980b883a 	mov	r5,r19
 402c61c:	9009883a 	mov	r4,r18
 402c620:	1029883a 	mov	r20,r2
 402c624:	40208380 	call	4020838 <__mulsi3>
 402c628:	b80b883a 	mov	r5,r23
 402c62c:	9809883a 	mov	r4,r19
 402c630:	102b883a 	mov	r21,r2
 402c634:	40208380 	call	4020838 <__mulsi3>
 402c638:	b809883a 	mov	r4,r23
 402c63c:	b00b883a 	mov	r5,r22
 402c640:	1039883a 	mov	fp,r2
 402c644:	40208380 	call	4020838 <__mulsi3>
 402c648:	a008d43a 	srli	r4,r20,16
 402c64c:	1545883a 	add	r2,r2,r21
 402c650:	d8c00517 	ldw	r3,20(sp)
 402c654:	2085883a 	add	r2,r4,r2
 402c658:	d9800717 	ldw	r6,28(sp)
 402c65c:	da000617 	ldw	r8,24(sp)
 402c660:	1540022e 	bgeu	r2,r21,402c66c <__muldf3+0x3c4>
 402c664:	01000074 	movhi	r4,1
 402c668:	e139883a 	add	fp,fp,r4
 402c66c:	100e943a 	slli	r7,r2,16
 402c670:	1004d43a 	srli	r2,r2,16
 402c674:	882ad43a 	srli	r21,r17,16
 402c678:	a53fffcc 	andi	r20,r20,65535
 402c67c:	8c7fffcc 	andi	r17,r17,65535
 402c680:	3d29883a 	add	r20,r7,r20
 402c684:	b00b883a 	mov	r5,r22
 402c688:	8809883a 	mov	r4,r17
 402c68c:	d8c00515 	stw	r3,20(sp)
 402c690:	d9800715 	stw	r6,28(sp)
 402c694:	da000615 	stw	r8,24(sp)
 402c698:	dd000115 	stw	r20,4(sp)
 402c69c:	d8800015 	stw	r2,0(sp)
 402c6a0:	40208380 	call	4020838 <__mulsi3>
 402c6a4:	980b883a 	mov	r5,r19
 402c6a8:	8809883a 	mov	r4,r17
 402c6ac:	d8800215 	stw	r2,8(sp)
 402c6b0:	40208380 	call	4020838 <__mulsi3>
 402c6b4:	9809883a 	mov	r4,r19
 402c6b8:	a80b883a 	mov	r5,r21
 402c6bc:	1029883a 	mov	r20,r2
 402c6c0:	40208380 	call	4020838 <__mulsi3>
 402c6c4:	b00b883a 	mov	r5,r22
 402c6c8:	a809883a 	mov	r4,r21
 402c6cc:	d8800415 	stw	r2,16(sp)
 402c6d0:	40208380 	call	4020838 <__mulsi3>
 402c6d4:	d9c00217 	ldw	r7,8(sp)
 402c6d8:	1505883a 	add	r2,r2,r20
 402c6dc:	d8c00517 	ldw	r3,20(sp)
 402c6e0:	3826d43a 	srli	r19,r7,16
 402c6e4:	d9800717 	ldw	r6,28(sp)
 402c6e8:	da000617 	ldw	r8,24(sp)
 402c6ec:	9885883a 	add	r2,r19,r2
 402c6f0:	da400417 	ldw	r9,16(sp)
 402c6f4:	1500022e 	bgeu	r2,r20,402c700 <__muldf3+0x458>
 402c6f8:	01000074 	movhi	r4,1
 402c6fc:	4913883a 	add	r9,r9,r4
 402c700:	1028d43a 	srli	r20,r2,16
 402c704:	1004943a 	slli	r2,r2,16
 402c708:	802cd43a 	srli	r22,r16,16
 402c70c:	843fffcc 	andi	r16,r16,65535
 402c710:	3cffffcc 	andi	r19,r7,65535
 402c714:	9009883a 	mov	r4,r18
 402c718:	800b883a 	mov	r5,r16
 402c71c:	a269883a 	add	r20,r20,r9
 402c720:	d8c00515 	stw	r3,20(sp)
 402c724:	d9800715 	stw	r6,28(sp)
 402c728:	da000615 	stw	r8,24(sp)
 402c72c:	14e7883a 	add	r19,r2,r19
 402c730:	40208380 	call	4020838 <__mulsi3>
 402c734:	9009883a 	mov	r4,r18
 402c738:	b00b883a 	mov	r5,r22
 402c73c:	d8800315 	stw	r2,12(sp)
 402c740:	40208380 	call	4020838 <__mulsi3>
 402c744:	b809883a 	mov	r4,r23
 402c748:	b00b883a 	mov	r5,r22
 402c74c:	d8800215 	stw	r2,8(sp)
 402c750:	40208380 	call	4020838 <__mulsi3>
 402c754:	b80b883a 	mov	r5,r23
 402c758:	8009883a 	mov	r4,r16
 402c75c:	d8800415 	stw	r2,16(sp)
 402c760:	40208380 	call	4020838 <__mulsi3>
 402c764:	da800317 	ldw	r10,12(sp)
 402c768:	d9c00217 	ldw	r7,8(sp)
 402c76c:	d9000017 	ldw	r4,0(sp)
 402c770:	502ed43a 	srli	r23,r10,16
 402c774:	11c5883a 	add	r2,r2,r7
 402c778:	24e5883a 	add	r18,r4,r19
 402c77c:	b885883a 	add	r2,r23,r2
 402c780:	d8c00517 	ldw	r3,20(sp)
 402c784:	d9800717 	ldw	r6,28(sp)
 402c788:	da000617 	ldw	r8,24(sp)
 402c78c:	da400417 	ldw	r9,16(sp)
 402c790:	11c0022e 	bgeu	r2,r7,402c79c <__muldf3+0x4f4>
 402c794:	01000074 	movhi	r4,1
 402c798:	4913883a 	add	r9,r9,r4
 402c79c:	100ed43a 	srli	r7,r2,16
 402c7a0:	1004943a 	slli	r2,r2,16
 402c7a4:	55ffffcc 	andi	r23,r10,65535
 402c7a8:	3a53883a 	add	r9,r7,r9
 402c7ac:	8809883a 	mov	r4,r17
 402c7b0:	800b883a 	mov	r5,r16
 402c7b4:	d8c00515 	stw	r3,20(sp)
 402c7b8:	d9800715 	stw	r6,28(sp)
 402c7bc:	da000615 	stw	r8,24(sp)
 402c7c0:	da400415 	stw	r9,16(sp)
 402c7c4:	15ef883a 	add	r23,r2,r23
 402c7c8:	40208380 	call	4020838 <__mulsi3>
 402c7cc:	8809883a 	mov	r4,r17
 402c7d0:	b00b883a 	mov	r5,r22
 402c7d4:	d8800215 	stw	r2,8(sp)
 402c7d8:	40208380 	call	4020838 <__mulsi3>
 402c7dc:	b00b883a 	mov	r5,r22
 402c7e0:	a809883a 	mov	r4,r21
 402c7e4:	d8800315 	stw	r2,12(sp)
 402c7e8:	40208380 	call	4020838 <__mulsi3>
 402c7ec:	8009883a 	mov	r4,r16
 402c7f0:	a80b883a 	mov	r5,r21
 402c7f4:	1023883a 	mov	r17,r2
 402c7f8:	40208380 	call	4020838 <__mulsi3>
 402c7fc:	d9c00217 	ldw	r7,8(sp)
 402c800:	da800317 	ldw	r10,12(sp)
 402c804:	d8c00517 	ldw	r3,20(sp)
 402c808:	3808d43a 	srli	r4,r7,16
 402c80c:	1285883a 	add	r2,r2,r10
 402c810:	d9800717 	ldw	r6,28(sp)
 402c814:	2085883a 	add	r2,r4,r2
 402c818:	da000617 	ldw	r8,24(sp)
 402c81c:	da400417 	ldw	r9,16(sp)
 402c820:	1280022e 	bgeu	r2,r10,402c82c <__muldf3+0x584>
 402c824:	01000074 	movhi	r4,1
 402c828:	8923883a 	add	r17,r17,r4
 402c82c:	1008943a 	slli	r4,r2,16
 402c830:	39ffffcc 	andi	r7,r7,65535
 402c834:	e4b9883a 	add	fp,fp,r18
 402c838:	21cf883a 	add	r7,r4,r7
 402c83c:	e4e7803a 	cmpltu	r19,fp,r19
 402c840:	3d0f883a 	add	r7,r7,r20
 402c844:	bf39883a 	add	fp,r23,fp
 402c848:	99c9883a 	add	r4,r19,r7
 402c84c:	e5ef803a 	cmpltu	r23,fp,r23
 402c850:	490b883a 	add	r5,r9,r4
 402c854:	1004d43a 	srli	r2,r2,16
 402c858:	b965883a 	add	r18,r23,r5
 402c85c:	24c9803a 	cmpltu	r4,r4,r19
 402c860:	3d29803a 	cmpltu	r20,r7,r20
 402c864:	a128b03a 	or	r20,r20,r4
 402c868:	95ef803a 	cmpltu	r23,r18,r23
 402c86c:	2a53803a 	cmpltu	r9,r5,r9
 402c870:	a0a9883a 	add	r20,r20,r2
 402c874:	4deeb03a 	or	r23,r9,r23
 402c878:	a5ef883a 	add	r23,r20,r23
 402c87c:	bc63883a 	add	r17,r23,r17
 402c880:	e004927a 	slli	r2,fp,9
 402c884:	d9000117 	ldw	r4,4(sp)
 402c888:	882e927a 	slli	r23,r17,9
 402c88c:	9022d5fa 	srli	r17,r18,23
 402c890:	e038d5fa 	srli	fp,fp,23
 402c894:	1104b03a 	or	r2,r2,r4
 402c898:	9024927a 	slli	r18,r18,9
 402c89c:	1004c03a 	cmpne	r2,r2,zero
 402c8a0:	bc62b03a 	or	r17,r23,r17
 402c8a4:	1738b03a 	or	fp,r2,fp
 402c8a8:	8880402c 	andhi	r2,r17,256
 402c8ac:	e4a4b03a 	or	r18,fp,r18
 402c8b0:	10000726 	beq	r2,zero,402c8d0 <__muldf3+0x628>
 402c8b4:	9006d07a 	srli	r3,r18,1
 402c8b8:	880497fa 	slli	r2,r17,31
 402c8bc:	9480004c 	andi	r18,r18,1
 402c8c0:	8822d07a 	srli	r17,r17,1
 402c8c4:	1ca4b03a 	or	r18,r3,r18
 402c8c8:	14a4b03a 	or	r18,r2,r18
 402c8cc:	4007883a 	mov	r3,r8
 402c8d0:	1880ffc4 	addi	r2,r3,1023
 402c8d4:	0080460e 	bge	zero,r2,402c9f0 <__muldf3+0x748>
 402c8d8:	910001cc 	andi	r4,r18,7
 402c8dc:	20000726 	beq	r4,zero,402c8fc <__muldf3+0x654>
 402c8e0:	910003cc 	andi	r4,r18,15
 402c8e4:	01400104 	movi	r5,4
 402c8e8:	21400426 	beq	r4,r5,402c8fc <__muldf3+0x654>
 402c8ec:	9149883a 	add	r4,r18,r5
 402c8f0:	24a5803a 	cmpltu	r18,r4,r18
 402c8f4:	8ca3883a 	add	r17,r17,r18
 402c8f8:	2025883a 	mov	r18,r4
 402c8fc:	8900402c 	andhi	r4,r17,256
 402c900:	20000426 	beq	r4,zero,402c914 <__muldf3+0x66c>
 402c904:	18810004 	addi	r2,r3,1024
 402c908:	00ffc034 	movhi	r3,65280
 402c90c:	18ffffc4 	addi	r3,r3,-1
 402c910:	88e2703a 	and	r17,r17,r3
 402c914:	00c1ff84 	movi	r3,2046
 402c918:	18bf1316 	blt	r3,r2,402c568 <__flash_rwdata_start+0xffffc254>
 402c91c:	882c977a 	slli	r22,r17,29
 402c920:	9024d0fa 	srli	r18,r18,3
 402c924:	8822927a 	slli	r17,r17,9
 402c928:	1081ffcc 	andi	r2,r2,2047
 402c92c:	b4acb03a 	or	r22,r22,r18
 402c930:	8820d33a 	srli	r16,r17,12
 402c934:	3027883a 	mov	r19,r6
 402c938:	003eba06 	br	402c424 <__flash_rwdata_start+0xffffc110>
 402c93c:	8080022c 	andhi	r2,r16,8
 402c940:	10000926 	beq	r2,zero,402c968 <__muldf3+0x6c0>
 402c944:	8880022c 	andhi	r2,r17,8
 402c948:	1000071e 	bne	r2,zero,402c968 <__muldf3+0x6c0>
 402c94c:	00800434 	movhi	r2,16
 402c950:	8c000234 	orhi	r16,r17,8
 402c954:	10bfffc4 	addi	r2,r2,-1
 402c958:	e027883a 	mov	r19,fp
 402c95c:	80a0703a 	and	r16,r16,r2
 402c960:	902d883a 	mov	r22,r18
 402c964:	003f1706 	br	402c5c4 <__flash_rwdata_start+0xffffc2b0>
 402c968:	00800434 	movhi	r2,16
 402c96c:	84000234 	orhi	r16,r16,8
 402c970:	10bfffc4 	addi	r2,r2,-1
 402c974:	80a0703a 	and	r16,r16,r2
 402c978:	003f1206 	br	402c5c4 <__flash_rwdata_start+0xffffc2b0>
 402c97c:	147ff604 	addi	r17,r2,-40
 402c980:	3462983a 	sll	r17,r6,r17
 402c984:	0025883a 	mov	r18,zero
 402c988:	003ef306 	br	402c558 <__flash_rwdata_start+0xffffc244>
 402c98c:	3009883a 	mov	r4,r6
 402c990:	d9400215 	stw	r5,8(sp)
 402c994:	d9800715 	stw	r6,28(sp)
 402c998:	da400415 	stw	r9,16(sp)
 402c99c:	da800315 	stw	r10,12(sp)
 402c9a0:	402d6140 	call	402d614 <__clzsi2>
 402c9a4:	10800804 	addi	r2,r2,32
 402c9a8:	da800317 	ldw	r10,12(sp)
 402c9ac:	da400417 	ldw	r9,16(sp)
 402c9b0:	d9800717 	ldw	r6,28(sp)
 402c9b4:	d9400217 	ldw	r5,8(sp)
 402c9b8:	003edd06 	br	402c530 <__flash_rwdata_start+0xffffc21c>
 402c9bc:	143ff604 	addi	r16,r2,-40
 402c9c0:	ac20983a 	sll	r16,r21,r16
 402c9c4:	002d883a 	mov	r22,zero
 402c9c8:	003ec106 	br	402c4d0 <__flash_rwdata_start+0xffffc1bc>
 402c9cc:	d9800715 	stw	r6,28(sp)
 402c9d0:	d9c00215 	stw	r7,8(sp)
 402c9d4:	da400415 	stw	r9,16(sp)
 402c9d8:	402d6140 	call	402d614 <__clzsi2>
 402c9dc:	10800804 	addi	r2,r2,32
 402c9e0:	da400417 	ldw	r9,16(sp)
 402c9e4:	d9c00217 	ldw	r7,8(sp)
 402c9e8:	d9800717 	ldw	r6,28(sp)
 402c9ec:	003eae06 	br	402c4a8 <__flash_rwdata_start+0xffffc194>
 402c9f0:	00c00044 	movi	r3,1
 402c9f4:	1887c83a 	sub	r3,r3,r2
 402c9f8:	01000e04 	movi	r4,56
 402c9fc:	20fe8516 	blt	r4,r3,402c414 <__flash_rwdata_start+0xffffc100>
 402ca00:	010007c4 	movi	r4,31
 402ca04:	20c01b16 	blt	r4,r3,402ca74 <__muldf3+0x7cc>
 402ca08:	00800804 	movi	r2,32
 402ca0c:	10c5c83a 	sub	r2,r2,r3
 402ca10:	888a983a 	sll	r5,r17,r2
 402ca14:	90c8d83a 	srl	r4,r18,r3
 402ca18:	9084983a 	sll	r2,r18,r2
 402ca1c:	88e2d83a 	srl	r17,r17,r3
 402ca20:	2906b03a 	or	r3,r5,r4
 402ca24:	1004c03a 	cmpne	r2,r2,zero
 402ca28:	1886b03a 	or	r3,r3,r2
 402ca2c:	188001cc 	andi	r2,r3,7
 402ca30:	10000726 	beq	r2,zero,402ca50 <__muldf3+0x7a8>
 402ca34:	188003cc 	andi	r2,r3,15
 402ca38:	01000104 	movi	r4,4
 402ca3c:	11000426 	beq	r2,r4,402ca50 <__muldf3+0x7a8>
 402ca40:	1805883a 	mov	r2,r3
 402ca44:	10c00104 	addi	r3,r2,4
 402ca48:	1885803a 	cmpltu	r2,r3,r2
 402ca4c:	88a3883a 	add	r17,r17,r2
 402ca50:	8880202c 	andhi	r2,r17,128
 402ca54:	10001c26 	beq	r2,zero,402cac8 <__muldf3+0x820>
 402ca58:	3027883a 	mov	r19,r6
 402ca5c:	00800044 	movi	r2,1
 402ca60:	0021883a 	mov	r16,zero
 402ca64:	002d883a 	mov	r22,zero
 402ca68:	003e6e06 	br	402c424 <__flash_rwdata_start+0xffffc110>
 402ca6c:	4007883a 	mov	r3,r8
 402ca70:	003f9706 	br	402c8d0 <__flash_rwdata_start+0xffffc5bc>
 402ca74:	017ff844 	movi	r5,-31
 402ca78:	2885c83a 	sub	r2,r5,r2
 402ca7c:	888ad83a 	srl	r5,r17,r2
 402ca80:	00800804 	movi	r2,32
 402ca84:	18801a26 	beq	r3,r2,402caf0 <__muldf3+0x848>
 402ca88:	01001004 	movi	r4,64
 402ca8c:	20c7c83a 	sub	r3,r4,r3
 402ca90:	88e2983a 	sll	r17,r17,r3
 402ca94:	8ca4b03a 	or	r18,r17,r18
 402ca98:	9004c03a 	cmpne	r2,r18,zero
 402ca9c:	2884b03a 	or	r2,r5,r2
 402caa0:	144001cc 	andi	r17,r2,7
 402caa4:	88000d1e 	bne	r17,zero,402cadc <__muldf3+0x834>
 402caa8:	0021883a 	mov	r16,zero
 402caac:	102cd0fa 	srli	r22,r2,3
 402cab0:	3027883a 	mov	r19,r6
 402cab4:	0005883a 	mov	r2,zero
 402cab8:	b46cb03a 	or	r22,r22,r17
 402cabc:	003e5906 	br	402c424 <__flash_rwdata_start+0xffffc110>
 402cac0:	1007883a 	mov	r3,r2
 402cac4:	0023883a 	mov	r17,zero
 402cac8:	8820927a 	slli	r16,r17,9
 402cacc:	1805883a 	mov	r2,r3
 402cad0:	8822977a 	slli	r17,r17,29
 402cad4:	8020d33a 	srli	r16,r16,12
 402cad8:	003ff406 	br	402caac <__flash_rwdata_start+0xffffc798>
 402cadc:	10c003cc 	andi	r3,r2,15
 402cae0:	01000104 	movi	r4,4
 402cae4:	193ff626 	beq	r3,r4,402cac0 <__flash_rwdata_start+0xffffc7ac>
 402cae8:	0023883a 	mov	r17,zero
 402caec:	003fd506 	br	402ca44 <__flash_rwdata_start+0xffffc730>
 402caf0:	0023883a 	mov	r17,zero
 402caf4:	003fe706 	br	402ca94 <__flash_rwdata_start+0xffffc780>
 402caf8:	00800434 	movhi	r2,16
 402cafc:	8c000234 	orhi	r16,r17,8
 402cb00:	10bfffc4 	addi	r2,r2,-1
 402cb04:	3027883a 	mov	r19,r6
 402cb08:	80a0703a 	and	r16,r16,r2
 402cb0c:	902d883a 	mov	r22,r18
 402cb10:	003eac06 	br	402c5c4 <__flash_rwdata_start+0xffffc2b0>

0402cb14 <__subdf3>:
 402cb14:	02000434 	movhi	r8,16
 402cb18:	423fffc4 	addi	r8,r8,-1
 402cb1c:	defffb04 	addi	sp,sp,-20
 402cb20:	2a14703a 	and	r10,r5,r8
 402cb24:	3812d53a 	srli	r9,r7,20
 402cb28:	3a10703a 	and	r8,r7,r8
 402cb2c:	2006d77a 	srli	r3,r4,29
 402cb30:	3004d77a 	srli	r2,r6,29
 402cb34:	dc000015 	stw	r16,0(sp)
 402cb38:	501490fa 	slli	r10,r10,3
 402cb3c:	2820d53a 	srli	r16,r5,20
 402cb40:	401090fa 	slli	r8,r8,3
 402cb44:	dc800215 	stw	r18,8(sp)
 402cb48:	dc400115 	stw	r17,4(sp)
 402cb4c:	dfc00415 	stw	ra,16(sp)
 402cb50:	202290fa 	slli	r17,r4,3
 402cb54:	dcc00315 	stw	r19,12(sp)
 402cb58:	4a41ffcc 	andi	r9,r9,2047
 402cb5c:	0101ffc4 	movi	r4,2047
 402cb60:	2824d7fa 	srli	r18,r5,31
 402cb64:	8401ffcc 	andi	r16,r16,2047
 402cb68:	50c6b03a 	or	r3,r10,r3
 402cb6c:	380ed7fa 	srli	r7,r7,31
 402cb70:	408ab03a 	or	r5,r8,r2
 402cb74:	300c90fa 	slli	r6,r6,3
 402cb78:	49009626 	beq	r9,r4,402cdd4 <__subdf3+0x2c0>
 402cb7c:	39c0005c 	xori	r7,r7,1
 402cb80:	8245c83a 	sub	r2,r16,r9
 402cb84:	3c807426 	beq	r7,r18,402cd58 <__subdf3+0x244>
 402cb88:	0080af0e 	bge	zero,r2,402ce48 <__subdf3+0x334>
 402cb8c:	48002a1e 	bne	r9,zero,402cc38 <__subdf3+0x124>
 402cb90:	2988b03a 	or	r4,r5,r6
 402cb94:	20009a1e 	bne	r4,zero,402ce00 <__subdf3+0x2ec>
 402cb98:	888001cc 	andi	r2,r17,7
 402cb9c:	10000726 	beq	r2,zero,402cbbc <__subdf3+0xa8>
 402cba0:	888003cc 	andi	r2,r17,15
 402cba4:	01000104 	movi	r4,4
 402cba8:	11000426 	beq	r2,r4,402cbbc <__subdf3+0xa8>
 402cbac:	890b883a 	add	r5,r17,r4
 402cbb0:	2c63803a 	cmpltu	r17,r5,r17
 402cbb4:	1c47883a 	add	r3,r3,r17
 402cbb8:	2823883a 	mov	r17,r5
 402cbbc:	1880202c 	andhi	r2,r3,128
 402cbc0:	10005926 	beq	r2,zero,402cd28 <__subdf3+0x214>
 402cbc4:	84000044 	addi	r16,r16,1
 402cbc8:	0081ffc4 	movi	r2,2047
 402cbcc:	8080be26 	beq	r16,r2,402cec8 <__subdf3+0x3b4>
 402cbd0:	017fe034 	movhi	r5,65408
 402cbd4:	297fffc4 	addi	r5,r5,-1
 402cbd8:	1946703a 	and	r3,r3,r5
 402cbdc:	1804977a 	slli	r2,r3,29
 402cbe0:	1806927a 	slli	r3,r3,9
 402cbe4:	8822d0fa 	srli	r17,r17,3
 402cbe8:	8401ffcc 	andi	r16,r16,2047
 402cbec:	180ad33a 	srli	r5,r3,12
 402cbf0:	9100004c 	andi	r4,r18,1
 402cbf4:	1444b03a 	or	r2,r2,r17
 402cbf8:	80c1ffcc 	andi	r3,r16,2047
 402cbfc:	1820953a 	slli	r16,r3,20
 402cc00:	20c03fcc 	andi	r3,r4,255
 402cc04:	180897fa 	slli	r4,r3,31
 402cc08:	00c00434 	movhi	r3,16
 402cc0c:	18ffffc4 	addi	r3,r3,-1
 402cc10:	28c6703a 	and	r3,r5,r3
 402cc14:	1c06b03a 	or	r3,r3,r16
 402cc18:	1906b03a 	or	r3,r3,r4
 402cc1c:	dfc00417 	ldw	ra,16(sp)
 402cc20:	dcc00317 	ldw	r19,12(sp)
 402cc24:	dc800217 	ldw	r18,8(sp)
 402cc28:	dc400117 	ldw	r17,4(sp)
 402cc2c:	dc000017 	ldw	r16,0(sp)
 402cc30:	dec00504 	addi	sp,sp,20
 402cc34:	f800283a 	ret
 402cc38:	0101ffc4 	movi	r4,2047
 402cc3c:	813fd626 	beq	r16,r4,402cb98 <__flash_rwdata_start+0xffffc884>
 402cc40:	29402034 	orhi	r5,r5,128
 402cc44:	01000e04 	movi	r4,56
 402cc48:	2080a316 	blt	r4,r2,402ced8 <__subdf3+0x3c4>
 402cc4c:	010007c4 	movi	r4,31
 402cc50:	2080c616 	blt	r4,r2,402cf6c <__subdf3+0x458>
 402cc54:	01000804 	movi	r4,32
 402cc58:	2089c83a 	sub	r4,r4,r2
 402cc5c:	2910983a 	sll	r8,r5,r4
 402cc60:	308ed83a 	srl	r7,r6,r2
 402cc64:	3108983a 	sll	r4,r6,r4
 402cc68:	2884d83a 	srl	r2,r5,r2
 402cc6c:	41ccb03a 	or	r6,r8,r7
 402cc70:	2008c03a 	cmpne	r4,r4,zero
 402cc74:	310cb03a 	or	r6,r6,r4
 402cc78:	898dc83a 	sub	r6,r17,r6
 402cc7c:	89a3803a 	cmpltu	r17,r17,r6
 402cc80:	1887c83a 	sub	r3,r3,r2
 402cc84:	1c47c83a 	sub	r3,r3,r17
 402cc88:	3023883a 	mov	r17,r6
 402cc8c:	1880202c 	andhi	r2,r3,128
 402cc90:	10002326 	beq	r2,zero,402cd20 <__subdf3+0x20c>
 402cc94:	04c02034 	movhi	r19,128
 402cc98:	9cffffc4 	addi	r19,r19,-1
 402cc9c:	1ce6703a 	and	r19,r3,r19
 402cca0:	98007a26 	beq	r19,zero,402ce8c <__subdf3+0x378>
 402cca4:	9809883a 	mov	r4,r19
 402cca8:	402d6140 	call	402d614 <__clzsi2>
 402ccac:	113ffe04 	addi	r4,r2,-8
 402ccb0:	00c007c4 	movi	r3,31
 402ccb4:	19007b16 	blt	r3,r4,402cea4 <__subdf3+0x390>
 402ccb8:	00800804 	movi	r2,32
 402ccbc:	1105c83a 	sub	r2,r2,r4
 402ccc0:	8884d83a 	srl	r2,r17,r2
 402ccc4:	9906983a 	sll	r3,r19,r4
 402ccc8:	8922983a 	sll	r17,r17,r4
 402cccc:	10c4b03a 	or	r2,r2,r3
 402ccd0:	24007816 	blt	r4,r16,402ceb4 <__subdf3+0x3a0>
 402ccd4:	2421c83a 	sub	r16,r4,r16
 402ccd8:	80c00044 	addi	r3,r16,1
 402ccdc:	010007c4 	movi	r4,31
 402cce0:	20c09516 	blt	r4,r3,402cf38 <__subdf3+0x424>
 402cce4:	01400804 	movi	r5,32
 402cce8:	28cbc83a 	sub	r5,r5,r3
 402ccec:	88c8d83a 	srl	r4,r17,r3
 402ccf0:	8962983a 	sll	r17,r17,r5
 402ccf4:	114a983a 	sll	r5,r2,r5
 402ccf8:	10c6d83a 	srl	r3,r2,r3
 402ccfc:	8804c03a 	cmpne	r2,r17,zero
 402cd00:	290ab03a 	or	r5,r5,r4
 402cd04:	28a2b03a 	or	r17,r5,r2
 402cd08:	0021883a 	mov	r16,zero
 402cd0c:	003fa206 	br	402cb98 <__flash_rwdata_start+0xffffc884>
 402cd10:	2090b03a 	or	r8,r4,r2
 402cd14:	40018e26 	beq	r8,zero,402d350 <__subdf3+0x83c>
 402cd18:	1007883a 	mov	r3,r2
 402cd1c:	2023883a 	mov	r17,r4
 402cd20:	888001cc 	andi	r2,r17,7
 402cd24:	103f9e1e 	bne	r2,zero,402cba0 <__flash_rwdata_start+0xffffc88c>
 402cd28:	1804977a 	slli	r2,r3,29
 402cd2c:	8822d0fa 	srli	r17,r17,3
 402cd30:	1810d0fa 	srli	r8,r3,3
 402cd34:	9100004c 	andi	r4,r18,1
 402cd38:	1444b03a 	or	r2,r2,r17
 402cd3c:	00c1ffc4 	movi	r3,2047
 402cd40:	80c02826 	beq	r16,r3,402cde4 <__subdf3+0x2d0>
 402cd44:	01400434 	movhi	r5,16
 402cd48:	297fffc4 	addi	r5,r5,-1
 402cd4c:	80e0703a 	and	r16,r16,r3
 402cd50:	414a703a 	and	r5,r8,r5
 402cd54:	003fa806 	br	402cbf8 <__flash_rwdata_start+0xffffc8e4>
 402cd58:	0080630e 	bge	zero,r2,402cee8 <__subdf3+0x3d4>
 402cd5c:	48003026 	beq	r9,zero,402ce20 <__subdf3+0x30c>
 402cd60:	0101ffc4 	movi	r4,2047
 402cd64:	813f8c26 	beq	r16,r4,402cb98 <__flash_rwdata_start+0xffffc884>
 402cd68:	29402034 	orhi	r5,r5,128
 402cd6c:	01000e04 	movi	r4,56
 402cd70:	2080a90e 	bge	r4,r2,402d018 <__subdf3+0x504>
 402cd74:	298cb03a 	or	r6,r5,r6
 402cd78:	3012c03a 	cmpne	r9,r6,zero
 402cd7c:	0005883a 	mov	r2,zero
 402cd80:	4c53883a 	add	r9,r9,r17
 402cd84:	4c63803a 	cmpltu	r17,r9,r17
 402cd88:	10c7883a 	add	r3,r2,r3
 402cd8c:	88c7883a 	add	r3,r17,r3
 402cd90:	4823883a 	mov	r17,r9
 402cd94:	1880202c 	andhi	r2,r3,128
 402cd98:	1000d026 	beq	r2,zero,402d0dc <__subdf3+0x5c8>
 402cd9c:	84000044 	addi	r16,r16,1
 402cda0:	0081ffc4 	movi	r2,2047
 402cda4:	8080fe26 	beq	r16,r2,402d1a0 <__subdf3+0x68c>
 402cda8:	00bfe034 	movhi	r2,65408
 402cdac:	10bfffc4 	addi	r2,r2,-1
 402cdb0:	1886703a 	and	r3,r3,r2
 402cdb4:	880ad07a 	srli	r5,r17,1
 402cdb8:	180497fa 	slli	r2,r3,31
 402cdbc:	8900004c 	andi	r4,r17,1
 402cdc0:	2922b03a 	or	r17,r5,r4
 402cdc4:	1806d07a 	srli	r3,r3,1
 402cdc8:	1462b03a 	or	r17,r2,r17
 402cdcc:	3825883a 	mov	r18,r7
 402cdd0:	003f7106 	br	402cb98 <__flash_rwdata_start+0xffffc884>
 402cdd4:	2984b03a 	or	r2,r5,r6
 402cdd8:	103f6826 	beq	r2,zero,402cb7c <__flash_rwdata_start+0xffffc868>
 402cddc:	39c03fcc 	andi	r7,r7,255
 402cde0:	003f6706 	br	402cb80 <__flash_rwdata_start+0xffffc86c>
 402cde4:	4086b03a 	or	r3,r8,r2
 402cde8:	18015226 	beq	r3,zero,402d334 <__subdf3+0x820>
 402cdec:	00c00434 	movhi	r3,16
 402cdf0:	41400234 	orhi	r5,r8,8
 402cdf4:	18ffffc4 	addi	r3,r3,-1
 402cdf8:	28ca703a 	and	r5,r5,r3
 402cdfc:	003f7e06 	br	402cbf8 <__flash_rwdata_start+0xffffc8e4>
 402ce00:	10bfffc4 	addi	r2,r2,-1
 402ce04:	1000491e 	bne	r2,zero,402cf2c <__subdf3+0x418>
 402ce08:	898fc83a 	sub	r7,r17,r6
 402ce0c:	89e3803a 	cmpltu	r17,r17,r7
 402ce10:	1947c83a 	sub	r3,r3,r5
 402ce14:	1c47c83a 	sub	r3,r3,r17
 402ce18:	3823883a 	mov	r17,r7
 402ce1c:	003f9b06 	br	402cc8c <__flash_rwdata_start+0xffffc978>
 402ce20:	2988b03a 	or	r4,r5,r6
 402ce24:	203f5c26 	beq	r4,zero,402cb98 <__flash_rwdata_start+0xffffc884>
 402ce28:	10bfffc4 	addi	r2,r2,-1
 402ce2c:	1000931e 	bne	r2,zero,402d07c <__subdf3+0x568>
 402ce30:	898d883a 	add	r6,r17,r6
 402ce34:	3463803a 	cmpltu	r17,r6,r17
 402ce38:	1947883a 	add	r3,r3,r5
 402ce3c:	88c7883a 	add	r3,r17,r3
 402ce40:	3023883a 	mov	r17,r6
 402ce44:	003fd306 	br	402cd94 <__flash_rwdata_start+0xffffca80>
 402ce48:	1000541e 	bne	r2,zero,402cf9c <__subdf3+0x488>
 402ce4c:	80800044 	addi	r2,r16,1
 402ce50:	1081ffcc 	andi	r2,r2,2047
 402ce54:	01000044 	movi	r4,1
 402ce58:	2080a20e 	bge	r4,r2,402d0e4 <__subdf3+0x5d0>
 402ce5c:	8989c83a 	sub	r4,r17,r6
 402ce60:	8905803a 	cmpltu	r2,r17,r4
 402ce64:	1967c83a 	sub	r19,r3,r5
 402ce68:	98a7c83a 	sub	r19,r19,r2
 402ce6c:	9880202c 	andhi	r2,r19,128
 402ce70:	10006326 	beq	r2,zero,402d000 <__subdf3+0x4ec>
 402ce74:	3463c83a 	sub	r17,r6,r17
 402ce78:	28c7c83a 	sub	r3,r5,r3
 402ce7c:	344d803a 	cmpltu	r6,r6,r17
 402ce80:	19a7c83a 	sub	r19,r3,r6
 402ce84:	3825883a 	mov	r18,r7
 402ce88:	983f861e 	bne	r19,zero,402cca4 <__flash_rwdata_start+0xffffc990>
 402ce8c:	8809883a 	mov	r4,r17
 402ce90:	402d6140 	call	402d614 <__clzsi2>
 402ce94:	10800804 	addi	r2,r2,32
 402ce98:	113ffe04 	addi	r4,r2,-8
 402ce9c:	00c007c4 	movi	r3,31
 402cea0:	193f850e 	bge	r3,r4,402ccb8 <__flash_rwdata_start+0xffffc9a4>
 402cea4:	10bff604 	addi	r2,r2,-40
 402cea8:	8884983a 	sll	r2,r17,r2
 402ceac:	0023883a 	mov	r17,zero
 402ceb0:	243f880e 	bge	r4,r16,402ccd4 <__flash_rwdata_start+0xffffc9c0>
 402ceb4:	00ffe034 	movhi	r3,65408
 402ceb8:	18ffffc4 	addi	r3,r3,-1
 402cebc:	8121c83a 	sub	r16,r16,r4
 402cec0:	10c6703a 	and	r3,r2,r3
 402cec4:	003f3406 	br	402cb98 <__flash_rwdata_start+0xffffc884>
 402cec8:	9100004c 	andi	r4,r18,1
 402cecc:	000b883a 	mov	r5,zero
 402ced0:	0005883a 	mov	r2,zero
 402ced4:	003f4806 	br	402cbf8 <__flash_rwdata_start+0xffffc8e4>
 402ced8:	298cb03a 	or	r6,r5,r6
 402cedc:	300cc03a 	cmpne	r6,r6,zero
 402cee0:	0005883a 	mov	r2,zero
 402cee4:	003f6406 	br	402cc78 <__flash_rwdata_start+0xffffc964>
 402cee8:	10009a1e 	bne	r2,zero,402d154 <__subdf3+0x640>
 402ceec:	82400044 	addi	r9,r16,1
 402cef0:	4881ffcc 	andi	r2,r9,2047
 402cef4:	02800044 	movi	r10,1
 402cef8:	5080670e 	bge	r10,r2,402d098 <__subdf3+0x584>
 402cefc:	0081ffc4 	movi	r2,2047
 402cf00:	4880af26 	beq	r9,r2,402d1c0 <__subdf3+0x6ac>
 402cf04:	898d883a 	add	r6,r17,r6
 402cf08:	1945883a 	add	r2,r3,r5
 402cf0c:	3447803a 	cmpltu	r3,r6,r17
 402cf10:	1887883a 	add	r3,r3,r2
 402cf14:	182297fa 	slli	r17,r3,31
 402cf18:	300cd07a 	srli	r6,r6,1
 402cf1c:	1806d07a 	srli	r3,r3,1
 402cf20:	4821883a 	mov	r16,r9
 402cf24:	89a2b03a 	or	r17,r17,r6
 402cf28:	003f1b06 	br	402cb98 <__flash_rwdata_start+0xffffc884>
 402cf2c:	0101ffc4 	movi	r4,2047
 402cf30:	813f441e 	bne	r16,r4,402cc44 <__flash_rwdata_start+0xffffc930>
 402cf34:	003f1806 	br	402cb98 <__flash_rwdata_start+0xffffc884>
 402cf38:	843ff844 	addi	r16,r16,-31
 402cf3c:	01400804 	movi	r5,32
 402cf40:	1408d83a 	srl	r4,r2,r16
 402cf44:	19405026 	beq	r3,r5,402d088 <__subdf3+0x574>
 402cf48:	01401004 	movi	r5,64
 402cf4c:	28c7c83a 	sub	r3,r5,r3
 402cf50:	10c4983a 	sll	r2,r2,r3
 402cf54:	88a2b03a 	or	r17,r17,r2
 402cf58:	8822c03a 	cmpne	r17,r17,zero
 402cf5c:	2462b03a 	or	r17,r4,r17
 402cf60:	0007883a 	mov	r3,zero
 402cf64:	0021883a 	mov	r16,zero
 402cf68:	003f6d06 	br	402cd20 <__flash_rwdata_start+0xffffca0c>
 402cf6c:	11fff804 	addi	r7,r2,-32
 402cf70:	01000804 	movi	r4,32
 402cf74:	29ced83a 	srl	r7,r5,r7
 402cf78:	11004526 	beq	r2,r4,402d090 <__subdf3+0x57c>
 402cf7c:	01001004 	movi	r4,64
 402cf80:	2089c83a 	sub	r4,r4,r2
 402cf84:	2904983a 	sll	r2,r5,r4
 402cf88:	118cb03a 	or	r6,r2,r6
 402cf8c:	300cc03a 	cmpne	r6,r6,zero
 402cf90:	398cb03a 	or	r6,r7,r6
 402cf94:	0005883a 	mov	r2,zero
 402cf98:	003f3706 	br	402cc78 <__flash_rwdata_start+0xffffc964>
 402cf9c:	80002a26 	beq	r16,zero,402d048 <__subdf3+0x534>
 402cfa0:	0101ffc4 	movi	r4,2047
 402cfa4:	49006626 	beq	r9,r4,402d140 <__subdf3+0x62c>
 402cfa8:	0085c83a 	sub	r2,zero,r2
 402cfac:	18c02034 	orhi	r3,r3,128
 402cfb0:	01000e04 	movi	r4,56
 402cfb4:	20807e16 	blt	r4,r2,402d1b0 <__subdf3+0x69c>
 402cfb8:	010007c4 	movi	r4,31
 402cfbc:	2080e716 	blt	r4,r2,402d35c <__subdf3+0x848>
 402cfc0:	01000804 	movi	r4,32
 402cfc4:	2089c83a 	sub	r4,r4,r2
 402cfc8:	1914983a 	sll	r10,r3,r4
 402cfcc:	8890d83a 	srl	r8,r17,r2
 402cfd0:	8908983a 	sll	r4,r17,r4
 402cfd4:	1884d83a 	srl	r2,r3,r2
 402cfd8:	5222b03a 	or	r17,r10,r8
 402cfdc:	2006c03a 	cmpne	r3,r4,zero
 402cfe0:	88e2b03a 	or	r17,r17,r3
 402cfe4:	3463c83a 	sub	r17,r6,r17
 402cfe8:	2885c83a 	sub	r2,r5,r2
 402cfec:	344d803a 	cmpltu	r6,r6,r17
 402cff0:	1187c83a 	sub	r3,r2,r6
 402cff4:	4821883a 	mov	r16,r9
 402cff8:	3825883a 	mov	r18,r7
 402cffc:	003f2306 	br	402cc8c <__flash_rwdata_start+0xffffc978>
 402d000:	24d0b03a 	or	r8,r4,r19
 402d004:	40001b1e 	bne	r8,zero,402d074 <__subdf3+0x560>
 402d008:	0005883a 	mov	r2,zero
 402d00c:	0009883a 	mov	r4,zero
 402d010:	0021883a 	mov	r16,zero
 402d014:	003f4906 	br	402cd3c <__flash_rwdata_start+0xffffca28>
 402d018:	010007c4 	movi	r4,31
 402d01c:	20803a16 	blt	r4,r2,402d108 <__subdf3+0x5f4>
 402d020:	01000804 	movi	r4,32
 402d024:	2089c83a 	sub	r4,r4,r2
 402d028:	2912983a 	sll	r9,r5,r4
 402d02c:	3090d83a 	srl	r8,r6,r2
 402d030:	3108983a 	sll	r4,r6,r4
 402d034:	2884d83a 	srl	r2,r5,r2
 402d038:	4a12b03a 	or	r9,r9,r8
 402d03c:	2008c03a 	cmpne	r4,r4,zero
 402d040:	4912b03a 	or	r9,r9,r4
 402d044:	003f4e06 	br	402cd80 <__flash_rwdata_start+0xffffca6c>
 402d048:	1c48b03a 	or	r4,r3,r17
 402d04c:	20003c26 	beq	r4,zero,402d140 <__subdf3+0x62c>
 402d050:	0084303a 	nor	r2,zero,r2
 402d054:	1000381e 	bne	r2,zero,402d138 <__subdf3+0x624>
 402d058:	3463c83a 	sub	r17,r6,r17
 402d05c:	28c5c83a 	sub	r2,r5,r3
 402d060:	344d803a 	cmpltu	r6,r6,r17
 402d064:	1187c83a 	sub	r3,r2,r6
 402d068:	4821883a 	mov	r16,r9
 402d06c:	3825883a 	mov	r18,r7
 402d070:	003f0606 	br	402cc8c <__flash_rwdata_start+0xffffc978>
 402d074:	2023883a 	mov	r17,r4
 402d078:	003f0906 	br	402cca0 <__flash_rwdata_start+0xffffc98c>
 402d07c:	0101ffc4 	movi	r4,2047
 402d080:	813f3a1e 	bne	r16,r4,402cd6c <__flash_rwdata_start+0xffffca58>
 402d084:	003ec406 	br	402cb98 <__flash_rwdata_start+0xffffc884>
 402d088:	0005883a 	mov	r2,zero
 402d08c:	003fb106 	br	402cf54 <__flash_rwdata_start+0xffffcc40>
 402d090:	0005883a 	mov	r2,zero
 402d094:	003fbc06 	br	402cf88 <__flash_rwdata_start+0xffffcc74>
 402d098:	1c44b03a 	or	r2,r3,r17
 402d09c:	80008e1e 	bne	r16,zero,402d2d8 <__subdf3+0x7c4>
 402d0a0:	1000c826 	beq	r2,zero,402d3c4 <__subdf3+0x8b0>
 402d0a4:	2984b03a 	or	r2,r5,r6
 402d0a8:	103ebb26 	beq	r2,zero,402cb98 <__flash_rwdata_start+0xffffc884>
 402d0ac:	8989883a 	add	r4,r17,r6
 402d0b0:	1945883a 	add	r2,r3,r5
 402d0b4:	2447803a 	cmpltu	r3,r4,r17
 402d0b8:	1887883a 	add	r3,r3,r2
 402d0bc:	1880202c 	andhi	r2,r3,128
 402d0c0:	2023883a 	mov	r17,r4
 402d0c4:	103f1626 	beq	r2,zero,402cd20 <__flash_rwdata_start+0xffffca0c>
 402d0c8:	00bfe034 	movhi	r2,65408
 402d0cc:	10bfffc4 	addi	r2,r2,-1
 402d0d0:	5021883a 	mov	r16,r10
 402d0d4:	1886703a 	and	r3,r3,r2
 402d0d8:	003eaf06 	br	402cb98 <__flash_rwdata_start+0xffffc884>
 402d0dc:	3825883a 	mov	r18,r7
 402d0e0:	003f0f06 	br	402cd20 <__flash_rwdata_start+0xffffca0c>
 402d0e4:	1c44b03a 	or	r2,r3,r17
 402d0e8:	8000251e 	bne	r16,zero,402d180 <__subdf3+0x66c>
 402d0ec:	1000661e 	bne	r2,zero,402d288 <__subdf3+0x774>
 402d0f0:	2990b03a 	or	r8,r5,r6
 402d0f4:	40009626 	beq	r8,zero,402d350 <__subdf3+0x83c>
 402d0f8:	2807883a 	mov	r3,r5
 402d0fc:	3023883a 	mov	r17,r6
 402d100:	3825883a 	mov	r18,r7
 402d104:	003ea406 	br	402cb98 <__flash_rwdata_start+0xffffc884>
 402d108:	127ff804 	addi	r9,r2,-32
 402d10c:	01000804 	movi	r4,32
 402d110:	2a52d83a 	srl	r9,r5,r9
 402d114:	11008c26 	beq	r2,r4,402d348 <__subdf3+0x834>
 402d118:	01001004 	movi	r4,64
 402d11c:	2085c83a 	sub	r2,r4,r2
 402d120:	2884983a 	sll	r2,r5,r2
 402d124:	118cb03a 	or	r6,r2,r6
 402d128:	300cc03a 	cmpne	r6,r6,zero
 402d12c:	4992b03a 	or	r9,r9,r6
 402d130:	0005883a 	mov	r2,zero
 402d134:	003f1206 	br	402cd80 <__flash_rwdata_start+0xffffca6c>
 402d138:	0101ffc4 	movi	r4,2047
 402d13c:	493f9c1e 	bne	r9,r4,402cfb0 <__flash_rwdata_start+0xffffcc9c>
 402d140:	2807883a 	mov	r3,r5
 402d144:	3023883a 	mov	r17,r6
 402d148:	4821883a 	mov	r16,r9
 402d14c:	3825883a 	mov	r18,r7
 402d150:	003e9106 	br	402cb98 <__flash_rwdata_start+0xffffc884>
 402d154:	80001f1e 	bne	r16,zero,402d1d4 <__subdf3+0x6c0>
 402d158:	1c48b03a 	or	r4,r3,r17
 402d15c:	20005a26 	beq	r4,zero,402d2c8 <__subdf3+0x7b4>
 402d160:	0084303a 	nor	r2,zero,r2
 402d164:	1000561e 	bne	r2,zero,402d2c0 <__subdf3+0x7ac>
 402d168:	89a3883a 	add	r17,r17,r6
 402d16c:	1945883a 	add	r2,r3,r5
 402d170:	898d803a 	cmpltu	r6,r17,r6
 402d174:	3087883a 	add	r3,r6,r2
 402d178:	4821883a 	mov	r16,r9
 402d17c:	003f0506 	br	402cd94 <__flash_rwdata_start+0xffffca80>
 402d180:	10002b1e 	bne	r2,zero,402d230 <__subdf3+0x71c>
 402d184:	2984b03a 	or	r2,r5,r6
 402d188:	10008026 	beq	r2,zero,402d38c <__subdf3+0x878>
 402d18c:	2807883a 	mov	r3,r5
 402d190:	3023883a 	mov	r17,r6
 402d194:	3825883a 	mov	r18,r7
 402d198:	0401ffc4 	movi	r16,2047
 402d19c:	003e7e06 	br	402cb98 <__flash_rwdata_start+0xffffc884>
 402d1a0:	3809883a 	mov	r4,r7
 402d1a4:	0011883a 	mov	r8,zero
 402d1a8:	0005883a 	mov	r2,zero
 402d1ac:	003ee306 	br	402cd3c <__flash_rwdata_start+0xffffca28>
 402d1b0:	1c62b03a 	or	r17,r3,r17
 402d1b4:	8822c03a 	cmpne	r17,r17,zero
 402d1b8:	0005883a 	mov	r2,zero
 402d1bc:	003f8906 	br	402cfe4 <__flash_rwdata_start+0xffffccd0>
 402d1c0:	3809883a 	mov	r4,r7
 402d1c4:	4821883a 	mov	r16,r9
 402d1c8:	0011883a 	mov	r8,zero
 402d1cc:	0005883a 	mov	r2,zero
 402d1d0:	003eda06 	br	402cd3c <__flash_rwdata_start+0xffffca28>
 402d1d4:	0101ffc4 	movi	r4,2047
 402d1d8:	49003b26 	beq	r9,r4,402d2c8 <__subdf3+0x7b4>
 402d1dc:	0085c83a 	sub	r2,zero,r2
 402d1e0:	18c02034 	orhi	r3,r3,128
 402d1e4:	01000e04 	movi	r4,56
 402d1e8:	20806e16 	blt	r4,r2,402d3a4 <__subdf3+0x890>
 402d1ec:	010007c4 	movi	r4,31
 402d1f0:	20807716 	blt	r4,r2,402d3d0 <__subdf3+0x8bc>
 402d1f4:	01000804 	movi	r4,32
 402d1f8:	2089c83a 	sub	r4,r4,r2
 402d1fc:	1914983a 	sll	r10,r3,r4
 402d200:	8890d83a 	srl	r8,r17,r2
 402d204:	8908983a 	sll	r4,r17,r4
 402d208:	1884d83a 	srl	r2,r3,r2
 402d20c:	5222b03a 	or	r17,r10,r8
 402d210:	2006c03a 	cmpne	r3,r4,zero
 402d214:	88e2b03a 	or	r17,r17,r3
 402d218:	89a3883a 	add	r17,r17,r6
 402d21c:	1145883a 	add	r2,r2,r5
 402d220:	898d803a 	cmpltu	r6,r17,r6
 402d224:	3087883a 	add	r3,r6,r2
 402d228:	4821883a 	mov	r16,r9
 402d22c:	003ed906 	br	402cd94 <__flash_rwdata_start+0xffffca80>
 402d230:	2984b03a 	or	r2,r5,r6
 402d234:	10004226 	beq	r2,zero,402d340 <__subdf3+0x82c>
 402d238:	1808d0fa 	srli	r4,r3,3
 402d23c:	8822d0fa 	srli	r17,r17,3
 402d240:	1806977a 	slli	r3,r3,29
 402d244:	2080022c 	andhi	r2,r4,8
 402d248:	1c62b03a 	or	r17,r3,r17
 402d24c:	10000826 	beq	r2,zero,402d270 <__subdf3+0x75c>
 402d250:	2812d0fa 	srli	r9,r5,3
 402d254:	4880022c 	andhi	r2,r9,8
 402d258:	1000051e 	bne	r2,zero,402d270 <__subdf3+0x75c>
 402d25c:	300cd0fa 	srli	r6,r6,3
 402d260:	2804977a 	slli	r2,r5,29
 402d264:	4809883a 	mov	r4,r9
 402d268:	3825883a 	mov	r18,r7
 402d26c:	11a2b03a 	or	r17,r2,r6
 402d270:	8806d77a 	srli	r3,r17,29
 402d274:	200890fa 	slli	r4,r4,3
 402d278:	882290fa 	slli	r17,r17,3
 402d27c:	0401ffc4 	movi	r16,2047
 402d280:	1906b03a 	or	r3,r3,r4
 402d284:	003e4406 	br	402cb98 <__flash_rwdata_start+0xffffc884>
 402d288:	2984b03a 	or	r2,r5,r6
 402d28c:	103e4226 	beq	r2,zero,402cb98 <__flash_rwdata_start+0xffffc884>
 402d290:	8989c83a 	sub	r4,r17,r6
 402d294:	8911803a 	cmpltu	r8,r17,r4
 402d298:	1945c83a 	sub	r2,r3,r5
 402d29c:	1205c83a 	sub	r2,r2,r8
 402d2a0:	1200202c 	andhi	r8,r2,128
 402d2a4:	403e9a26 	beq	r8,zero,402cd10 <__flash_rwdata_start+0xffffc9fc>
 402d2a8:	3463c83a 	sub	r17,r6,r17
 402d2ac:	28c5c83a 	sub	r2,r5,r3
 402d2b0:	344d803a 	cmpltu	r6,r6,r17
 402d2b4:	1187c83a 	sub	r3,r2,r6
 402d2b8:	3825883a 	mov	r18,r7
 402d2bc:	003e3606 	br	402cb98 <__flash_rwdata_start+0xffffc884>
 402d2c0:	0101ffc4 	movi	r4,2047
 402d2c4:	493fc71e 	bne	r9,r4,402d1e4 <__flash_rwdata_start+0xffffced0>
 402d2c8:	2807883a 	mov	r3,r5
 402d2cc:	3023883a 	mov	r17,r6
 402d2d0:	4821883a 	mov	r16,r9
 402d2d4:	003e3006 	br	402cb98 <__flash_rwdata_start+0xffffc884>
 402d2d8:	10003626 	beq	r2,zero,402d3b4 <__subdf3+0x8a0>
 402d2dc:	2984b03a 	or	r2,r5,r6
 402d2e0:	10001726 	beq	r2,zero,402d340 <__subdf3+0x82c>
 402d2e4:	1808d0fa 	srli	r4,r3,3
 402d2e8:	8822d0fa 	srli	r17,r17,3
 402d2ec:	1806977a 	slli	r3,r3,29
 402d2f0:	2080022c 	andhi	r2,r4,8
 402d2f4:	1c62b03a 	or	r17,r3,r17
 402d2f8:	10000726 	beq	r2,zero,402d318 <__subdf3+0x804>
 402d2fc:	2812d0fa 	srli	r9,r5,3
 402d300:	4880022c 	andhi	r2,r9,8
 402d304:	1000041e 	bne	r2,zero,402d318 <__subdf3+0x804>
 402d308:	300cd0fa 	srli	r6,r6,3
 402d30c:	2804977a 	slli	r2,r5,29
 402d310:	4809883a 	mov	r4,r9
 402d314:	11a2b03a 	or	r17,r2,r6
 402d318:	8806d77a 	srli	r3,r17,29
 402d31c:	200890fa 	slli	r4,r4,3
 402d320:	882290fa 	slli	r17,r17,3
 402d324:	3825883a 	mov	r18,r7
 402d328:	1906b03a 	or	r3,r3,r4
 402d32c:	0401ffc4 	movi	r16,2047
 402d330:	003e1906 	br	402cb98 <__flash_rwdata_start+0xffffc884>
 402d334:	000b883a 	mov	r5,zero
 402d338:	0005883a 	mov	r2,zero
 402d33c:	003e2e06 	br	402cbf8 <__flash_rwdata_start+0xffffc8e4>
 402d340:	0401ffc4 	movi	r16,2047
 402d344:	003e1406 	br	402cb98 <__flash_rwdata_start+0xffffc884>
 402d348:	0005883a 	mov	r2,zero
 402d34c:	003f7506 	br	402d124 <__flash_rwdata_start+0xffffce10>
 402d350:	0005883a 	mov	r2,zero
 402d354:	0009883a 	mov	r4,zero
 402d358:	003e7806 	br	402cd3c <__flash_rwdata_start+0xffffca28>
 402d35c:	123ff804 	addi	r8,r2,-32
 402d360:	01000804 	movi	r4,32
 402d364:	1a10d83a 	srl	r8,r3,r8
 402d368:	11002526 	beq	r2,r4,402d400 <__subdf3+0x8ec>
 402d36c:	01001004 	movi	r4,64
 402d370:	2085c83a 	sub	r2,r4,r2
 402d374:	1884983a 	sll	r2,r3,r2
 402d378:	1444b03a 	or	r2,r2,r17
 402d37c:	1004c03a 	cmpne	r2,r2,zero
 402d380:	40a2b03a 	or	r17,r8,r2
 402d384:	0005883a 	mov	r2,zero
 402d388:	003f1606 	br	402cfe4 <__flash_rwdata_start+0xffffccd0>
 402d38c:	02000434 	movhi	r8,16
 402d390:	0009883a 	mov	r4,zero
 402d394:	423fffc4 	addi	r8,r8,-1
 402d398:	00bfffc4 	movi	r2,-1
 402d39c:	0401ffc4 	movi	r16,2047
 402d3a0:	003e6606 	br	402cd3c <__flash_rwdata_start+0xffffca28>
 402d3a4:	1c62b03a 	or	r17,r3,r17
 402d3a8:	8822c03a 	cmpne	r17,r17,zero
 402d3ac:	0005883a 	mov	r2,zero
 402d3b0:	003f9906 	br	402d218 <__flash_rwdata_start+0xffffcf04>
 402d3b4:	2807883a 	mov	r3,r5
 402d3b8:	3023883a 	mov	r17,r6
 402d3bc:	0401ffc4 	movi	r16,2047
 402d3c0:	003df506 	br	402cb98 <__flash_rwdata_start+0xffffc884>
 402d3c4:	2807883a 	mov	r3,r5
 402d3c8:	3023883a 	mov	r17,r6
 402d3cc:	003df206 	br	402cb98 <__flash_rwdata_start+0xffffc884>
 402d3d0:	123ff804 	addi	r8,r2,-32
 402d3d4:	01000804 	movi	r4,32
 402d3d8:	1a10d83a 	srl	r8,r3,r8
 402d3dc:	11000a26 	beq	r2,r4,402d408 <__subdf3+0x8f4>
 402d3e0:	01001004 	movi	r4,64
 402d3e4:	2085c83a 	sub	r2,r4,r2
 402d3e8:	1884983a 	sll	r2,r3,r2
 402d3ec:	1444b03a 	or	r2,r2,r17
 402d3f0:	1004c03a 	cmpne	r2,r2,zero
 402d3f4:	40a2b03a 	or	r17,r8,r2
 402d3f8:	0005883a 	mov	r2,zero
 402d3fc:	003f8606 	br	402d218 <__flash_rwdata_start+0xffffcf04>
 402d400:	0005883a 	mov	r2,zero
 402d404:	003fdc06 	br	402d378 <__flash_rwdata_start+0xffffd064>
 402d408:	0005883a 	mov	r2,zero
 402d40c:	003ff706 	br	402d3ec <__flash_rwdata_start+0xffffd0d8>

0402d410 <__fixdfsi>:
 402d410:	280cd53a 	srli	r6,r5,20
 402d414:	00c00434 	movhi	r3,16
 402d418:	18ffffc4 	addi	r3,r3,-1
 402d41c:	3181ffcc 	andi	r6,r6,2047
 402d420:	01c0ff84 	movi	r7,1022
 402d424:	28c6703a 	and	r3,r5,r3
 402d428:	280ad7fa 	srli	r5,r5,31
 402d42c:	3980120e 	bge	r7,r6,402d478 <__fixdfsi+0x68>
 402d430:	00810744 	movi	r2,1053
 402d434:	11800c16 	blt	r2,r6,402d468 <__fixdfsi+0x58>
 402d438:	00810cc4 	movi	r2,1075
 402d43c:	1185c83a 	sub	r2,r2,r6
 402d440:	01c007c4 	movi	r7,31
 402d444:	18c00434 	orhi	r3,r3,16
 402d448:	38800d16 	blt	r7,r2,402d480 <__fixdfsi+0x70>
 402d44c:	31befb44 	addi	r6,r6,-1043
 402d450:	2084d83a 	srl	r2,r4,r2
 402d454:	1986983a 	sll	r3,r3,r6
 402d458:	1884b03a 	or	r2,r3,r2
 402d45c:	28000726 	beq	r5,zero,402d47c <__fixdfsi+0x6c>
 402d460:	0085c83a 	sub	r2,zero,r2
 402d464:	f800283a 	ret
 402d468:	00a00034 	movhi	r2,32768
 402d46c:	10bfffc4 	addi	r2,r2,-1
 402d470:	2885883a 	add	r2,r5,r2
 402d474:	f800283a 	ret
 402d478:	0005883a 	mov	r2,zero
 402d47c:	f800283a 	ret
 402d480:	008104c4 	movi	r2,1043
 402d484:	1185c83a 	sub	r2,r2,r6
 402d488:	1884d83a 	srl	r2,r3,r2
 402d48c:	003ff306 	br	402d45c <__flash_rwdata_start+0xffffd148>

0402d490 <__floatsidf>:
 402d490:	defffd04 	addi	sp,sp,-12
 402d494:	dfc00215 	stw	ra,8(sp)
 402d498:	dc400115 	stw	r17,4(sp)
 402d49c:	dc000015 	stw	r16,0(sp)
 402d4a0:	20002b26 	beq	r4,zero,402d550 <__floatsidf+0xc0>
 402d4a4:	2023883a 	mov	r17,r4
 402d4a8:	2020d7fa 	srli	r16,r4,31
 402d4ac:	20002d16 	blt	r4,zero,402d564 <__floatsidf+0xd4>
 402d4b0:	8809883a 	mov	r4,r17
 402d4b4:	402d6140 	call	402d614 <__clzsi2>
 402d4b8:	01410784 	movi	r5,1054
 402d4bc:	288bc83a 	sub	r5,r5,r2
 402d4c0:	01010cc4 	movi	r4,1075
 402d4c4:	2149c83a 	sub	r4,r4,r5
 402d4c8:	00c007c4 	movi	r3,31
 402d4cc:	1900160e 	bge	r3,r4,402d528 <__floatsidf+0x98>
 402d4d0:	00c104c4 	movi	r3,1043
 402d4d4:	1947c83a 	sub	r3,r3,r5
 402d4d8:	88c6983a 	sll	r3,r17,r3
 402d4dc:	00800434 	movhi	r2,16
 402d4e0:	10bfffc4 	addi	r2,r2,-1
 402d4e4:	1886703a 	and	r3,r3,r2
 402d4e8:	2941ffcc 	andi	r5,r5,2047
 402d4ec:	800d883a 	mov	r6,r16
 402d4f0:	0005883a 	mov	r2,zero
 402d4f4:	280a953a 	slli	r5,r5,20
 402d4f8:	31803fcc 	andi	r6,r6,255
 402d4fc:	01000434 	movhi	r4,16
 402d500:	300c97fa 	slli	r6,r6,31
 402d504:	213fffc4 	addi	r4,r4,-1
 402d508:	1906703a 	and	r3,r3,r4
 402d50c:	1946b03a 	or	r3,r3,r5
 402d510:	1986b03a 	or	r3,r3,r6
 402d514:	dfc00217 	ldw	ra,8(sp)
 402d518:	dc400117 	ldw	r17,4(sp)
 402d51c:	dc000017 	ldw	r16,0(sp)
 402d520:	dec00304 	addi	sp,sp,12
 402d524:	f800283a 	ret
 402d528:	00c002c4 	movi	r3,11
 402d52c:	1887c83a 	sub	r3,r3,r2
 402d530:	88c6d83a 	srl	r3,r17,r3
 402d534:	8904983a 	sll	r2,r17,r4
 402d538:	01000434 	movhi	r4,16
 402d53c:	213fffc4 	addi	r4,r4,-1
 402d540:	2941ffcc 	andi	r5,r5,2047
 402d544:	1906703a 	and	r3,r3,r4
 402d548:	800d883a 	mov	r6,r16
 402d54c:	003fe906 	br	402d4f4 <__flash_rwdata_start+0xffffd1e0>
 402d550:	000d883a 	mov	r6,zero
 402d554:	000b883a 	mov	r5,zero
 402d558:	0007883a 	mov	r3,zero
 402d55c:	0005883a 	mov	r2,zero
 402d560:	003fe406 	br	402d4f4 <__flash_rwdata_start+0xffffd1e0>
 402d564:	0123c83a 	sub	r17,zero,r4
 402d568:	003fd106 	br	402d4b0 <__flash_rwdata_start+0xffffd19c>

0402d56c <__floatunsidf>:
 402d56c:	defffe04 	addi	sp,sp,-8
 402d570:	dc000015 	stw	r16,0(sp)
 402d574:	dfc00115 	stw	ra,4(sp)
 402d578:	2021883a 	mov	r16,r4
 402d57c:	20002226 	beq	r4,zero,402d608 <__floatunsidf+0x9c>
 402d580:	402d6140 	call	402d614 <__clzsi2>
 402d584:	01010784 	movi	r4,1054
 402d588:	2089c83a 	sub	r4,r4,r2
 402d58c:	01810cc4 	movi	r6,1075
 402d590:	310dc83a 	sub	r6,r6,r4
 402d594:	00c007c4 	movi	r3,31
 402d598:	1980120e 	bge	r3,r6,402d5e4 <__floatunsidf+0x78>
 402d59c:	00c104c4 	movi	r3,1043
 402d5a0:	1907c83a 	sub	r3,r3,r4
 402d5a4:	80ca983a 	sll	r5,r16,r3
 402d5a8:	00800434 	movhi	r2,16
 402d5ac:	10bfffc4 	addi	r2,r2,-1
 402d5b0:	2101ffcc 	andi	r4,r4,2047
 402d5b4:	0021883a 	mov	r16,zero
 402d5b8:	288a703a 	and	r5,r5,r2
 402d5bc:	2008953a 	slli	r4,r4,20
 402d5c0:	00c00434 	movhi	r3,16
 402d5c4:	18ffffc4 	addi	r3,r3,-1
 402d5c8:	28c6703a 	and	r3,r5,r3
 402d5cc:	8005883a 	mov	r2,r16
 402d5d0:	1906b03a 	or	r3,r3,r4
 402d5d4:	dfc00117 	ldw	ra,4(sp)
 402d5d8:	dc000017 	ldw	r16,0(sp)
 402d5dc:	dec00204 	addi	sp,sp,8
 402d5e0:	f800283a 	ret
 402d5e4:	00c002c4 	movi	r3,11
 402d5e8:	188bc83a 	sub	r5,r3,r2
 402d5ec:	814ad83a 	srl	r5,r16,r5
 402d5f0:	00c00434 	movhi	r3,16
 402d5f4:	18ffffc4 	addi	r3,r3,-1
 402d5f8:	81a0983a 	sll	r16,r16,r6
 402d5fc:	2101ffcc 	andi	r4,r4,2047
 402d600:	28ca703a 	and	r5,r5,r3
 402d604:	003fed06 	br	402d5bc <__flash_rwdata_start+0xffffd2a8>
 402d608:	0009883a 	mov	r4,zero
 402d60c:	000b883a 	mov	r5,zero
 402d610:	003fea06 	br	402d5bc <__flash_rwdata_start+0xffffd2a8>

0402d614 <__clzsi2>:
 402d614:	00bfffd4 	movui	r2,65535
 402d618:	11000536 	bltu	r2,r4,402d630 <__clzsi2+0x1c>
 402d61c:	00803fc4 	movi	r2,255
 402d620:	11000f36 	bltu	r2,r4,402d660 <__clzsi2+0x4c>
 402d624:	00800804 	movi	r2,32
 402d628:	0007883a 	mov	r3,zero
 402d62c:	00000506 	br	402d644 <__clzsi2+0x30>
 402d630:	00804034 	movhi	r2,256
 402d634:	10bfffc4 	addi	r2,r2,-1
 402d638:	11000c2e 	bgeu	r2,r4,402d66c <__clzsi2+0x58>
 402d63c:	00800204 	movi	r2,8
 402d640:	00c00604 	movi	r3,24
 402d644:	20c8d83a 	srl	r4,r4,r3
 402d648:	00c00034 	movhi	r3,0
 402d64c:	18c08404 	addi	r3,r3,528
 402d650:	1909883a 	add	r4,r3,r4
 402d654:	20c00003 	ldbu	r3,0(r4)
 402d658:	10c5c83a 	sub	r2,r2,r3
 402d65c:	f800283a 	ret
 402d660:	00800604 	movi	r2,24
 402d664:	00c00204 	movi	r3,8
 402d668:	003ff606 	br	402d644 <__flash_rwdata_start+0xffffd330>
 402d66c:	00800404 	movi	r2,16
 402d670:	1007883a 	mov	r3,r2
 402d674:	003ff306 	br	402d644 <__flash_rwdata_start+0xffffd330>

0402d678 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402d678:	defffe04 	addi	sp,sp,-8
 402d67c:	dfc00115 	stw	ra,4(sp)
 402d680:	df000015 	stw	fp,0(sp)
 402d684:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402d688:	d0a00b17 	ldw	r2,-32724(gp)
 402d68c:	10000326 	beq	r2,zero,402d69c <alt_get_errno+0x24>
 402d690:	d0a00b17 	ldw	r2,-32724(gp)
 402d694:	103ee83a 	callr	r2
 402d698:	00000106 	br	402d6a0 <alt_get_errno+0x28>
 402d69c:	d0a01704 	addi	r2,gp,-32676
}
 402d6a0:	e037883a 	mov	sp,fp
 402d6a4:	dfc00117 	ldw	ra,4(sp)
 402d6a8:	df000017 	ldw	fp,0(sp)
 402d6ac:	dec00204 	addi	sp,sp,8
 402d6b0:	f800283a 	ret

0402d6b4 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 402d6b4:	defffb04 	addi	sp,sp,-20
 402d6b8:	dfc00415 	stw	ra,16(sp)
 402d6bc:	df000315 	stw	fp,12(sp)
 402d6c0:	df000304 	addi	fp,sp,12
 402d6c4:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 402d6c8:	e0bfff17 	ldw	r2,-4(fp)
 402d6cc:	10000816 	blt	r2,zero,402d6f0 <close+0x3c>
 402d6d0:	01400304 	movi	r5,12
 402d6d4:	e13fff17 	ldw	r4,-4(fp)
 402d6d8:	40208380 	call	4020838 <__mulsi3>
 402d6dc:	1007883a 	mov	r3,r2
 402d6e0:	00800034 	movhi	r2,0
 402d6e4:	10830704 	addi	r2,r2,3100
 402d6e8:	1885883a 	add	r2,r3,r2
 402d6ec:	00000106 	br	402d6f4 <close+0x40>
 402d6f0:	0005883a 	mov	r2,zero
 402d6f4:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 402d6f8:	e0bffd17 	ldw	r2,-12(fp)
 402d6fc:	10001926 	beq	r2,zero,402d764 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 402d700:	e0bffd17 	ldw	r2,-12(fp)
 402d704:	10800017 	ldw	r2,0(r2)
 402d708:	10800417 	ldw	r2,16(r2)
 402d70c:	10000626 	beq	r2,zero,402d728 <close+0x74>
 402d710:	e0bffd17 	ldw	r2,-12(fp)
 402d714:	10800017 	ldw	r2,0(r2)
 402d718:	10800417 	ldw	r2,16(r2)
 402d71c:	e13ffd17 	ldw	r4,-12(fp)
 402d720:	103ee83a 	callr	r2
 402d724:	00000106 	br	402d72c <close+0x78>
 402d728:	0005883a 	mov	r2,zero
 402d72c:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 402d730:	e13fff17 	ldw	r4,-4(fp)
 402d734:	402dd9c0 	call	402dd9c <alt_release_fd>
    if (rval < 0)
 402d738:	e0bffe17 	ldw	r2,-8(fp)
 402d73c:	1000070e 	bge	r2,zero,402d75c <close+0xa8>
    {
      ALT_ERRNO = -rval;
 402d740:	402d6780 	call	402d678 <alt_get_errno>
 402d744:	1007883a 	mov	r3,r2
 402d748:	e0bffe17 	ldw	r2,-8(fp)
 402d74c:	0085c83a 	sub	r2,zero,r2
 402d750:	18800015 	stw	r2,0(r3)
      return -1;
 402d754:	00bfffc4 	movi	r2,-1
 402d758:	00000706 	br	402d778 <close+0xc4>
    }
    return 0;
 402d75c:	0005883a 	mov	r2,zero
 402d760:	00000506 	br	402d778 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 402d764:	402d6780 	call	402d678 <alt_get_errno>
 402d768:	1007883a 	mov	r3,r2
 402d76c:	00801444 	movi	r2,81
 402d770:	18800015 	stw	r2,0(r3)
    return -1;
 402d774:	00bfffc4 	movi	r2,-1
  }
}
 402d778:	e037883a 	mov	sp,fp
 402d77c:	dfc00117 	ldw	ra,4(sp)
 402d780:	df000017 	ldw	fp,0(sp)
 402d784:	dec00204 	addi	sp,sp,8
 402d788:	f800283a 	ret

0402d78c <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 402d78c:	defffc04 	addi	sp,sp,-16
 402d790:	df000315 	stw	fp,12(sp)
 402d794:	df000304 	addi	fp,sp,12
 402d798:	e13ffd15 	stw	r4,-12(fp)
 402d79c:	e17ffe15 	stw	r5,-8(fp)
 402d7a0:	e1bfff15 	stw	r6,-4(fp)
  return len;
 402d7a4:	e0bfff17 	ldw	r2,-4(fp)
}
 402d7a8:	e037883a 	mov	sp,fp
 402d7ac:	df000017 	ldw	fp,0(sp)
 402d7b0:	dec00104 	addi	sp,sp,4
 402d7b4:	f800283a 	ret

0402d7b8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402d7b8:	defffe04 	addi	sp,sp,-8
 402d7bc:	dfc00115 	stw	ra,4(sp)
 402d7c0:	df000015 	stw	fp,0(sp)
 402d7c4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402d7c8:	d0a00b17 	ldw	r2,-32724(gp)
 402d7cc:	10000326 	beq	r2,zero,402d7dc <alt_get_errno+0x24>
 402d7d0:	d0a00b17 	ldw	r2,-32724(gp)
 402d7d4:	103ee83a 	callr	r2
 402d7d8:	00000106 	br	402d7e0 <alt_get_errno+0x28>
 402d7dc:	d0a01704 	addi	r2,gp,-32676
}
 402d7e0:	e037883a 	mov	sp,fp
 402d7e4:	dfc00117 	ldw	ra,4(sp)
 402d7e8:	df000017 	ldw	fp,0(sp)
 402d7ec:	dec00204 	addi	sp,sp,8
 402d7f0:	f800283a 	ret

0402d7f4 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 402d7f4:	defffb04 	addi	sp,sp,-20
 402d7f8:	dfc00415 	stw	ra,16(sp)
 402d7fc:	df000315 	stw	fp,12(sp)
 402d800:	df000304 	addi	fp,sp,12
 402d804:	e13ffe15 	stw	r4,-8(fp)
 402d808:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 402d80c:	e0bffe17 	ldw	r2,-8(fp)
 402d810:	10000816 	blt	r2,zero,402d834 <fstat+0x40>
 402d814:	01400304 	movi	r5,12
 402d818:	e13ffe17 	ldw	r4,-8(fp)
 402d81c:	40208380 	call	4020838 <__mulsi3>
 402d820:	1007883a 	mov	r3,r2
 402d824:	00800034 	movhi	r2,0
 402d828:	10830704 	addi	r2,r2,3100
 402d82c:	1885883a 	add	r2,r3,r2
 402d830:	00000106 	br	402d838 <fstat+0x44>
 402d834:	0005883a 	mov	r2,zero
 402d838:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 402d83c:	e0bffd17 	ldw	r2,-12(fp)
 402d840:	10001026 	beq	r2,zero,402d884 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 402d844:	e0bffd17 	ldw	r2,-12(fp)
 402d848:	10800017 	ldw	r2,0(r2)
 402d84c:	10800817 	ldw	r2,32(r2)
 402d850:	10000726 	beq	r2,zero,402d870 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
 402d854:	e0bffd17 	ldw	r2,-12(fp)
 402d858:	10800017 	ldw	r2,0(r2)
 402d85c:	10800817 	ldw	r2,32(r2)
 402d860:	e17fff17 	ldw	r5,-4(fp)
 402d864:	e13ffd17 	ldw	r4,-12(fp)
 402d868:	103ee83a 	callr	r2
 402d86c:	00000a06 	br	402d898 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 402d870:	e0bfff17 	ldw	r2,-4(fp)
 402d874:	00c80004 	movi	r3,8192
 402d878:	10c00115 	stw	r3,4(r2)
      return 0;
 402d87c:	0005883a 	mov	r2,zero
 402d880:	00000506 	br	402d898 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 402d884:	402d7b80 	call	402d7b8 <alt_get_errno>
 402d888:	1007883a 	mov	r3,r2
 402d88c:	00801444 	movi	r2,81
 402d890:	18800015 	stw	r2,0(r3)
    return -1;
 402d894:	00bfffc4 	movi	r2,-1
  }
}
 402d898:	e037883a 	mov	sp,fp
 402d89c:	dfc00117 	ldw	ra,4(sp)
 402d8a0:	df000017 	ldw	fp,0(sp)
 402d8a4:	dec00204 	addi	sp,sp,8
 402d8a8:	f800283a 	ret

0402d8ac <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402d8ac:	defffe04 	addi	sp,sp,-8
 402d8b0:	dfc00115 	stw	ra,4(sp)
 402d8b4:	df000015 	stw	fp,0(sp)
 402d8b8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402d8bc:	d0a00b17 	ldw	r2,-32724(gp)
 402d8c0:	10000326 	beq	r2,zero,402d8d0 <alt_get_errno+0x24>
 402d8c4:	d0a00b17 	ldw	r2,-32724(gp)
 402d8c8:	103ee83a 	callr	r2
 402d8cc:	00000106 	br	402d8d4 <alt_get_errno+0x28>
 402d8d0:	d0a01704 	addi	r2,gp,-32676
}
 402d8d4:	e037883a 	mov	sp,fp
 402d8d8:	dfc00117 	ldw	ra,4(sp)
 402d8dc:	df000017 	ldw	fp,0(sp)
 402d8e0:	dec00204 	addi	sp,sp,8
 402d8e4:	f800283a 	ret

0402d8e8 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 402d8e8:	deffed04 	addi	sp,sp,-76
 402d8ec:	dfc01215 	stw	ra,72(sp)
 402d8f0:	df001115 	stw	fp,68(sp)
 402d8f4:	df001104 	addi	fp,sp,68
 402d8f8:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 402d8fc:	e0bfff17 	ldw	r2,-4(fp)
 402d900:	10000816 	blt	r2,zero,402d924 <isatty+0x3c>
 402d904:	01400304 	movi	r5,12
 402d908:	e13fff17 	ldw	r4,-4(fp)
 402d90c:	40208380 	call	4020838 <__mulsi3>
 402d910:	1007883a 	mov	r3,r2
 402d914:	00800034 	movhi	r2,0
 402d918:	10830704 	addi	r2,r2,3100
 402d91c:	1885883a 	add	r2,r3,r2
 402d920:	00000106 	br	402d928 <isatty+0x40>
 402d924:	0005883a 	mov	r2,zero
 402d928:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 402d92c:	e0bfef17 	ldw	r2,-68(fp)
 402d930:	10000e26 	beq	r2,zero,402d96c <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 402d934:	e0bfef17 	ldw	r2,-68(fp)
 402d938:	10800017 	ldw	r2,0(r2)
 402d93c:	10800817 	ldw	r2,32(r2)
 402d940:	1000021e 	bne	r2,zero,402d94c <isatty+0x64>
    {
      return 1;
 402d944:	00800044 	movi	r2,1
 402d948:	00000d06 	br	402d980 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 402d94c:	e0bff004 	addi	r2,fp,-64
 402d950:	100b883a 	mov	r5,r2
 402d954:	e13fff17 	ldw	r4,-4(fp)
 402d958:	402d7f40 	call	402d7f4 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 402d95c:	e0bff117 	ldw	r2,-60(fp)
 402d960:	10880020 	cmpeqi	r2,r2,8192
 402d964:	10803fcc 	andi	r2,r2,255
 402d968:	00000506 	br	402d980 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 402d96c:	402d8ac0 	call	402d8ac <alt_get_errno>
 402d970:	1007883a 	mov	r3,r2
 402d974:	00801444 	movi	r2,81
 402d978:	18800015 	stw	r2,0(r3)
    return 0;
 402d97c:	0005883a 	mov	r2,zero
  }
}
 402d980:	e037883a 	mov	sp,fp
 402d984:	dfc00117 	ldw	ra,4(sp)
 402d988:	df000017 	ldw	fp,0(sp)
 402d98c:	dec00204 	addi	sp,sp,8
 402d990:	f800283a 	ret

0402d994 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 402d994:	defffc04 	addi	sp,sp,-16
 402d998:	df000315 	stw	fp,12(sp)
 402d99c:	df000304 	addi	fp,sp,12
 402d9a0:	e13ffd15 	stw	r4,-12(fp)
 402d9a4:	e17ffe15 	stw	r5,-8(fp)
 402d9a8:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 402d9ac:	e0fffe17 	ldw	r3,-8(fp)
 402d9b0:	e0bffd17 	ldw	r2,-12(fp)
 402d9b4:	18800c26 	beq	r3,r2,402d9e8 <alt_load_section+0x54>
  {
    while( to != end )
 402d9b8:	00000806 	br	402d9dc <alt_load_section+0x48>
    {
      *to++ = *from++;
 402d9bc:	e0bffe17 	ldw	r2,-8(fp)
 402d9c0:	10c00104 	addi	r3,r2,4
 402d9c4:	e0fffe15 	stw	r3,-8(fp)
 402d9c8:	e0fffd17 	ldw	r3,-12(fp)
 402d9cc:	19000104 	addi	r4,r3,4
 402d9d0:	e13ffd15 	stw	r4,-12(fp)
 402d9d4:	18c00017 	ldw	r3,0(r3)
 402d9d8:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 402d9dc:	e0fffe17 	ldw	r3,-8(fp)
 402d9e0:	e0bfff17 	ldw	r2,-4(fp)
 402d9e4:	18bff51e 	bne	r3,r2,402d9bc <__flash_rwdata_start+0xffffd6a8>
    {
      *to++ = *from++;
    }
  }
}
 402d9e8:	0001883a 	nop
 402d9ec:	e037883a 	mov	sp,fp
 402d9f0:	df000017 	ldw	fp,0(sp)
 402d9f4:	dec00104 	addi	sp,sp,4
 402d9f8:	f800283a 	ret

0402d9fc <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 402d9fc:	defffe04 	addi	sp,sp,-8
 402da00:	dfc00115 	stw	ra,4(sp)
 402da04:	df000015 	stw	fp,0(sp)
 402da08:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 402da0c:	01800034 	movhi	r6,0
 402da10:	31879a04 	addi	r6,r6,7784
 402da14:	01400034 	movhi	r5,0
 402da18:	2940d404 	addi	r5,r5,848
 402da1c:	010100f4 	movhi	r4,1027
 402da20:	2100c504 	addi	r4,r4,788
 402da24:	402d9940 	call	402d994 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 402da28:	018100b4 	movhi	r6,1026
 402da2c:	31808c04 	addi	r6,r6,560
 402da30:	014100b4 	movhi	r5,1026
 402da34:	29400804 	addi	r5,r5,32
 402da38:	010100b4 	movhi	r4,1026
 402da3c:	21000804 	addi	r4,r4,32
 402da40:	402d9940 	call	402d994 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 402da44:	01800034 	movhi	r6,0
 402da48:	3180d404 	addi	r6,r6,848
 402da4c:	01400034 	movhi	r5,0
 402da50:	29400004 	addi	r5,r5,0
 402da54:	010100f4 	movhi	r4,1027
 402da58:	213ff104 	addi	r4,r4,-60
 402da5c:	402d9940 	call	402d994 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 402da60:	402ef0c0 	call	402ef0c <alt_dcache_flush_all>
  alt_icache_flush_all();
 402da64:	402f0cc0 	call	402f0cc <alt_icache_flush_all>
}
 402da68:	0001883a 	nop
 402da6c:	e037883a 	mov	sp,fp
 402da70:	dfc00117 	ldw	ra,4(sp)
 402da74:	df000017 	ldw	fp,0(sp)
 402da78:	dec00204 	addi	sp,sp,8
 402da7c:	f800283a 	ret

0402da80 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402da80:	defffe04 	addi	sp,sp,-8
 402da84:	dfc00115 	stw	ra,4(sp)
 402da88:	df000015 	stw	fp,0(sp)
 402da8c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402da90:	d0a00b17 	ldw	r2,-32724(gp)
 402da94:	10000326 	beq	r2,zero,402daa4 <alt_get_errno+0x24>
 402da98:	d0a00b17 	ldw	r2,-32724(gp)
 402da9c:	103ee83a 	callr	r2
 402daa0:	00000106 	br	402daa8 <alt_get_errno+0x28>
 402daa4:	d0a01704 	addi	r2,gp,-32676
}
 402daa8:	e037883a 	mov	sp,fp
 402daac:	dfc00117 	ldw	ra,4(sp)
 402dab0:	df000017 	ldw	fp,0(sp)
 402dab4:	dec00204 	addi	sp,sp,8
 402dab8:	f800283a 	ret

0402dabc <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 402dabc:	defff904 	addi	sp,sp,-28
 402dac0:	dfc00615 	stw	ra,24(sp)
 402dac4:	df000515 	stw	fp,20(sp)
 402dac8:	df000504 	addi	fp,sp,20
 402dacc:	e13ffd15 	stw	r4,-12(fp)
 402dad0:	e17ffe15 	stw	r5,-8(fp)
 402dad4:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 402dad8:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 402dadc:	e0bffd17 	ldw	r2,-12(fp)
 402dae0:	10000816 	blt	r2,zero,402db04 <lseek+0x48>
 402dae4:	01400304 	movi	r5,12
 402dae8:	e13ffd17 	ldw	r4,-12(fp)
 402daec:	40208380 	call	4020838 <__mulsi3>
 402daf0:	1007883a 	mov	r3,r2
 402daf4:	00800034 	movhi	r2,0
 402daf8:	10830704 	addi	r2,r2,3100
 402dafc:	1885883a 	add	r2,r3,r2
 402db00:	00000106 	br	402db08 <lseek+0x4c>
 402db04:	0005883a 	mov	r2,zero
 402db08:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 402db0c:	e0bffc17 	ldw	r2,-16(fp)
 402db10:	10001026 	beq	r2,zero,402db54 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 402db14:	e0bffc17 	ldw	r2,-16(fp)
 402db18:	10800017 	ldw	r2,0(r2)
 402db1c:	10800717 	ldw	r2,28(r2)
 402db20:	10000926 	beq	r2,zero,402db48 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 402db24:	e0bffc17 	ldw	r2,-16(fp)
 402db28:	10800017 	ldw	r2,0(r2)
 402db2c:	10800717 	ldw	r2,28(r2)
 402db30:	e1bfff17 	ldw	r6,-4(fp)
 402db34:	e17ffe17 	ldw	r5,-8(fp)
 402db38:	e13ffc17 	ldw	r4,-16(fp)
 402db3c:	103ee83a 	callr	r2
 402db40:	e0bffb15 	stw	r2,-20(fp)
 402db44:	00000506 	br	402db5c <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 402db48:	00bfde84 	movi	r2,-134
 402db4c:	e0bffb15 	stw	r2,-20(fp)
 402db50:	00000206 	br	402db5c <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
 402db54:	00bfebc4 	movi	r2,-81
 402db58:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 402db5c:	e0bffb17 	ldw	r2,-20(fp)
 402db60:	1000070e 	bge	r2,zero,402db80 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
 402db64:	402da800 	call	402da80 <alt_get_errno>
 402db68:	1007883a 	mov	r3,r2
 402db6c:	e0bffb17 	ldw	r2,-20(fp)
 402db70:	0085c83a 	sub	r2,zero,r2
 402db74:	18800015 	stw	r2,0(r3)
    rc = -1;
 402db78:	00bfffc4 	movi	r2,-1
 402db7c:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 402db80:	e0bffb17 	ldw	r2,-20(fp)
}
 402db84:	e037883a 	mov	sp,fp
 402db88:	dfc00117 	ldw	ra,4(sp)
 402db8c:	df000017 	ldw	fp,0(sp)
 402db90:	dec00204 	addi	sp,sp,8
 402db94:	f800283a 	ret

0402db98 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 402db98:	defffd04 	addi	sp,sp,-12
 402db9c:	dfc00215 	stw	ra,8(sp)
 402dba0:	df000115 	stw	fp,4(sp)
 402dba4:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 402dba8:	0009883a 	mov	r4,zero
 402dbac:	402e0700 	call	402e070 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 402dbb0:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 402dbb4:	402e0a80 	call	402e0a8 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 402dbb8:	01800034 	movhi	r6,0
 402dbbc:	3180c704 	addi	r6,r6,796
 402dbc0:	01400034 	movhi	r5,0
 402dbc4:	2940c704 	addi	r5,r5,796
 402dbc8:	01000034 	movhi	r4,0
 402dbcc:	2100c704 	addi	r4,r4,796
 402dbd0:	402f4700 	call	402f470 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 402dbd4:	402f00c0 	call	402f00c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 402dbd8:	010100f4 	movhi	r4,1027
 402dbdc:	213c1b04 	addi	r4,r4,-3988
 402dbe0:	402fc300 	call	402fc30 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 402dbe4:	d0a01817 	ldw	r2,-32672(gp)
 402dbe8:	d0e01917 	ldw	r3,-32668(gp)
 402dbec:	d1201a17 	ldw	r4,-32664(gp)
 402dbf0:	200d883a 	mov	r6,r4
 402dbf4:	180b883a 	mov	r5,r3
 402dbf8:	1009883a 	mov	r4,r2
 402dbfc:	40203680 	call	4020368 <main>
 402dc00:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 402dc04:	01000044 	movi	r4,1
 402dc08:	402d6b40 	call	402d6b4 <close>
  exit (result);
 402dc0c:	e13fff17 	ldw	r4,-4(fp)
 402dc10:	402fc440 	call	402fc44 <exit>

0402dc14 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 402dc14:	defffe04 	addi	sp,sp,-8
 402dc18:	df000115 	stw	fp,4(sp)
 402dc1c:	df000104 	addi	fp,sp,4
 402dc20:	e13fff15 	stw	r4,-4(fp)
}
 402dc24:	0001883a 	nop
 402dc28:	e037883a 	mov	sp,fp
 402dc2c:	df000017 	ldw	fp,0(sp)
 402dc30:	dec00104 	addi	sp,sp,4
 402dc34:	f800283a 	ret

0402dc38 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 402dc38:	defffe04 	addi	sp,sp,-8
 402dc3c:	df000115 	stw	fp,4(sp)
 402dc40:	df000104 	addi	fp,sp,4
 402dc44:	e13fff15 	stw	r4,-4(fp)
}
 402dc48:	0001883a 	nop
 402dc4c:	e037883a 	mov	sp,fp
 402dc50:	df000017 	ldw	fp,0(sp)
 402dc54:	dec00104 	addi	sp,sp,4
 402dc58:	f800283a 	ret

0402dc5c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402dc5c:	defffe04 	addi	sp,sp,-8
 402dc60:	dfc00115 	stw	ra,4(sp)
 402dc64:	df000015 	stw	fp,0(sp)
 402dc68:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402dc6c:	d0a00b17 	ldw	r2,-32724(gp)
 402dc70:	10000326 	beq	r2,zero,402dc80 <alt_get_errno+0x24>
 402dc74:	d0a00b17 	ldw	r2,-32724(gp)
 402dc78:	103ee83a 	callr	r2
 402dc7c:	00000106 	br	402dc84 <alt_get_errno+0x28>
 402dc80:	d0a01704 	addi	r2,gp,-32676
}
 402dc84:	e037883a 	mov	sp,fp
 402dc88:	dfc00117 	ldw	ra,4(sp)
 402dc8c:	df000017 	ldw	fp,0(sp)
 402dc90:	dec00204 	addi	sp,sp,8
 402dc94:	f800283a 	ret

0402dc98 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 402dc98:	defff904 	addi	sp,sp,-28
 402dc9c:	dfc00615 	stw	ra,24(sp)
 402dca0:	df000515 	stw	fp,20(sp)
 402dca4:	df000504 	addi	fp,sp,20
 402dca8:	e13ffd15 	stw	r4,-12(fp)
 402dcac:	e17ffe15 	stw	r5,-8(fp)
 402dcb0:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 402dcb4:	e0bffd17 	ldw	r2,-12(fp)
 402dcb8:	10000816 	blt	r2,zero,402dcdc <read+0x44>
 402dcbc:	01400304 	movi	r5,12
 402dcc0:	e13ffd17 	ldw	r4,-12(fp)
 402dcc4:	40208380 	call	4020838 <__mulsi3>
 402dcc8:	1007883a 	mov	r3,r2
 402dccc:	00800034 	movhi	r2,0
 402dcd0:	10830704 	addi	r2,r2,3100
 402dcd4:	1885883a 	add	r2,r3,r2
 402dcd8:	00000106 	br	402dce0 <read+0x48>
 402dcdc:	0005883a 	mov	r2,zero
 402dce0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 402dce4:	e0bffb17 	ldw	r2,-20(fp)
 402dce8:	10002226 	beq	r2,zero,402dd74 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 402dcec:	e0bffb17 	ldw	r2,-20(fp)
 402dcf0:	10800217 	ldw	r2,8(r2)
 402dcf4:	108000cc 	andi	r2,r2,3
 402dcf8:	10800060 	cmpeqi	r2,r2,1
 402dcfc:	1000181e 	bne	r2,zero,402dd60 <read+0xc8>
        (fd->dev->read))
 402dd00:	e0bffb17 	ldw	r2,-20(fp)
 402dd04:	10800017 	ldw	r2,0(r2)
 402dd08:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 402dd0c:	10001426 	beq	r2,zero,402dd60 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 402dd10:	e0bffb17 	ldw	r2,-20(fp)
 402dd14:	10800017 	ldw	r2,0(r2)
 402dd18:	10800517 	ldw	r2,20(r2)
 402dd1c:	e0ffff17 	ldw	r3,-4(fp)
 402dd20:	180d883a 	mov	r6,r3
 402dd24:	e17ffe17 	ldw	r5,-8(fp)
 402dd28:	e13ffb17 	ldw	r4,-20(fp)
 402dd2c:	103ee83a 	callr	r2
 402dd30:	e0bffc15 	stw	r2,-16(fp)
 402dd34:	e0bffc17 	ldw	r2,-16(fp)
 402dd38:	1000070e 	bge	r2,zero,402dd58 <read+0xc0>
        {
          ALT_ERRNO = -rval;
 402dd3c:	402dc5c0 	call	402dc5c <alt_get_errno>
 402dd40:	1007883a 	mov	r3,r2
 402dd44:	e0bffc17 	ldw	r2,-16(fp)
 402dd48:	0085c83a 	sub	r2,zero,r2
 402dd4c:	18800015 	stw	r2,0(r3)
          return -1;
 402dd50:	00bfffc4 	movi	r2,-1
 402dd54:	00000c06 	br	402dd88 <read+0xf0>
        }
        return rval;
 402dd58:	e0bffc17 	ldw	r2,-16(fp)
 402dd5c:	00000a06 	br	402dd88 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
 402dd60:	402dc5c0 	call	402dc5c <alt_get_errno>
 402dd64:	1007883a 	mov	r3,r2
 402dd68:	00800344 	movi	r2,13
 402dd6c:	18800015 	stw	r2,0(r3)
 402dd70:	00000406 	br	402dd84 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 402dd74:	402dc5c0 	call	402dc5c <alt_get_errno>
 402dd78:	1007883a 	mov	r3,r2
 402dd7c:	00801444 	movi	r2,81
 402dd80:	18800015 	stw	r2,0(r3)
  }
  return -1;
 402dd84:	00bfffc4 	movi	r2,-1
}
 402dd88:	e037883a 	mov	sp,fp
 402dd8c:	dfc00117 	ldw	ra,4(sp)
 402dd90:	df000017 	ldw	fp,0(sp)
 402dd94:	dec00204 	addi	sp,sp,8
 402dd98:	f800283a 	ret

0402dd9c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 402dd9c:	defffc04 	addi	sp,sp,-16
 402dda0:	dfc00315 	stw	ra,12(sp)
 402dda4:	df000215 	stw	fp,8(sp)
 402dda8:	dc000115 	stw	r16,4(sp)
 402ddac:	df000204 	addi	fp,sp,8
 402ddb0:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
 402ddb4:	e0bffe17 	ldw	r2,-8(fp)
 402ddb8:	108000d0 	cmplti	r2,r2,3
 402ddbc:	1000111e 	bne	r2,zero,402de04 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
 402ddc0:	04000034 	movhi	r16,0
 402ddc4:	84030704 	addi	r16,r16,3100
 402ddc8:	e0bffe17 	ldw	r2,-8(fp)
 402ddcc:	01400304 	movi	r5,12
 402ddd0:	1009883a 	mov	r4,r2
 402ddd4:	40208380 	call	4020838 <__mulsi3>
 402ddd8:	8085883a 	add	r2,r16,r2
 402dddc:	10800204 	addi	r2,r2,8
 402dde0:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 402dde4:	04000034 	movhi	r16,0
 402dde8:	84030704 	addi	r16,r16,3100
 402ddec:	e0bffe17 	ldw	r2,-8(fp)
 402ddf0:	01400304 	movi	r5,12
 402ddf4:	1009883a 	mov	r4,r2
 402ddf8:	40208380 	call	4020838 <__mulsi3>
 402ddfc:	8085883a 	add	r2,r16,r2
 402de00:	10000015 	stw	zero,0(r2)
  }
}
 402de04:	0001883a 	nop
 402de08:	e6ffff04 	addi	sp,fp,-4
 402de0c:	dfc00217 	ldw	ra,8(sp)
 402de10:	df000117 	ldw	fp,4(sp)
 402de14:	dc000017 	ldw	r16,0(sp)
 402de18:	dec00304 	addi	sp,sp,12
 402de1c:	f800283a 	ret

0402de20 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 402de20:	defff904 	addi	sp,sp,-28
 402de24:	df000615 	stw	fp,24(sp)
 402de28:	df000604 	addi	fp,sp,24
 402de2c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402de30:	0005303a 	rdctl	r2,status
 402de34:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402de38:	e0fffe17 	ldw	r3,-8(fp)
 402de3c:	00bfff84 	movi	r2,-2
 402de40:	1884703a 	and	r2,r3,r2
 402de44:	1001703a 	wrctl	status,r2
  
  return context;
 402de48:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 402de4c:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 402de50:	d0a00c17 	ldw	r2,-32720(gp)
 402de54:	10c000c4 	addi	r3,r2,3
 402de58:	00bfff04 	movi	r2,-4
 402de5c:	1884703a 	and	r2,r3,r2
 402de60:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 402de64:	d0e00c17 	ldw	r3,-32720(gp)
 402de68:	e0bfff17 	ldw	r2,-4(fp)
 402de6c:	1887883a 	add	r3,r3,r2
 402de70:	00810034 	movhi	r2,1024
 402de74:	10800004 	addi	r2,r2,0
 402de78:	10c0062e 	bgeu	r2,r3,402de94 <sbrk+0x74>
 402de7c:	e0bffb17 	ldw	r2,-20(fp)
 402de80:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402de84:	e0bffa17 	ldw	r2,-24(fp)
 402de88:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 402de8c:	00bfffc4 	movi	r2,-1
 402de90:	00000b06 	br	402dec0 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 402de94:	d0a00c17 	ldw	r2,-32720(gp)
 402de98:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
 402de9c:	d0e00c17 	ldw	r3,-32720(gp)
 402dea0:	e0bfff17 	ldw	r2,-4(fp)
 402dea4:	1885883a 	add	r2,r3,r2
 402dea8:	d0a00c15 	stw	r2,-32720(gp)
 402deac:	e0bffb17 	ldw	r2,-20(fp)
 402deb0:	e0bffc15 	stw	r2,-16(fp)
 402deb4:	e0bffc17 	ldw	r2,-16(fp)
 402deb8:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 402debc:	e0bffd17 	ldw	r2,-12(fp)
} 
 402dec0:	e037883a 	mov	sp,fp
 402dec4:	df000017 	ldw	fp,0(sp)
 402dec8:	dec00104 	addi	sp,sp,4
 402decc:	f800283a 	ret

0402ded0 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
 402ded0:	defffd04 	addi	sp,sp,-12
 402ded4:	dfc00215 	stw	ra,8(sp)
 402ded8:	df000115 	stw	fp,4(sp)
 402dedc:	df000104 	addi	fp,sp,4
 402dee0:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
 402dee4:	e13fff17 	ldw	r4,-4(fp)
 402dee8:	402edb40 	call	402edb4 <alt_busy_sleep>
}
 402deec:	e037883a 	mov	sp,fp
 402def0:	dfc00117 	ldw	ra,4(sp)
 402def4:	df000017 	ldw	fp,0(sp)
 402def8:	dec00204 	addi	sp,sp,8
 402defc:	f800283a 	ret

0402df00 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402df00:	defffe04 	addi	sp,sp,-8
 402df04:	dfc00115 	stw	ra,4(sp)
 402df08:	df000015 	stw	fp,0(sp)
 402df0c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402df10:	d0a00b17 	ldw	r2,-32724(gp)
 402df14:	10000326 	beq	r2,zero,402df24 <alt_get_errno+0x24>
 402df18:	d0a00b17 	ldw	r2,-32724(gp)
 402df1c:	103ee83a 	callr	r2
 402df20:	00000106 	br	402df28 <alt_get_errno+0x28>
 402df24:	d0a01704 	addi	r2,gp,-32676
}
 402df28:	e037883a 	mov	sp,fp
 402df2c:	dfc00117 	ldw	ra,4(sp)
 402df30:	df000017 	ldw	fp,0(sp)
 402df34:	dec00204 	addi	sp,sp,8
 402df38:	f800283a 	ret

0402df3c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 402df3c:	defff904 	addi	sp,sp,-28
 402df40:	dfc00615 	stw	ra,24(sp)
 402df44:	df000515 	stw	fp,20(sp)
 402df48:	df000504 	addi	fp,sp,20
 402df4c:	e13ffd15 	stw	r4,-12(fp)
 402df50:	e17ffe15 	stw	r5,-8(fp)
 402df54:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 402df58:	e0bffd17 	ldw	r2,-12(fp)
 402df5c:	10000816 	blt	r2,zero,402df80 <write+0x44>
 402df60:	01400304 	movi	r5,12
 402df64:	e13ffd17 	ldw	r4,-12(fp)
 402df68:	40208380 	call	4020838 <__mulsi3>
 402df6c:	1007883a 	mov	r3,r2
 402df70:	00800034 	movhi	r2,0
 402df74:	10830704 	addi	r2,r2,3100
 402df78:	1885883a 	add	r2,r3,r2
 402df7c:	00000106 	br	402df84 <write+0x48>
 402df80:	0005883a 	mov	r2,zero
 402df84:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 402df88:	e0bffb17 	ldw	r2,-20(fp)
 402df8c:	10002126 	beq	r2,zero,402e014 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 402df90:	e0bffb17 	ldw	r2,-20(fp)
 402df94:	10800217 	ldw	r2,8(r2)
 402df98:	108000cc 	andi	r2,r2,3
 402df9c:	10001826 	beq	r2,zero,402e000 <write+0xc4>
 402dfa0:	e0bffb17 	ldw	r2,-20(fp)
 402dfa4:	10800017 	ldw	r2,0(r2)
 402dfa8:	10800617 	ldw	r2,24(r2)
 402dfac:	10001426 	beq	r2,zero,402e000 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 402dfb0:	e0bffb17 	ldw	r2,-20(fp)
 402dfb4:	10800017 	ldw	r2,0(r2)
 402dfb8:	10800617 	ldw	r2,24(r2)
 402dfbc:	e0ffff17 	ldw	r3,-4(fp)
 402dfc0:	180d883a 	mov	r6,r3
 402dfc4:	e17ffe17 	ldw	r5,-8(fp)
 402dfc8:	e13ffb17 	ldw	r4,-20(fp)
 402dfcc:	103ee83a 	callr	r2
 402dfd0:	e0bffc15 	stw	r2,-16(fp)
 402dfd4:	e0bffc17 	ldw	r2,-16(fp)
 402dfd8:	1000070e 	bge	r2,zero,402dff8 <write+0xbc>
      {
        ALT_ERRNO = -rval;
 402dfdc:	402df000 	call	402df00 <alt_get_errno>
 402dfe0:	1007883a 	mov	r3,r2
 402dfe4:	e0bffc17 	ldw	r2,-16(fp)
 402dfe8:	0085c83a 	sub	r2,zero,r2
 402dfec:	18800015 	stw	r2,0(r3)
        return -1;
 402dff0:	00bfffc4 	movi	r2,-1
 402dff4:	00000c06 	br	402e028 <write+0xec>
      }
      return rval;
 402dff8:	e0bffc17 	ldw	r2,-16(fp)
 402dffc:	00000a06 	br	402e028 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
 402e000:	402df000 	call	402df00 <alt_get_errno>
 402e004:	1007883a 	mov	r3,r2
 402e008:	00800344 	movi	r2,13
 402e00c:	18800015 	stw	r2,0(r3)
 402e010:	00000406 	br	402e024 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 402e014:	402df000 	call	402df00 <alt_get_errno>
 402e018:	1007883a 	mov	r3,r2
 402e01c:	00801444 	movi	r2,81
 402e020:	18800015 	stw	r2,0(r3)
  }
  return -1;
 402e024:	00bfffc4 	movi	r2,-1
}
 402e028:	e037883a 	mov	sp,fp
 402e02c:	dfc00117 	ldw	ra,4(sp)
 402e030:	df000017 	ldw	fp,0(sp)
 402e034:	dec00204 	addi	sp,sp,8
 402e038:	f800283a 	ret

0402e03c <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 402e03c:	defffd04 	addi	sp,sp,-12
 402e040:	dfc00215 	stw	ra,8(sp)
 402e044:	df000115 	stw	fp,4(sp)
 402e048:	df000104 	addi	fp,sp,4
 402e04c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 402e050:	d1600804 	addi	r5,gp,-32736
 402e054:	e13fff17 	ldw	r4,-4(fp)
 402e058:	402ef680 	call	402ef68 <alt_dev_llist_insert>
}
 402e05c:	e037883a 	mov	sp,fp
 402e060:	dfc00117 	ldw	ra,4(sp)
 402e064:	df000017 	ldw	fp,0(sp)
 402e068:	dec00204 	addi	sp,sp,8
 402e06c:	f800283a 	ret

0402e070 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 402e070:	defffd04 	addi	sp,sp,-12
 402e074:	dfc00215 	stw	ra,8(sp)
 402e078:	df000115 	stw	fp,4(sp)
 402e07c:	df000104 	addi	fp,sp,4
 402e080:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
 402e084:	402f9140 	call	402f914 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 402e088:	00800044 	movi	r2,1
 402e08c:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 402e090:	0001883a 	nop
 402e094:	e037883a 	mov	sp,fp
 402e098:	dfc00117 	ldw	ra,4(sp)
 402e09c:	df000017 	ldw	fp,0(sp)
 402e0a0:	dec00204 	addi	sp,sp,8
 402e0a4:	f800283a 	ret

0402e0a8 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 402e0a8:	defffe04 	addi	sp,sp,-8
 402e0ac:	dfc00115 	stw	ra,4(sp)
 402e0b0:	df000015 	stw	fp,0(sp)
 402e0b4:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
 402e0b8:	01c0fa04 	movi	r7,1000
 402e0bc:	01800044 	movi	r6,1
 402e0c0:	000b883a 	mov	r5,zero
 402e0c4:	01010134 	movhi	r4,1028
 402e0c8:	21041004 	addi	r4,r4,4160
 402e0cc:	402ec0c0 	call	402ec0c <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( TIMER_1, timer_1);
 402e0d0:	00810134 	movhi	r2,1028
 402e0d4:	10840804 	addi	r2,r2,4128
 402e0d8:	d0a01b15 	stw	r2,-32660(gp)
 402e0dc:	0080bef4 	movhi	r2,763
 402e0e0:	10bc2004 	addi	r2,r2,-3968
 402e0e4:	d0a01c15 	stw	r2,-32656(gp)
    ALTERA_AVALON_TIMER_INIT ( TIMER_2, timer_2);
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
 402e0e8:	000d883a 	mov	r6,zero
 402e0ec:	000b883a 	mov	r5,zero
 402e0f0:	01000034 	movhi	r4,0
 402e0f4:	21037104 	addi	r4,r4,3524
 402e0f8:	402e2900 	call	402e290 <altera_avalon_jtag_uart_init>
 402e0fc:	01000034 	movhi	r4,0
 402e100:	21036704 	addi	r4,r4,3484
 402e104:	402e03c0 	call	402e03c <alt_dev_reg>
    ALTERA_UP_AVALON_ADC_INIT ( ADC_0, adc_0);
 402e108:	01000034 	movhi	r4,0
 402e10c:	21077f04 	addi	r4,r4,7676
 402e110:	402e03c0 	call	402e03c <alt_dev_reg>
}
 402e114:	0001883a 	nop
 402e118:	e037883a 	mov	sp,fp
 402e11c:	dfc00117 	ldw	ra,4(sp)
 402e120:	df000017 	ldw	fp,0(sp)
 402e124:	dec00204 	addi	sp,sp,8
 402e128:	f800283a 	ret

0402e12c <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 402e12c:	defffa04 	addi	sp,sp,-24
 402e130:	dfc00515 	stw	ra,20(sp)
 402e134:	df000415 	stw	fp,16(sp)
 402e138:	df000404 	addi	fp,sp,16
 402e13c:	e13ffd15 	stw	r4,-12(fp)
 402e140:	e17ffe15 	stw	r5,-8(fp)
 402e144:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 402e148:	e0bffd17 	ldw	r2,-12(fp)
 402e14c:	10800017 	ldw	r2,0(r2)
 402e150:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 402e154:	e0bffc17 	ldw	r2,-16(fp)
 402e158:	10c00a04 	addi	r3,r2,40
 402e15c:	e0bffd17 	ldw	r2,-12(fp)
 402e160:	10800217 	ldw	r2,8(r2)
 402e164:	100f883a 	mov	r7,r2
 402e168:	e1bfff17 	ldw	r6,-4(fp)
 402e16c:	e17ffe17 	ldw	r5,-8(fp)
 402e170:	1809883a 	mov	r4,r3
 402e174:	402e7540 	call	402e754 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 402e178:	e037883a 	mov	sp,fp
 402e17c:	dfc00117 	ldw	ra,4(sp)
 402e180:	df000017 	ldw	fp,0(sp)
 402e184:	dec00204 	addi	sp,sp,8
 402e188:	f800283a 	ret

0402e18c <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 402e18c:	defffa04 	addi	sp,sp,-24
 402e190:	dfc00515 	stw	ra,20(sp)
 402e194:	df000415 	stw	fp,16(sp)
 402e198:	df000404 	addi	fp,sp,16
 402e19c:	e13ffd15 	stw	r4,-12(fp)
 402e1a0:	e17ffe15 	stw	r5,-8(fp)
 402e1a4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 402e1a8:	e0bffd17 	ldw	r2,-12(fp)
 402e1ac:	10800017 	ldw	r2,0(r2)
 402e1b0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 402e1b4:	e0bffc17 	ldw	r2,-16(fp)
 402e1b8:	10c00a04 	addi	r3,r2,40
 402e1bc:	e0bffd17 	ldw	r2,-12(fp)
 402e1c0:	10800217 	ldw	r2,8(r2)
 402e1c4:	100f883a 	mov	r7,r2
 402e1c8:	e1bfff17 	ldw	r6,-4(fp)
 402e1cc:	e17ffe17 	ldw	r5,-8(fp)
 402e1d0:	1809883a 	mov	r4,r3
 402e1d4:	402e9700 	call	402e970 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 402e1d8:	e037883a 	mov	sp,fp
 402e1dc:	dfc00117 	ldw	ra,4(sp)
 402e1e0:	df000017 	ldw	fp,0(sp)
 402e1e4:	dec00204 	addi	sp,sp,8
 402e1e8:	f800283a 	ret

0402e1ec <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 402e1ec:	defffc04 	addi	sp,sp,-16
 402e1f0:	dfc00315 	stw	ra,12(sp)
 402e1f4:	df000215 	stw	fp,8(sp)
 402e1f8:	df000204 	addi	fp,sp,8
 402e1fc:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 402e200:	e0bfff17 	ldw	r2,-4(fp)
 402e204:	10800017 	ldw	r2,0(r2)
 402e208:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 402e20c:	e0bffe17 	ldw	r2,-8(fp)
 402e210:	10c00a04 	addi	r3,r2,40
 402e214:	e0bfff17 	ldw	r2,-4(fp)
 402e218:	10800217 	ldw	r2,8(r2)
 402e21c:	100b883a 	mov	r5,r2
 402e220:	1809883a 	mov	r4,r3
 402e224:	402e5fc0 	call	402e5fc <altera_avalon_jtag_uart_close>
}
 402e228:	e037883a 	mov	sp,fp
 402e22c:	dfc00117 	ldw	ra,4(sp)
 402e230:	df000017 	ldw	fp,0(sp)
 402e234:	dec00204 	addi	sp,sp,8
 402e238:	f800283a 	ret

0402e23c <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 402e23c:	defffa04 	addi	sp,sp,-24
 402e240:	dfc00515 	stw	ra,20(sp)
 402e244:	df000415 	stw	fp,16(sp)
 402e248:	df000404 	addi	fp,sp,16
 402e24c:	e13ffd15 	stw	r4,-12(fp)
 402e250:	e17ffe15 	stw	r5,-8(fp)
 402e254:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 402e258:	e0bffd17 	ldw	r2,-12(fp)
 402e25c:	10800017 	ldw	r2,0(r2)
 402e260:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 402e264:	e0bffc17 	ldw	r2,-16(fp)
 402e268:	10800a04 	addi	r2,r2,40
 402e26c:	e1bfff17 	ldw	r6,-4(fp)
 402e270:	e17ffe17 	ldw	r5,-8(fp)
 402e274:	1009883a 	mov	r4,r2
 402e278:	402e6640 	call	402e664 <altera_avalon_jtag_uart_ioctl>
}
 402e27c:	e037883a 	mov	sp,fp
 402e280:	dfc00117 	ldw	ra,4(sp)
 402e284:	df000017 	ldw	fp,0(sp)
 402e288:	dec00204 	addi	sp,sp,8
 402e28c:	f800283a 	ret

0402e290 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 402e290:	defffa04 	addi	sp,sp,-24
 402e294:	dfc00515 	stw	ra,20(sp)
 402e298:	df000415 	stw	fp,16(sp)
 402e29c:	df000404 	addi	fp,sp,16
 402e2a0:	e13ffd15 	stw	r4,-12(fp)
 402e2a4:	e17ffe15 	stw	r5,-8(fp)
 402e2a8:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 402e2ac:	e0bffd17 	ldw	r2,-12(fp)
 402e2b0:	00c00044 	movi	r3,1
 402e2b4:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 402e2b8:	e0bffd17 	ldw	r2,-12(fp)
 402e2bc:	10800017 	ldw	r2,0(r2)
 402e2c0:	10800104 	addi	r2,r2,4
 402e2c4:	1007883a 	mov	r3,r2
 402e2c8:	e0bffd17 	ldw	r2,-12(fp)
 402e2cc:	10800817 	ldw	r2,32(r2)
 402e2d0:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 402e2d4:	e0bffe17 	ldw	r2,-8(fp)
 402e2d8:	e0ffff17 	ldw	r3,-4(fp)
 402e2dc:	d8000015 	stw	zero,0(sp)
 402e2e0:	e1fffd17 	ldw	r7,-12(fp)
 402e2e4:	018100f4 	movhi	r6,1027
 402e2e8:	31b8d404 	addi	r6,r6,-7344
 402e2ec:	180b883a 	mov	r5,r3
 402e2f0:	1009883a 	mov	r4,r2
 402e2f4:	402f0ec0 	call	402f0ec <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 402e2f8:	e0bffd17 	ldw	r2,-12(fp)
 402e2fc:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 402e300:	e0bffd17 	ldw	r2,-12(fp)
 402e304:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 402e308:	d0e01e17 	ldw	r3,-32648(gp)
 402e30c:	e1fffd17 	ldw	r7,-12(fp)
 402e310:	018100f4 	movhi	r6,1027
 402e314:	31b95704 	addi	r6,r6,-6820
 402e318:	180b883a 	mov	r5,r3
 402e31c:	1009883a 	mov	r4,r2
 402e320:	402ec880 	call	402ec88 <alt_alarm_start>
 402e324:	1000040e 	bge	r2,zero,402e338 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 402e328:	e0fffd17 	ldw	r3,-12(fp)
 402e32c:	00a00034 	movhi	r2,32768
 402e330:	10bfffc4 	addi	r2,r2,-1
 402e334:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 402e338:	0001883a 	nop
 402e33c:	e037883a 	mov	sp,fp
 402e340:	dfc00117 	ldw	ra,4(sp)
 402e344:	df000017 	ldw	fp,0(sp)
 402e348:	dec00204 	addi	sp,sp,8
 402e34c:	f800283a 	ret

0402e350 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 402e350:	defff804 	addi	sp,sp,-32
 402e354:	df000715 	stw	fp,28(sp)
 402e358:	df000704 	addi	fp,sp,28
 402e35c:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 402e360:	e0bfff17 	ldw	r2,-4(fp)
 402e364:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
 402e368:	e0bffb17 	ldw	r2,-20(fp)
 402e36c:	10800017 	ldw	r2,0(r2)
 402e370:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 402e374:	e0bffc17 	ldw	r2,-16(fp)
 402e378:	10800104 	addi	r2,r2,4
 402e37c:	10800037 	ldwio	r2,0(r2)
 402e380:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 402e384:	e0bffd17 	ldw	r2,-12(fp)
 402e388:	1080c00c 	andi	r2,r2,768
 402e38c:	10006d26 	beq	r2,zero,402e544 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 402e390:	e0bffd17 	ldw	r2,-12(fp)
 402e394:	1080400c 	andi	r2,r2,256
 402e398:	10003526 	beq	r2,zero,402e470 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 402e39c:	00800074 	movhi	r2,1
 402e3a0:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 402e3a4:	e0bffb17 	ldw	r2,-20(fp)
 402e3a8:	10800a17 	ldw	r2,40(r2)
 402e3ac:	10800044 	addi	r2,r2,1
 402e3b0:	1081ffcc 	andi	r2,r2,2047
 402e3b4:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
 402e3b8:	e0bffb17 	ldw	r2,-20(fp)
 402e3bc:	10c00b17 	ldw	r3,44(r2)
 402e3c0:	e0bffe17 	ldw	r2,-8(fp)
 402e3c4:	18801526 	beq	r3,r2,402e41c <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 402e3c8:	e0bffc17 	ldw	r2,-16(fp)
 402e3cc:	10800037 	ldwio	r2,0(r2)
 402e3d0:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 402e3d4:	e0bff917 	ldw	r2,-28(fp)
 402e3d8:	10a0000c 	andi	r2,r2,32768
 402e3dc:	10001126 	beq	r2,zero,402e424 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 402e3e0:	e0bffb17 	ldw	r2,-20(fp)
 402e3e4:	10800a17 	ldw	r2,40(r2)
 402e3e8:	e0fff917 	ldw	r3,-28(fp)
 402e3ec:	1809883a 	mov	r4,r3
 402e3f0:	e0fffb17 	ldw	r3,-20(fp)
 402e3f4:	1885883a 	add	r2,r3,r2
 402e3f8:	10800e04 	addi	r2,r2,56
 402e3fc:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 402e400:	e0bffb17 	ldw	r2,-20(fp)
 402e404:	10800a17 	ldw	r2,40(r2)
 402e408:	10800044 	addi	r2,r2,1
 402e40c:	10c1ffcc 	andi	r3,r2,2047
 402e410:	e0bffb17 	ldw	r2,-20(fp)
 402e414:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 402e418:	003fe206 	br	402e3a4 <__flash_rwdata_start+0xffffe090>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
 402e41c:	0001883a 	nop
 402e420:	00000106 	br	402e428 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
 402e424:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 402e428:	e0bff917 	ldw	r2,-28(fp)
 402e42c:	10bfffec 	andhi	r2,r2,65535
 402e430:	10000f26 	beq	r2,zero,402e470 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 402e434:	e0bffb17 	ldw	r2,-20(fp)
 402e438:	10c00817 	ldw	r3,32(r2)
 402e43c:	00bfff84 	movi	r2,-2
 402e440:	1886703a 	and	r3,r3,r2
 402e444:	e0bffb17 	ldw	r2,-20(fp)
 402e448:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 402e44c:	e0bffc17 	ldw	r2,-16(fp)
 402e450:	10800104 	addi	r2,r2,4
 402e454:	1007883a 	mov	r3,r2
 402e458:	e0bffb17 	ldw	r2,-20(fp)
 402e45c:	10800817 	ldw	r2,32(r2)
 402e460:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 402e464:	e0bffc17 	ldw	r2,-16(fp)
 402e468:	10800104 	addi	r2,r2,4
 402e46c:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 402e470:	e0bffd17 	ldw	r2,-12(fp)
 402e474:	1080800c 	andi	r2,r2,512
 402e478:	103fbe26 	beq	r2,zero,402e374 <__flash_rwdata_start+0xffffe060>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 402e47c:	e0bffd17 	ldw	r2,-12(fp)
 402e480:	1004d43a 	srli	r2,r2,16
 402e484:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 402e488:	00001406 	br	402e4dc <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 402e48c:	e0bffc17 	ldw	r2,-16(fp)
 402e490:	e0fffb17 	ldw	r3,-20(fp)
 402e494:	18c00d17 	ldw	r3,52(r3)
 402e498:	e13ffb17 	ldw	r4,-20(fp)
 402e49c:	20c7883a 	add	r3,r4,r3
 402e4a0:	18c20e04 	addi	r3,r3,2104
 402e4a4:	18c00003 	ldbu	r3,0(r3)
 402e4a8:	18c03fcc 	andi	r3,r3,255
 402e4ac:	18c0201c 	xori	r3,r3,128
 402e4b0:	18ffe004 	addi	r3,r3,-128
 402e4b4:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 402e4b8:	e0bffb17 	ldw	r2,-20(fp)
 402e4bc:	10800d17 	ldw	r2,52(r2)
 402e4c0:	10800044 	addi	r2,r2,1
 402e4c4:	10c1ffcc 	andi	r3,r2,2047
 402e4c8:	e0bffb17 	ldw	r2,-20(fp)
 402e4cc:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 402e4d0:	e0bffa17 	ldw	r2,-24(fp)
 402e4d4:	10bfffc4 	addi	r2,r2,-1
 402e4d8:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 402e4dc:	e0bffa17 	ldw	r2,-24(fp)
 402e4e0:	10000526 	beq	r2,zero,402e4f8 <altera_avalon_jtag_uart_irq+0x1a8>
 402e4e4:	e0bffb17 	ldw	r2,-20(fp)
 402e4e8:	10c00d17 	ldw	r3,52(r2)
 402e4ec:	e0bffb17 	ldw	r2,-20(fp)
 402e4f0:	10800c17 	ldw	r2,48(r2)
 402e4f4:	18bfe51e 	bne	r3,r2,402e48c <__flash_rwdata_start+0xffffe178>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 402e4f8:	e0bffa17 	ldw	r2,-24(fp)
 402e4fc:	103f9d26 	beq	r2,zero,402e374 <__flash_rwdata_start+0xffffe060>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 402e500:	e0bffb17 	ldw	r2,-20(fp)
 402e504:	10c00817 	ldw	r3,32(r2)
 402e508:	00bfff44 	movi	r2,-3
 402e50c:	1886703a 	and	r3,r3,r2
 402e510:	e0bffb17 	ldw	r2,-20(fp)
 402e514:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 402e518:	e0bffb17 	ldw	r2,-20(fp)
 402e51c:	10800017 	ldw	r2,0(r2)
 402e520:	10800104 	addi	r2,r2,4
 402e524:	1007883a 	mov	r3,r2
 402e528:	e0bffb17 	ldw	r2,-20(fp)
 402e52c:	10800817 	ldw	r2,32(r2)
 402e530:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 402e534:	e0bffc17 	ldw	r2,-16(fp)
 402e538:	10800104 	addi	r2,r2,4
 402e53c:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 402e540:	003f8c06 	br	402e374 <__flash_rwdata_start+0xffffe060>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
 402e544:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
 402e548:	0001883a 	nop
 402e54c:	e037883a 	mov	sp,fp
 402e550:	df000017 	ldw	fp,0(sp)
 402e554:	dec00104 	addi	sp,sp,4
 402e558:	f800283a 	ret

0402e55c <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 402e55c:	defff804 	addi	sp,sp,-32
 402e560:	df000715 	stw	fp,28(sp)
 402e564:	df000704 	addi	fp,sp,28
 402e568:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 402e56c:	e0bffb17 	ldw	r2,-20(fp)
 402e570:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 402e574:	e0bff917 	ldw	r2,-28(fp)
 402e578:	10800017 	ldw	r2,0(r2)
 402e57c:	10800104 	addi	r2,r2,4
 402e580:	10800037 	ldwio	r2,0(r2)
 402e584:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 402e588:	e0bffa17 	ldw	r2,-24(fp)
 402e58c:	1081000c 	andi	r2,r2,1024
 402e590:	10000b26 	beq	r2,zero,402e5c0 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 402e594:	e0bff917 	ldw	r2,-28(fp)
 402e598:	10800017 	ldw	r2,0(r2)
 402e59c:	10800104 	addi	r2,r2,4
 402e5a0:	1007883a 	mov	r3,r2
 402e5a4:	e0bff917 	ldw	r2,-28(fp)
 402e5a8:	10800817 	ldw	r2,32(r2)
 402e5ac:	10810014 	ori	r2,r2,1024
 402e5b0:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 402e5b4:	e0bff917 	ldw	r2,-28(fp)
 402e5b8:	10000915 	stw	zero,36(r2)
 402e5bc:	00000a06 	br	402e5e8 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 402e5c0:	e0bff917 	ldw	r2,-28(fp)
 402e5c4:	10c00917 	ldw	r3,36(r2)
 402e5c8:	00a00034 	movhi	r2,32768
 402e5cc:	10bfff04 	addi	r2,r2,-4
 402e5d0:	10c00536 	bltu	r2,r3,402e5e8 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 402e5d4:	e0bff917 	ldw	r2,-28(fp)
 402e5d8:	10800917 	ldw	r2,36(r2)
 402e5dc:	10c00044 	addi	r3,r2,1
 402e5e0:	e0bff917 	ldw	r2,-28(fp)
 402e5e4:	10c00915 	stw	r3,36(r2)
 402e5e8:	d0a01e17 	ldw	r2,-32648(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 402e5ec:	e037883a 	mov	sp,fp
 402e5f0:	df000017 	ldw	fp,0(sp)
 402e5f4:	dec00104 	addi	sp,sp,4
 402e5f8:	f800283a 	ret

0402e5fc <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 402e5fc:	defffd04 	addi	sp,sp,-12
 402e600:	df000215 	stw	fp,8(sp)
 402e604:	df000204 	addi	fp,sp,8
 402e608:	e13ffe15 	stw	r4,-8(fp)
 402e60c:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 402e610:	00000506 	br	402e628 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 402e614:	e0bfff17 	ldw	r2,-4(fp)
 402e618:	1090000c 	andi	r2,r2,16384
 402e61c:	10000226 	beq	r2,zero,402e628 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 402e620:	00bffd44 	movi	r2,-11
 402e624:	00000b06 	br	402e654 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 402e628:	e0bffe17 	ldw	r2,-8(fp)
 402e62c:	10c00d17 	ldw	r3,52(r2)
 402e630:	e0bffe17 	ldw	r2,-8(fp)
 402e634:	10800c17 	ldw	r2,48(r2)
 402e638:	18800526 	beq	r3,r2,402e650 <altera_avalon_jtag_uart_close+0x54>
 402e63c:	e0bffe17 	ldw	r2,-8(fp)
 402e640:	10c00917 	ldw	r3,36(r2)
 402e644:	e0bffe17 	ldw	r2,-8(fp)
 402e648:	10800117 	ldw	r2,4(r2)
 402e64c:	18bff136 	bltu	r3,r2,402e614 <__flash_rwdata_start+0xffffe300>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 402e650:	0005883a 	mov	r2,zero
}
 402e654:	e037883a 	mov	sp,fp
 402e658:	df000017 	ldw	fp,0(sp)
 402e65c:	dec00104 	addi	sp,sp,4
 402e660:	f800283a 	ret

0402e664 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 402e664:	defffa04 	addi	sp,sp,-24
 402e668:	df000515 	stw	fp,20(sp)
 402e66c:	df000504 	addi	fp,sp,20
 402e670:	e13ffd15 	stw	r4,-12(fp)
 402e674:	e17ffe15 	stw	r5,-8(fp)
 402e678:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 402e67c:	00bff9c4 	movi	r2,-25
 402e680:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 402e684:	e0bffe17 	ldw	r2,-8(fp)
 402e688:	10da8060 	cmpeqi	r3,r2,27137
 402e68c:	1800031e 	bne	r3,zero,402e69c <altera_avalon_jtag_uart_ioctl+0x38>
 402e690:	109a80a0 	cmpeqi	r2,r2,27138
 402e694:	1000181e 	bne	r2,zero,402e6f8 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
 402e698:	00002906 	br	402e740 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 402e69c:	e0bffd17 	ldw	r2,-12(fp)
 402e6a0:	10c00117 	ldw	r3,4(r2)
 402e6a4:	00a00034 	movhi	r2,32768
 402e6a8:	10bfffc4 	addi	r2,r2,-1
 402e6ac:	18802126 	beq	r3,r2,402e734 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
 402e6b0:	e0bfff17 	ldw	r2,-4(fp)
 402e6b4:	10800017 	ldw	r2,0(r2)
 402e6b8:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 402e6bc:	e0bffc17 	ldw	r2,-16(fp)
 402e6c0:	10800090 	cmplti	r2,r2,2
 402e6c4:	1000061e 	bne	r2,zero,402e6e0 <altera_avalon_jtag_uart_ioctl+0x7c>
 402e6c8:	e0fffc17 	ldw	r3,-16(fp)
 402e6cc:	00a00034 	movhi	r2,32768
 402e6d0:	10bfffc4 	addi	r2,r2,-1
 402e6d4:	18800226 	beq	r3,r2,402e6e0 <altera_avalon_jtag_uart_ioctl+0x7c>
 402e6d8:	e0bffc17 	ldw	r2,-16(fp)
 402e6dc:	00000206 	br	402e6e8 <altera_avalon_jtag_uart_ioctl+0x84>
 402e6e0:	00a00034 	movhi	r2,32768
 402e6e4:	10bfff84 	addi	r2,r2,-2
 402e6e8:	e0fffd17 	ldw	r3,-12(fp)
 402e6ec:	18800115 	stw	r2,4(r3)
      rc = 0;
 402e6f0:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 402e6f4:	00000f06 	br	402e734 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 402e6f8:	e0bffd17 	ldw	r2,-12(fp)
 402e6fc:	10c00117 	ldw	r3,4(r2)
 402e700:	00a00034 	movhi	r2,32768
 402e704:	10bfffc4 	addi	r2,r2,-1
 402e708:	18800c26 	beq	r3,r2,402e73c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 402e70c:	e0bffd17 	ldw	r2,-12(fp)
 402e710:	10c00917 	ldw	r3,36(r2)
 402e714:	e0bffd17 	ldw	r2,-12(fp)
 402e718:	10800117 	ldw	r2,4(r2)
 402e71c:	1885803a 	cmpltu	r2,r3,r2
 402e720:	10c03fcc 	andi	r3,r2,255
 402e724:	e0bfff17 	ldw	r2,-4(fp)
 402e728:	10c00015 	stw	r3,0(r2)
      rc = 0;
 402e72c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 402e730:	00000206 	br	402e73c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
 402e734:	0001883a 	nop
 402e738:	00000106 	br	402e740 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
 402e73c:	0001883a 	nop

  default:
    break;
  }

  return rc;
 402e740:	e0bffb17 	ldw	r2,-20(fp)
}
 402e744:	e037883a 	mov	sp,fp
 402e748:	df000017 	ldw	fp,0(sp)
 402e74c:	dec00104 	addi	sp,sp,4
 402e750:	f800283a 	ret

0402e754 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 402e754:	defff304 	addi	sp,sp,-52
 402e758:	dfc00c15 	stw	ra,48(sp)
 402e75c:	df000b15 	stw	fp,44(sp)
 402e760:	df000b04 	addi	fp,sp,44
 402e764:	e13ffc15 	stw	r4,-16(fp)
 402e768:	e17ffd15 	stw	r5,-12(fp)
 402e76c:	e1bffe15 	stw	r6,-8(fp)
 402e770:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 402e774:	e0bffd17 	ldw	r2,-12(fp)
 402e778:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 402e77c:	00004706 	br	402e89c <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 402e780:	e0bffc17 	ldw	r2,-16(fp)
 402e784:	10800a17 	ldw	r2,40(r2)
 402e788:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 402e78c:	e0bffc17 	ldw	r2,-16(fp)
 402e790:	10800b17 	ldw	r2,44(r2)
 402e794:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 402e798:	e0fff717 	ldw	r3,-36(fp)
 402e79c:	e0bff817 	ldw	r2,-32(fp)
 402e7a0:	18800536 	bltu	r3,r2,402e7b8 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 402e7a4:	e0fff717 	ldw	r3,-36(fp)
 402e7a8:	e0bff817 	ldw	r2,-32(fp)
 402e7ac:	1885c83a 	sub	r2,r3,r2
 402e7b0:	e0bff615 	stw	r2,-40(fp)
 402e7b4:	00000406 	br	402e7c8 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 402e7b8:	00c20004 	movi	r3,2048
 402e7bc:	e0bff817 	ldw	r2,-32(fp)
 402e7c0:	1885c83a 	sub	r2,r3,r2
 402e7c4:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 402e7c8:	e0bff617 	ldw	r2,-40(fp)
 402e7cc:	10001e26 	beq	r2,zero,402e848 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
 402e7d0:	e0fffe17 	ldw	r3,-8(fp)
 402e7d4:	e0bff617 	ldw	r2,-40(fp)
 402e7d8:	1880022e 	bgeu	r3,r2,402e7e4 <altera_avalon_jtag_uart_read+0x90>
        n = space;
 402e7dc:	e0bffe17 	ldw	r2,-8(fp)
 402e7e0:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 402e7e4:	e0bffc17 	ldw	r2,-16(fp)
 402e7e8:	10c00e04 	addi	r3,r2,56
 402e7ec:	e0bff817 	ldw	r2,-32(fp)
 402e7f0:	1885883a 	add	r2,r3,r2
 402e7f4:	e1bff617 	ldw	r6,-40(fp)
 402e7f8:	100b883a 	mov	r5,r2
 402e7fc:	e13ff517 	ldw	r4,-44(fp)
 402e800:	4025e9c0 	call	4025e9c <memcpy>
      ptr   += n;
 402e804:	e0fff517 	ldw	r3,-44(fp)
 402e808:	e0bff617 	ldw	r2,-40(fp)
 402e80c:	1885883a 	add	r2,r3,r2
 402e810:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 402e814:	e0fffe17 	ldw	r3,-8(fp)
 402e818:	e0bff617 	ldw	r2,-40(fp)
 402e81c:	1885c83a 	sub	r2,r3,r2
 402e820:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 402e824:	e0fff817 	ldw	r3,-32(fp)
 402e828:	e0bff617 	ldw	r2,-40(fp)
 402e82c:	1885883a 	add	r2,r3,r2
 402e830:	10c1ffcc 	andi	r3,r2,2047
 402e834:	e0bffc17 	ldw	r2,-16(fp)
 402e838:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 402e83c:	e0bffe17 	ldw	r2,-8(fp)
 402e840:	00bfcf16 	blt	zero,r2,402e780 <__flash_rwdata_start+0xffffe46c>
 402e844:	00000106 	br	402e84c <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
 402e848:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
 402e84c:	e0fff517 	ldw	r3,-44(fp)
 402e850:	e0bffd17 	ldw	r2,-12(fp)
 402e854:	1880141e 	bne	r3,r2,402e8a8 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 402e858:	e0bfff17 	ldw	r2,-4(fp)
 402e85c:	1090000c 	andi	r2,r2,16384
 402e860:	1000131e 	bne	r2,zero,402e8b0 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 402e864:	0001883a 	nop
 402e868:	e0bffc17 	ldw	r2,-16(fp)
 402e86c:	10c00a17 	ldw	r3,40(r2)
 402e870:	e0bff717 	ldw	r2,-36(fp)
 402e874:	1880051e 	bne	r3,r2,402e88c <altera_avalon_jtag_uart_read+0x138>
 402e878:	e0bffc17 	ldw	r2,-16(fp)
 402e87c:	10c00917 	ldw	r3,36(r2)
 402e880:	e0bffc17 	ldw	r2,-16(fp)
 402e884:	10800117 	ldw	r2,4(r2)
 402e888:	18bff736 	bltu	r3,r2,402e868 <__flash_rwdata_start+0xffffe554>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 402e88c:	e0bffc17 	ldw	r2,-16(fp)
 402e890:	10c00a17 	ldw	r3,40(r2)
 402e894:	e0bff717 	ldw	r2,-36(fp)
 402e898:	18800726 	beq	r3,r2,402e8b8 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 402e89c:	e0bffe17 	ldw	r2,-8(fp)
 402e8a0:	00bfb716 	blt	zero,r2,402e780 <__flash_rwdata_start+0xffffe46c>
 402e8a4:	00000506 	br	402e8bc <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
 402e8a8:	0001883a 	nop
 402e8ac:	00000306 	br	402e8bc <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
 402e8b0:	0001883a 	nop
 402e8b4:	00000106 	br	402e8bc <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
 402e8b8:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 402e8bc:	e0fff517 	ldw	r3,-44(fp)
 402e8c0:	e0bffd17 	ldw	r2,-12(fp)
 402e8c4:	18801826 	beq	r3,r2,402e928 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402e8c8:	0005303a 	rdctl	r2,status
 402e8cc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402e8d0:	e0fffb17 	ldw	r3,-20(fp)
 402e8d4:	00bfff84 	movi	r2,-2
 402e8d8:	1884703a 	and	r2,r3,r2
 402e8dc:	1001703a 	wrctl	status,r2
  
  return context;
 402e8e0:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 402e8e4:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 402e8e8:	e0bffc17 	ldw	r2,-16(fp)
 402e8ec:	10800817 	ldw	r2,32(r2)
 402e8f0:	10c00054 	ori	r3,r2,1
 402e8f4:	e0bffc17 	ldw	r2,-16(fp)
 402e8f8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 402e8fc:	e0bffc17 	ldw	r2,-16(fp)
 402e900:	10800017 	ldw	r2,0(r2)
 402e904:	10800104 	addi	r2,r2,4
 402e908:	1007883a 	mov	r3,r2
 402e90c:	e0bffc17 	ldw	r2,-16(fp)
 402e910:	10800817 	ldw	r2,32(r2)
 402e914:	18800035 	stwio	r2,0(r3)
 402e918:	e0bffa17 	ldw	r2,-24(fp)
 402e91c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402e920:	e0bff917 	ldw	r2,-28(fp)
 402e924:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 402e928:	e0fff517 	ldw	r3,-44(fp)
 402e92c:	e0bffd17 	ldw	r2,-12(fp)
 402e930:	18800426 	beq	r3,r2,402e944 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
 402e934:	e0fff517 	ldw	r3,-44(fp)
 402e938:	e0bffd17 	ldw	r2,-12(fp)
 402e93c:	1885c83a 	sub	r2,r3,r2
 402e940:	00000606 	br	402e95c <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
 402e944:	e0bfff17 	ldw	r2,-4(fp)
 402e948:	1090000c 	andi	r2,r2,16384
 402e94c:	10000226 	beq	r2,zero,402e958 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
 402e950:	00bffd44 	movi	r2,-11
 402e954:	00000106 	br	402e95c <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
 402e958:	00bffec4 	movi	r2,-5
}
 402e95c:	e037883a 	mov	sp,fp
 402e960:	dfc00117 	ldw	ra,4(sp)
 402e964:	df000017 	ldw	fp,0(sp)
 402e968:	dec00204 	addi	sp,sp,8
 402e96c:	f800283a 	ret

0402e970 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 402e970:	defff304 	addi	sp,sp,-52
 402e974:	dfc00c15 	stw	ra,48(sp)
 402e978:	df000b15 	stw	fp,44(sp)
 402e97c:	df000b04 	addi	fp,sp,44
 402e980:	e13ffc15 	stw	r4,-16(fp)
 402e984:	e17ffd15 	stw	r5,-12(fp)
 402e988:	e1bffe15 	stw	r6,-8(fp)
 402e98c:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 402e990:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 402e994:	e0bffd17 	ldw	r2,-12(fp)
 402e998:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 402e99c:	00003706 	br	402ea7c <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 402e9a0:	e0bffc17 	ldw	r2,-16(fp)
 402e9a4:	10800c17 	ldw	r2,48(r2)
 402e9a8:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
 402e9ac:	e0bffc17 	ldw	r2,-16(fp)
 402e9b0:	10800d17 	ldw	r2,52(r2)
 402e9b4:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 402e9b8:	e0fff917 	ldw	r3,-28(fp)
 402e9bc:	e0bff517 	ldw	r2,-44(fp)
 402e9c0:	1880062e 	bgeu	r3,r2,402e9dc <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 402e9c4:	e0fff517 	ldw	r3,-44(fp)
 402e9c8:	e0bff917 	ldw	r2,-28(fp)
 402e9cc:	1885c83a 	sub	r2,r3,r2
 402e9d0:	10bfffc4 	addi	r2,r2,-1
 402e9d4:	e0bff615 	stw	r2,-40(fp)
 402e9d8:	00000b06 	br	402ea08 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 402e9dc:	e0bff517 	ldw	r2,-44(fp)
 402e9e0:	10000526 	beq	r2,zero,402e9f8 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 402e9e4:	00c20004 	movi	r3,2048
 402e9e8:	e0bff917 	ldw	r2,-28(fp)
 402e9ec:	1885c83a 	sub	r2,r3,r2
 402e9f0:	e0bff615 	stw	r2,-40(fp)
 402e9f4:	00000406 	br	402ea08 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 402e9f8:	00c1ffc4 	movi	r3,2047
 402e9fc:	e0bff917 	ldw	r2,-28(fp)
 402ea00:	1885c83a 	sub	r2,r3,r2
 402ea04:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 402ea08:	e0bff617 	ldw	r2,-40(fp)
 402ea0c:	10001e26 	beq	r2,zero,402ea88 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
 402ea10:	e0fffe17 	ldw	r3,-8(fp)
 402ea14:	e0bff617 	ldw	r2,-40(fp)
 402ea18:	1880022e 	bgeu	r3,r2,402ea24 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
 402ea1c:	e0bffe17 	ldw	r2,-8(fp)
 402ea20:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 402ea24:	e0bffc17 	ldw	r2,-16(fp)
 402ea28:	10c20e04 	addi	r3,r2,2104
 402ea2c:	e0bff917 	ldw	r2,-28(fp)
 402ea30:	1885883a 	add	r2,r3,r2
 402ea34:	e1bff617 	ldw	r6,-40(fp)
 402ea38:	e17ffd17 	ldw	r5,-12(fp)
 402ea3c:	1009883a 	mov	r4,r2
 402ea40:	4025e9c0 	call	4025e9c <memcpy>
      ptr   += n;
 402ea44:	e0fffd17 	ldw	r3,-12(fp)
 402ea48:	e0bff617 	ldw	r2,-40(fp)
 402ea4c:	1885883a 	add	r2,r3,r2
 402ea50:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 402ea54:	e0fffe17 	ldw	r3,-8(fp)
 402ea58:	e0bff617 	ldw	r2,-40(fp)
 402ea5c:	1885c83a 	sub	r2,r3,r2
 402ea60:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 402ea64:	e0fff917 	ldw	r3,-28(fp)
 402ea68:	e0bff617 	ldw	r2,-40(fp)
 402ea6c:	1885883a 	add	r2,r3,r2
 402ea70:	10c1ffcc 	andi	r3,r2,2047
 402ea74:	e0bffc17 	ldw	r2,-16(fp)
 402ea78:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 402ea7c:	e0bffe17 	ldw	r2,-8(fp)
 402ea80:	00bfc716 	blt	zero,r2,402e9a0 <__flash_rwdata_start+0xffffe68c>
 402ea84:	00000106 	br	402ea8c <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
 402ea88:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402ea8c:	0005303a 	rdctl	r2,status
 402ea90:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402ea94:	e0fffb17 	ldw	r3,-20(fp)
 402ea98:	00bfff84 	movi	r2,-2
 402ea9c:	1884703a 	and	r2,r3,r2
 402eaa0:	1001703a 	wrctl	status,r2
  
  return context;
 402eaa4:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 402eaa8:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 402eaac:	e0bffc17 	ldw	r2,-16(fp)
 402eab0:	10800817 	ldw	r2,32(r2)
 402eab4:	10c00094 	ori	r3,r2,2
 402eab8:	e0bffc17 	ldw	r2,-16(fp)
 402eabc:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 402eac0:	e0bffc17 	ldw	r2,-16(fp)
 402eac4:	10800017 	ldw	r2,0(r2)
 402eac8:	10800104 	addi	r2,r2,4
 402eacc:	1007883a 	mov	r3,r2
 402ead0:	e0bffc17 	ldw	r2,-16(fp)
 402ead4:	10800817 	ldw	r2,32(r2)
 402ead8:	18800035 	stwio	r2,0(r3)
 402eadc:	e0bffa17 	ldw	r2,-24(fp)
 402eae0:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402eae4:	e0bff817 	ldw	r2,-32(fp)
 402eae8:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 402eaec:	e0bffe17 	ldw	r2,-8(fp)
 402eaf0:	0080100e 	bge	zero,r2,402eb34 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
 402eaf4:	e0bfff17 	ldw	r2,-4(fp)
 402eaf8:	1090000c 	andi	r2,r2,16384
 402eafc:	1000101e 	bne	r2,zero,402eb40 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 402eb00:	0001883a 	nop
 402eb04:	e0bffc17 	ldw	r2,-16(fp)
 402eb08:	10c00d17 	ldw	r3,52(r2)
 402eb0c:	e0bff517 	ldw	r2,-44(fp)
 402eb10:	1880051e 	bne	r3,r2,402eb28 <altera_avalon_jtag_uart_write+0x1b8>
 402eb14:	e0bffc17 	ldw	r2,-16(fp)
 402eb18:	10c00917 	ldw	r3,36(r2)
 402eb1c:	e0bffc17 	ldw	r2,-16(fp)
 402eb20:	10800117 	ldw	r2,4(r2)
 402eb24:	18bff736 	bltu	r3,r2,402eb04 <__flash_rwdata_start+0xffffe7f0>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 402eb28:	e0bffc17 	ldw	r2,-16(fp)
 402eb2c:	10800917 	ldw	r2,36(r2)
 402eb30:	1000051e 	bne	r2,zero,402eb48 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
 402eb34:	e0bffe17 	ldw	r2,-8(fp)
 402eb38:	00bfd016 	blt	zero,r2,402ea7c <__flash_rwdata_start+0xffffe768>
 402eb3c:	00000306 	br	402eb4c <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
 402eb40:	0001883a 	nop
 402eb44:	00000106 	br	402eb4c <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
 402eb48:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 402eb4c:	e0fffd17 	ldw	r3,-12(fp)
 402eb50:	e0bff717 	ldw	r2,-36(fp)
 402eb54:	18800426 	beq	r3,r2,402eb68 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
 402eb58:	e0fffd17 	ldw	r3,-12(fp)
 402eb5c:	e0bff717 	ldw	r2,-36(fp)
 402eb60:	1885c83a 	sub	r2,r3,r2
 402eb64:	00000606 	br	402eb80 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
 402eb68:	e0bfff17 	ldw	r2,-4(fp)
 402eb6c:	1090000c 	andi	r2,r2,16384
 402eb70:	10000226 	beq	r2,zero,402eb7c <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
 402eb74:	00bffd44 	movi	r2,-11
 402eb78:	00000106 	br	402eb80 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 402eb7c:	00bffec4 	movi	r2,-5
}
 402eb80:	e037883a 	mov	sp,fp
 402eb84:	dfc00117 	ldw	ra,4(sp)
 402eb88:	df000017 	ldw	fp,0(sp)
 402eb8c:	dec00204 	addi	sp,sp,8
 402eb90:	f800283a 	ret

0402eb94 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
 402eb94:	defffa04 	addi	sp,sp,-24
 402eb98:	dfc00515 	stw	ra,20(sp)
 402eb9c:	df000415 	stw	fp,16(sp)
 402eba0:	df000404 	addi	fp,sp,16
 402eba4:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
 402eba8:	0007883a 	mov	r3,zero
 402ebac:	e0bfff17 	ldw	r2,-4(fp)
 402ebb0:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
 402ebb4:	e0bfff17 	ldw	r2,-4(fp)
 402ebb8:	10800104 	addi	r2,r2,4
 402ebbc:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402ebc0:	0005303a 	rdctl	r2,status
 402ebc4:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402ebc8:	e0fffd17 	ldw	r3,-12(fp)
 402ebcc:	00bfff84 	movi	r2,-2
 402ebd0:	1884703a 	and	r2,r3,r2
 402ebd4:	1001703a 	wrctl	status,r2
  
  return context;
 402ebd8:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
 402ebdc:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
 402ebe0:	402f80c0 	call	402f80c <alt_tick>
 402ebe4:	e0bffc17 	ldw	r2,-16(fp)
 402ebe8:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402ebec:	e0bffe17 	ldw	r2,-8(fp)
 402ebf0:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
 402ebf4:	0001883a 	nop
 402ebf8:	e037883a 	mov	sp,fp
 402ebfc:	dfc00117 	ldw	ra,4(sp)
 402ec00:	df000017 	ldw	fp,0(sp)
 402ec04:	dec00204 	addi	sp,sp,8
 402ec08:	f800283a 	ret

0402ec0c <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
 402ec0c:	defff804 	addi	sp,sp,-32
 402ec10:	dfc00715 	stw	ra,28(sp)
 402ec14:	df000615 	stw	fp,24(sp)
 402ec18:	df000604 	addi	fp,sp,24
 402ec1c:	e13ffc15 	stw	r4,-16(fp)
 402ec20:	e17ffd15 	stw	r5,-12(fp)
 402ec24:	e1bffe15 	stw	r6,-8(fp)
 402ec28:	e1ffff15 	stw	r7,-4(fp)
 402ec2c:	e0bfff17 	ldw	r2,-4(fp)
 402ec30:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
 402ec34:	d0a01e17 	ldw	r2,-32648(gp)
 402ec38:	1000021e 	bne	r2,zero,402ec44 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
 402ec3c:	e0bffb17 	ldw	r2,-20(fp)
 402ec40:	d0a01e15 	stw	r2,-32648(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
 402ec44:	e0bffc17 	ldw	r2,-16(fp)
 402ec48:	10800104 	addi	r2,r2,4
 402ec4c:	00c001c4 	movi	r3,7
 402ec50:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
 402ec54:	d8000015 	stw	zero,0(sp)
 402ec58:	e1fffc17 	ldw	r7,-16(fp)
 402ec5c:	018100f4 	movhi	r6,1027
 402ec60:	31bae504 	addi	r6,r6,-5228
 402ec64:	e17ffe17 	ldw	r5,-8(fp)
 402ec68:	e13ffd17 	ldw	r4,-12(fp)
 402ec6c:	402f0ec0 	call	402f0ec <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
 402ec70:	0001883a 	nop
 402ec74:	e037883a 	mov	sp,fp
 402ec78:	dfc00117 	ldw	ra,4(sp)
 402ec7c:	df000017 	ldw	fp,0(sp)
 402ec80:	dec00204 	addi	sp,sp,8
 402ec84:	f800283a 	ret

0402ec88 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 402ec88:	defff504 	addi	sp,sp,-44
 402ec8c:	df000a15 	stw	fp,40(sp)
 402ec90:	df000a04 	addi	fp,sp,40
 402ec94:	e13ffc15 	stw	r4,-16(fp)
 402ec98:	e17ffd15 	stw	r5,-12(fp)
 402ec9c:	e1bffe15 	stw	r6,-8(fp)
 402eca0:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 402eca4:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 402eca8:	d0a01e17 	ldw	r2,-32648(gp)
  
  if (alt_ticks_per_second ())
 402ecac:	10003c26 	beq	r2,zero,402eda0 <alt_alarm_start+0x118>
  {
    if (alarm)
 402ecb0:	e0bffc17 	ldw	r2,-16(fp)
 402ecb4:	10003826 	beq	r2,zero,402ed98 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
 402ecb8:	e0bffc17 	ldw	r2,-16(fp)
 402ecbc:	e0fffe17 	ldw	r3,-8(fp)
 402ecc0:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 402ecc4:	e0bffc17 	ldw	r2,-16(fp)
 402ecc8:	e0ffff17 	ldw	r3,-4(fp)
 402eccc:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402ecd0:	0005303a 	rdctl	r2,status
 402ecd4:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402ecd8:	e0fff917 	ldw	r3,-28(fp)
 402ecdc:	00bfff84 	movi	r2,-2
 402ece0:	1884703a 	and	r2,r3,r2
 402ece4:	1001703a 	wrctl	status,r2
  
  return context;
 402ece8:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
 402ecec:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 402ecf0:	d0a01f17 	ldw	r2,-32644(gp)
      
      current_nticks = alt_nticks();
 402ecf4:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 402ecf8:	e0fffd17 	ldw	r3,-12(fp)
 402ecfc:	e0bff617 	ldw	r2,-40(fp)
 402ed00:	1885883a 	add	r2,r3,r2
 402ed04:	10c00044 	addi	r3,r2,1
 402ed08:	e0bffc17 	ldw	r2,-16(fp)
 402ed0c:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 402ed10:	e0bffc17 	ldw	r2,-16(fp)
 402ed14:	10c00217 	ldw	r3,8(r2)
 402ed18:	e0bff617 	ldw	r2,-40(fp)
 402ed1c:	1880042e 	bgeu	r3,r2,402ed30 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
 402ed20:	e0bffc17 	ldw	r2,-16(fp)
 402ed24:	00c00044 	movi	r3,1
 402ed28:	10c00405 	stb	r3,16(r2)
 402ed2c:	00000206 	br	402ed38 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
 402ed30:	e0bffc17 	ldw	r2,-16(fp)
 402ed34:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 402ed38:	e0bffc17 	ldw	r2,-16(fp)
 402ed3c:	d0e00e04 	addi	r3,gp,-32712
 402ed40:	e0fffa15 	stw	r3,-24(fp)
 402ed44:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 402ed48:	e0bffb17 	ldw	r2,-20(fp)
 402ed4c:	e0fffa17 	ldw	r3,-24(fp)
 402ed50:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 402ed54:	e0bffa17 	ldw	r2,-24(fp)
 402ed58:	10c00017 	ldw	r3,0(r2)
 402ed5c:	e0bffb17 	ldw	r2,-20(fp)
 402ed60:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 402ed64:	e0bffa17 	ldw	r2,-24(fp)
 402ed68:	10800017 	ldw	r2,0(r2)
 402ed6c:	e0fffb17 	ldw	r3,-20(fp)
 402ed70:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 402ed74:	e0bffa17 	ldw	r2,-24(fp)
 402ed78:	e0fffb17 	ldw	r3,-20(fp)
 402ed7c:	10c00015 	stw	r3,0(r2)
 402ed80:	e0bff817 	ldw	r2,-32(fp)
 402ed84:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402ed88:	e0bff717 	ldw	r2,-36(fp)
 402ed8c:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 402ed90:	0005883a 	mov	r2,zero
 402ed94:	00000306 	br	402eda4 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
 402ed98:	00bffa84 	movi	r2,-22
 402ed9c:	00000106 	br	402eda4 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
 402eda0:	00bfde84 	movi	r2,-134
  }
}
 402eda4:	e037883a 	mov	sp,fp
 402eda8:	df000017 	ldw	fp,0(sp)
 402edac:	dec00104 	addi	sp,sp,4
 402edb0:	f800283a 	ret

0402edb4 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
 402edb4:	defffa04 	addi	sp,sp,-24
 402edb8:	dfc00515 	stw	ra,20(sp)
 402edbc:	df000415 	stw	fp,16(sp)
 402edc0:	df000404 	addi	fp,sp,16
 402edc4:	e13fff15 	stw	r4,-4(fp)
  int big_loops;
  alt_u32 cycles_per_loop;
  
  if (!strcmp(NIOS2_CPU_IMPLEMENTATION,"tiny"))
  {
    cycles_per_loop = 9;
 402edc8:	00800244 	movi	r2,9
 402edcc:	e0bffd15 	stw	r2,-12(fp)
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
 402edd0:	014003f4 	movhi	r5,15
 402edd4:	29509004 	addi	r5,r5,16960
 402edd8:	e13ffd17 	ldw	r4,-12(fp)
 402eddc:	40208380 	call	4020838 <__mulsi3>
 402ede0:	100b883a 	mov	r5,r2
 402ede4:	0100bef4 	movhi	r4,763
 402ede8:	213c2004 	addi	r4,r4,-3968
 402edec:	402077c0 	call	402077c <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
 402edf0:	100b883a 	mov	r5,r2
 402edf4:	01200034 	movhi	r4,32768
 402edf8:	213fffc4 	addi	r4,r4,-1
 402edfc:	402077c0 	call	402077c <__udivsi3>
 402ee00:	100b883a 	mov	r5,r2
 402ee04:	e13fff17 	ldw	r4,-4(fp)
 402ee08:	402077c0 	call	402077c <__udivsi3>
 402ee0c:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
 402ee10:	e0bffe17 	ldw	r2,-8(fp)
 402ee14:	10002a26 	beq	r2,zero,402eec0 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
 402ee18:	e03ffc15 	stw	zero,-16(fp)
 402ee1c:	00001706 	br	402ee7c <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
 402ee20:	00a00034 	movhi	r2,32768
 402ee24:	10bfffc4 	addi	r2,r2,-1
 402ee28:	10bfffc4 	addi	r2,r2,-1
 402ee2c:	103ffe1e 	bne	r2,zero,402ee28 <__flash_rwdata_start+0xffffeb14>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
 402ee30:	014003f4 	movhi	r5,15
 402ee34:	29509004 	addi	r5,r5,16960
 402ee38:	e13ffd17 	ldw	r4,-12(fp)
 402ee3c:	40208380 	call	4020838 <__mulsi3>
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
 402ee40:	100b883a 	mov	r5,r2
 402ee44:	0100bef4 	movhi	r4,763
 402ee48:	213c2004 	addi	r4,r4,-3968
 402ee4c:	402077c0 	call	402077c <__udivsi3>
 402ee50:	100b883a 	mov	r5,r2
 402ee54:	01200034 	movhi	r4,32768
 402ee58:	213fffc4 	addi	r4,r4,-1
 402ee5c:	402077c0 	call	402077c <__udivsi3>
 402ee60:	1007883a 	mov	r3,r2
 402ee64:	e0bfff17 	ldw	r2,-4(fp)
 402ee68:	10c5c83a 	sub	r2,r2,r3
 402ee6c:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
 402ee70:	e0bffc17 	ldw	r2,-16(fp)
 402ee74:	10800044 	addi	r2,r2,1
 402ee78:	e0bffc15 	stw	r2,-16(fp)
 402ee7c:	e0fffc17 	ldw	r3,-16(fp)
 402ee80:	e0bffe17 	ldw	r2,-8(fp)
 402ee84:	18bfe616 	blt	r3,r2,402ee20 <__flash_rwdata_start+0xffffeb0c>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 402ee88:	014003f4 	movhi	r5,15
 402ee8c:	29509004 	addi	r5,r5,16960
 402ee90:	e13ffd17 	ldw	r4,-12(fp)
 402ee94:	40208380 	call	4020838 <__mulsi3>
 402ee98:	100b883a 	mov	r5,r2
 402ee9c:	0100bef4 	movhi	r4,763
 402eea0:	213c2004 	addi	r4,r4,-3968
 402eea4:	402077c0 	call	402077c <__udivsi3>
 402eea8:	e17fff17 	ldw	r5,-4(fp)
 402eeac:	1009883a 	mov	r4,r2
 402eeb0:	40208380 	call	4020838 <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 402eeb4:	10bfffc4 	addi	r2,r2,-1
 402eeb8:	103ffe1e 	bne	r2,zero,402eeb4 <__flash_rwdata_start+0xffffeba0>
 402eebc:	00000d06 	br	402eef4 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 402eec0:	014003f4 	movhi	r5,15
 402eec4:	29509004 	addi	r5,r5,16960
 402eec8:	e13ffd17 	ldw	r4,-12(fp)
 402eecc:	40208380 	call	4020838 <__mulsi3>
 402eed0:	100b883a 	mov	r5,r2
 402eed4:	0100bef4 	movhi	r4,763
 402eed8:	213c2004 	addi	r4,r4,-3968
 402eedc:	402077c0 	call	402077c <__udivsi3>
 402eee0:	e17fff17 	ldw	r5,-4(fp)
 402eee4:	1009883a 	mov	r4,r2
 402eee8:	40208380 	call	4020838 <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 402eeec:	10bfffc4 	addi	r2,r2,-1
 402eef0:	00bffe16 	blt	zero,r2,402eeec <__flash_rwdata_start+0xffffebd8>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
 402eef4:	0005883a 	mov	r2,zero
}
 402eef8:	e037883a 	mov	sp,fp
 402eefc:	dfc00117 	ldw	ra,4(sp)
 402ef00:	df000017 	ldw	fp,0(sp)
 402ef04:	dec00204 	addi	sp,sp,8
 402ef08:	f800283a 	ret

0402ef0c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 402ef0c:	deffff04 	addi	sp,sp,-4
 402ef10:	df000015 	stw	fp,0(sp)
 402ef14:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 402ef18:	0001883a 	nop
 402ef1c:	e037883a 	mov	sp,fp
 402ef20:	df000017 	ldw	fp,0(sp)
 402ef24:	dec00104 	addi	sp,sp,4
 402ef28:	f800283a 	ret

0402ef2c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402ef2c:	defffe04 	addi	sp,sp,-8
 402ef30:	dfc00115 	stw	ra,4(sp)
 402ef34:	df000015 	stw	fp,0(sp)
 402ef38:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402ef3c:	d0a00b17 	ldw	r2,-32724(gp)
 402ef40:	10000326 	beq	r2,zero,402ef50 <alt_get_errno+0x24>
 402ef44:	d0a00b17 	ldw	r2,-32724(gp)
 402ef48:	103ee83a 	callr	r2
 402ef4c:	00000106 	br	402ef54 <alt_get_errno+0x28>
 402ef50:	d0a01704 	addi	r2,gp,-32676
}
 402ef54:	e037883a 	mov	sp,fp
 402ef58:	dfc00117 	ldw	ra,4(sp)
 402ef5c:	df000017 	ldw	fp,0(sp)
 402ef60:	dec00204 	addi	sp,sp,8
 402ef64:	f800283a 	ret

0402ef68 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 402ef68:	defffa04 	addi	sp,sp,-24
 402ef6c:	dfc00515 	stw	ra,20(sp)
 402ef70:	df000415 	stw	fp,16(sp)
 402ef74:	df000404 	addi	fp,sp,16
 402ef78:	e13ffe15 	stw	r4,-8(fp)
 402ef7c:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 402ef80:	e0bffe17 	ldw	r2,-8(fp)
 402ef84:	10000326 	beq	r2,zero,402ef94 <alt_dev_llist_insert+0x2c>
 402ef88:	e0bffe17 	ldw	r2,-8(fp)
 402ef8c:	10800217 	ldw	r2,8(r2)
 402ef90:	1000061e 	bne	r2,zero,402efac <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 402ef94:	402ef2c0 	call	402ef2c <alt_get_errno>
 402ef98:	1007883a 	mov	r3,r2
 402ef9c:	00800584 	movi	r2,22
 402efa0:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 402efa4:	00bffa84 	movi	r2,-22
 402efa8:	00001306 	br	402eff8 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 402efac:	e0bffe17 	ldw	r2,-8(fp)
 402efb0:	e0ffff17 	ldw	r3,-4(fp)
 402efb4:	e0fffc15 	stw	r3,-16(fp)
 402efb8:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 402efbc:	e0bffd17 	ldw	r2,-12(fp)
 402efc0:	e0fffc17 	ldw	r3,-16(fp)
 402efc4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 402efc8:	e0bffc17 	ldw	r2,-16(fp)
 402efcc:	10c00017 	ldw	r3,0(r2)
 402efd0:	e0bffd17 	ldw	r2,-12(fp)
 402efd4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 402efd8:	e0bffc17 	ldw	r2,-16(fp)
 402efdc:	10800017 	ldw	r2,0(r2)
 402efe0:	e0fffd17 	ldw	r3,-12(fp)
 402efe4:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 402efe8:	e0bffc17 	ldw	r2,-16(fp)
 402efec:	e0fffd17 	ldw	r3,-12(fp)
 402eff0:	10c00015 	stw	r3,0(r2)

  return 0;  
 402eff4:	0005883a 	mov	r2,zero
}
 402eff8:	e037883a 	mov	sp,fp
 402effc:	dfc00117 	ldw	ra,4(sp)
 402f000:	df000017 	ldw	fp,0(sp)
 402f004:	dec00204 	addi	sp,sp,8
 402f008:	f800283a 	ret

0402f00c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 402f00c:	defffd04 	addi	sp,sp,-12
 402f010:	dfc00215 	stw	ra,8(sp)
 402f014:	df000115 	stw	fp,4(sp)
 402f018:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 402f01c:	008100f4 	movhi	r2,1027
 402f020:	10bff004 	addi	r2,r2,-64
 402f024:	e0bfff15 	stw	r2,-4(fp)
 402f028:	00000606 	br	402f044 <_do_ctors+0x38>
        (*ctor) (); 
 402f02c:	e0bfff17 	ldw	r2,-4(fp)
 402f030:	10800017 	ldw	r2,0(r2)
 402f034:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 402f038:	e0bfff17 	ldw	r2,-4(fp)
 402f03c:	10bfff04 	addi	r2,r2,-4
 402f040:	e0bfff15 	stw	r2,-4(fp)
 402f044:	e0ffff17 	ldw	r3,-4(fp)
 402f048:	008100f4 	movhi	r2,1027
 402f04c:	10bff104 	addi	r2,r2,-60
 402f050:	18bff62e 	bgeu	r3,r2,402f02c <__flash_rwdata_start+0xffffed18>
        (*ctor) (); 
}
 402f054:	0001883a 	nop
 402f058:	e037883a 	mov	sp,fp
 402f05c:	dfc00117 	ldw	ra,4(sp)
 402f060:	df000017 	ldw	fp,0(sp)
 402f064:	dec00204 	addi	sp,sp,8
 402f068:	f800283a 	ret

0402f06c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 402f06c:	defffd04 	addi	sp,sp,-12
 402f070:	dfc00215 	stw	ra,8(sp)
 402f074:	df000115 	stw	fp,4(sp)
 402f078:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 402f07c:	008100f4 	movhi	r2,1027
 402f080:	10bff004 	addi	r2,r2,-64
 402f084:	e0bfff15 	stw	r2,-4(fp)
 402f088:	00000606 	br	402f0a4 <_do_dtors+0x38>
        (*dtor) (); 
 402f08c:	e0bfff17 	ldw	r2,-4(fp)
 402f090:	10800017 	ldw	r2,0(r2)
 402f094:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 402f098:	e0bfff17 	ldw	r2,-4(fp)
 402f09c:	10bfff04 	addi	r2,r2,-4
 402f0a0:	e0bfff15 	stw	r2,-4(fp)
 402f0a4:	e0ffff17 	ldw	r3,-4(fp)
 402f0a8:	008100f4 	movhi	r2,1027
 402f0ac:	10bff104 	addi	r2,r2,-60
 402f0b0:	18bff62e 	bgeu	r3,r2,402f08c <__flash_rwdata_start+0xffffed78>
        (*dtor) (); 
}
 402f0b4:	0001883a 	nop
 402f0b8:	e037883a 	mov	sp,fp
 402f0bc:	dfc00117 	ldw	ra,4(sp)
 402f0c0:	df000017 	ldw	fp,0(sp)
 402f0c4:	dec00204 	addi	sp,sp,8
 402f0c8:	f800283a 	ret

0402f0cc <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 402f0cc:	deffff04 	addi	sp,sp,-4
 402f0d0:	df000015 	stw	fp,0(sp)
 402f0d4:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
 402f0d8:	0001883a 	nop
 402f0dc:	e037883a 	mov	sp,fp
 402f0e0:	df000017 	ldw	fp,0(sp)
 402f0e4:	dec00104 	addi	sp,sp,4
 402f0e8:	f800283a 	ret

0402f0ec <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 402f0ec:	defff904 	addi	sp,sp,-28
 402f0f0:	dfc00615 	stw	ra,24(sp)
 402f0f4:	df000515 	stw	fp,20(sp)
 402f0f8:	df000504 	addi	fp,sp,20
 402f0fc:	e13ffc15 	stw	r4,-16(fp)
 402f100:	e17ffd15 	stw	r5,-12(fp)
 402f104:	e1bffe15 	stw	r6,-8(fp)
 402f108:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 402f10c:	e0800217 	ldw	r2,8(fp)
 402f110:	d8800015 	stw	r2,0(sp)
 402f114:	e1ffff17 	ldw	r7,-4(fp)
 402f118:	e1bffe17 	ldw	r6,-8(fp)
 402f11c:	e17ffd17 	ldw	r5,-12(fp)
 402f120:	e13ffc17 	ldw	r4,-16(fp)
 402f124:	402f29c0 	call	402f29c <alt_iic_isr_register>
}  
 402f128:	e037883a 	mov	sp,fp
 402f12c:	dfc00117 	ldw	ra,4(sp)
 402f130:	df000017 	ldw	fp,0(sp)
 402f134:	dec00204 	addi	sp,sp,8
 402f138:	f800283a 	ret

0402f13c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 402f13c:	defff904 	addi	sp,sp,-28
 402f140:	df000615 	stw	fp,24(sp)
 402f144:	df000604 	addi	fp,sp,24
 402f148:	e13ffe15 	stw	r4,-8(fp)
 402f14c:	e17fff15 	stw	r5,-4(fp)
 402f150:	e0bfff17 	ldw	r2,-4(fp)
 402f154:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402f158:	0005303a 	rdctl	r2,status
 402f15c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402f160:	e0fffb17 	ldw	r3,-20(fp)
 402f164:	00bfff84 	movi	r2,-2
 402f168:	1884703a 	and	r2,r3,r2
 402f16c:	1001703a 	wrctl	status,r2
  
  return context;
 402f170:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 402f174:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
 402f178:	00c00044 	movi	r3,1
 402f17c:	e0bffa17 	ldw	r2,-24(fp)
 402f180:	1884983a 	sll	r2,r3,r2
 402f184:	1007883a 	mov	r3,r2
 402f188:	d0a01d17 	ldw	r2,-32652(gp)
 402f18c:	1884b03a 	or	r2,r3,r2
 402f190:	d0a01d15 	stw	r2,-32652(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 402f194:	d0a01d17 	ldw	r2,-32652(gp)
 402f198:	100170fa 	wrctl	ienable,r2
 402f19c:	e0bffc17 	ldw	r2,-16(fp)
 402f1a0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402f1a4:	e0bffd17 	ldw	r2,-12(fp)
 402f1a8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 402f1ac:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
 402f1b0:	0001883a 	nop
}
 402f1b4:	e037883a 	mov	sp,fp
 402f1b8:	df000017 	ldw	fp,0(sp)
 402f1bc:	dec00104 	addi	sp,sp,4
 402f1c0:	f800283a 	ret

0402f1c4 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 402f1c4:	defff904 	addi	sp,sp,-28
 402f1c8:	df000615 	stw	fp,24(sp)
 402f1cc:	df000604 	addi	fp,sp,24
 402f1d0:	e13ffe15 	stw	r4,-8(fp)
 402f1d4:	e17fff15 	stw	r5,-4(fp)
 402f1d8:	e0bfff17 	ldw	r2,-4(fp)
 402f1dc:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402f1e0:	0005303a 	rdctl	r2,status
 402f1e4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402f1e8:	e0fffb17 	ldw	r3,-20(fp)
 402f1ec:	00bfff84 	movi	r2,-2
 402f1f0:	1884703a 	and	r2,r3,r2
 402f1f4:	1001703a 	wrctl	status,r2
  
  return context;
 402f1f8:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 402f1fc:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
 402f200:	00c00044 	movi	r3,1
 402f204:	e0bffa17 	ldw	r2,-24(fp)
 402f208:	1884983a 	sll	r2,r3,r2
 402f20c:	0084303a 	nor	r2,zero,r2
 402f210:	1007883a 	mov	r3,r2
 402f214:	d0a01d17 	ldw	r2,-32652(gp)
 402f218:	1884703a 	and	r2,r3,r2
 402f21c:	d0a01d15 	stw	r2,-32652(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 402f220:	d0a01d17 	ldw	r2,-32652(gp)
 402f224:	100170fa 	wrctl	ienable,r2
 402f228:	e0bffc17 	ldw	r2,-16(fp)
 402f22c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402f230:	e0bffd17 	ldw	r2,-12(fp)
 402f234:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 402f238:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
 402f23c:	0001883a 	nop
}
 402f240:	e037883a 	mov	sp,fp
 402f244:	df000017 	ldw	fp,0(sp)
 402f248:	dec00104 	addi	sp,sp,4
 402f24c:	f800283a 	ret

0402f250 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 402f250:	defffc04 	addi	sp,sp,-16
 402f254:	df000315 	stw	fp,12(sp)
 402f258:	df000304 	addi	fp,sp,12
 402f25c:	e13ffe15 	stw	r4,-8(fp)
 402f260:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 402f264:	000530fa 	rdctl	r2,ienable
 402f268:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 402f26c:	00c00044 	movi	r3,1
 402f270:	e0bfff17 	ldw	r2,-4(fp)
 402f274:	1884983a 	sll	r2,r3,r2
 402f278:	1007883a 	mov	r3,r2
 402f27c:	e0bffd17 	ldw	r2,-12(fp)
 402f280:	1884703a 	and	r2,r3,r2
 402f284:	1004c03a 	cmpne	r2,r2,zero
 402f288:	10803fcc 	andi	r2,r2,255
}
 402f28c:	e037883a 	mov	sp,fp
 402f290:	df000017 	ldw	fp,0(sp)
 402f294:	dec00104 	addi	sp,sp,4
 402f298:	f800283a 	ret

0402f29c <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 402f29c:	defff504 	addi	sp,sp,-44
 402f2a0:	dfc00a15 	stw	ra,40(sp)
 402f2a4:	df000915 	stw	fp,36(sp)
 402f2a8:	df000904 	addi	fp,sp,36
 402f2ac:	e13ffc15 	stw	r4,-16(fp)
 402f2b0:	e17ffd15 	stw	r5,-12(fp)
 402f2b4:	e1bffe15 	stw	r6,-8(fp)
 402f2b8:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
 402f2bc:	00bffa84 	movi	r2,-22
 402f2c0:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 402f2c4:	e0bffd17 	ldw	r2,-12(fp)
 402f2c8:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 402f2cc:	e0bff817 	ldw	r2,-32(fp)
 402f2d0:	10800808 	cmpgei	r2,r2,32
 402f2d4:	1000271e 	bne	r2,zero,402f374 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402f2d8:	0005303a 	rdctl	r2,status
 402f2dc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402f2e0:	e0fffb17 	ldw	r3,-20(fp)
 402f2e4:	00bfff84 	movi	r2,-2
 402f2e8:	1884703a 	and	r2,r3,r2
 402f2ec:	1001703a 	wrctl	status,r2
  
  return context;
 402f2f0:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 402f2f4:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
 402f2f8:	00800034 	movhi	r2,0
 402f2fc:	1087b504 	addi	r2,r2,7892
 402f300:	e0fff817 	ldw	r3,-32(fp)
 402f304:	180690fa 	slli	r3,r3,3
 402f308:	10c5883a 	add	r2,r2,r3
 402f30c:	e0fffe17 	ldw	r3,-8(fp)
 402f310:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
 402f314:	00800034 	movhi	r2,0
 402f318:	1087b504 	addi	r2,r2,7892
 402f31c:	e0fff817 	ldw	r3,-32(fp)
 402f320:	180690fa 	slli	r3,r3,3
 402f324:	10c5883a 	add	r2,r2,r3
 402f328:	10800104 	addi	r2,r2,4
 402f32c:	e0ffff17 	ldw	r3,-4(fp)
 402f330:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 402f334:	e0bffe17 	ldw	r2,-8(fp)
 402f338:	10000526 	beq	r2,zero,402f350 <alt_iic_isr_register+0xb4>
 402f33c:	e0bff817 	ldw	r2,-32(fp)
 402f340:	100b883a 	mov	r5,r2
 402f344:	e13ffc17 	ldw	r4,-16(fp)
 402f348:	402f13c0 	call	402f13c <alt_ic_irq_enable>
 402f34c:	00000406 	br	402f360 <alt_iic_isr_register+0xc4>
 402f350:	e0bff817 	ldw	r2,-32(fp)
 402f354:	100b883a 	mov	r5,r2
 402f358:	e13ffc17 	ldw	r4,-16(fp)
 402f35c:	402f1c40 	call	402f1c4 <alt_ic_irq_disable>
 402f360:	e0bff715 	stw	r2,-36(fp)
 402f364:	e0bffa17 	ldw	r2,-24(fp)
 402f368:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402f36c:	e0bff917 	ldw	r2,-28(fp)
 402f370:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 402f374:	e0bff717 	ldw	r2,-36(fp)
}
 402f378:	e037883a 	mov	sp,fp
 402f37c:	dfc00117 	ldw	ra,4(sp)
 402f380:	df000017 	ldw	fp,0(sp)
 402f384:	dec00204 	addi	sp,sp,8
 402f388:	f800283a 	ret

0402f38c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 402f38c:	defff804 	addi	sp,sp,-32
 402f390:	dfc00715 	stw	ra,28(sp)
 402f394:	df000615 	stw	fp,24(sp)
 402f398:	dc000515 	stw	r16,20(sp)
 402f39c:	df000604 	addi	fp,sp,24
 402f3a0:	e13ffb15 	stw	r4,-20(fp)
 402f3a4:	e17ffc15 	stw	r5,-16(fp)
 402f3a8:	e1bffd15 	stw	r6,-12(fp)
 402f3ac:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
 402f3b0:	e1bffe17 	ldw	r6,-8(fp)
 402f3b4:	e17ffd17 	ldw	r5,-12(fp)
 402f3b8:	e13ffc17 	ldw	r4,-16(fp)
 402f3bc:	402f6140 	call	402f614 <open>
 402f3c0:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
 402f3c4:	e0bffa17 	ldw	r2,-24(fp)
 402f3c8:	10002216 	blt	r2,zero,402f454 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
 402f3cc:	04000034 	movhi	r16,0
 402f3d0:	84030704 	addi	r16,r16,3100
 402f3d4:	e0bffa17 	ldw	r2,-24(fp)
 402f3d8:	01400304 	movi	r5,12
 402f3dc:	1009883a 	mov	r4,r2
 402f3e0:	40208380 	call	4020838 <__mulsi3>
 402f3e4:	8085883a 	add	r2,r16,r2
 402f3e8:	10c00017 	ldw	r3,0(r2)
 402f3ec:	e0bffb17 	ldw	r2,-20(fp)
 402f3f0:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 402f3f4:	04000034 	movhi	r16,0
 402f3f8:	84030704 	addi	r16,r16,3100
 402f3fc:	e0bffa17 	ldw	r2,-24(fp)
 402f400:	01400304 	movi	r5,12
 402f404:	1009883a 	mov	r4,r2
 402f408:	40208380 	call	4020838 <__mulsi3>
 402f40c:	8085883a 	add	r2,r16,r2
 402f410:	10800104 	addi	r2,r2,4
 402f414:	10c00017 	ldw	r3,0(r2)
 402f418:	e0bffb17 	ldw	r2,-20(fp)
 402f41c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 402f420:	04000034 	movhi	r16,0
 402f424:	84030704 	addi	r16,r16,3100
 402f428:	e0bffa17 	ldw	r2,-24(fp)
 402f42c:	01400304 	movi	r5,12
 402f430:	1009883a 	mov	r4,r2
 402f434:	40208380 	call	4020838 <__mulsi3>
 402f438:	8085883a 	add	r2,r16,r2
 402f43c:	10800204 	addi	r2,r2,8
 402f440:	10c00017 	ldw	r3,0(r2)
 402f444:	e0bffb17 	ldw	r2,-20(fp)
 402f448:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 402f44c:	e13ffa17 	ldw	r4,-24(fp)
 402f450:	402dd9c0 	call	402dd9c <alt_release_fd>
  }
} 
 402f454:	0001883a 	nop
 402f458:	e6ffff04 	addi	sp,fp,-4
 402f45c:	dfc00217 	ldw	ra,8(sp)
 402f460:	df000117 	ldw	fp,4(sp)
 402f464:	dc000017 	ldw	r16,0(sp)
 402f468:	dec00304 	addi	sp,sp,12
 402f46c:	f800283a 	ret

0402f470 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 402f470:	defffb04 	addi	sp,sp,-20
 402f474:	dfc00415 	stw	ra,16(sp)
 402f478:	df000315 	stw	fp,12(sp)
 402f47c:	df000304 	addi	fp,sp,12
 402f480:	e13ffd15 	stw	r4,-12(fp)
 402f484:	e17ffe15 	stw	r5,-8(fp)
 402f488:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 402f48c:	01c07fc4 	movi	r7,511
 402f490:	01800044 	movi	r6,1
 402f494:	e17ffd17 	ldw	r5,-12(fp)
 402f498:	01000034 	movhi	r4,0
 402f49c:	21030a04 	addi	r4,r4,3112
 402f4a0:	402f38c0 	call	402f38c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 402f4a4:	01c07fc4 	movi	r7,511
 402f4a8:	000d883a 	mov	r6,zero
 402f4ac:	e17ffe17 	ldw	r5,-8(fp)
 402f4b0:	01000034 	movhi	r4,0
 402f4b4:	21030704 	addi	r4,r4,3100
 402f4b8:	402f38c0 	call	402f38c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 402f4bc:	01c07fc4 	movi	r7,511
 402f4c0:	01800044 	movi	r6,1
 402f4c4:	e17fff17 	ldw	r5,-4(fp)
 402f4c8:	01000034 	movhi	r4,0
 402f4cc:	21030d04 	addi	r4,r4,3124
 402f4d0:	402f38c0 	call	402f38c <alt_open_fd>
}  
 402f4d4:	0001883a 	nop
 402f4d8:	e037883a 	mov	sp,fp
 402f4dc:	dfc00117 	ldw	ra,4(sp)
 402f4e0:	df000017 	ldw	fp,0(sp)
 402f4e4:	dec00204 	addi	sp,sp,8
 402f4e8:	f800283a 	ret

0402f4ec <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402f4ec:	defffe04 	addi	sp,sp,-8
 402f4f0:	dfc00115 	stw	ra,4(sp)
 402f4f4:	df000015 	stw	fp,0(sp)
 402f4f8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402f4fc:	d0a00b17 	ldw	r2,-32724(gp)
 402f500:	10000326 	beq	r2,zero,402f510 <alt_get_errno+0x24>
 402f504:	d0a00b17 	ldw	r2,-32724(gp)
 402f508:	103ee83a 	callr	r2
 402f50c:	00000106 	br	402f514 <alt_get_errno+0x28>
 402f510:	d0a01704 	addi	r2,gp,-32676
}
 402f514:	e037883a 	mov	sp,fp
 402f518:	dfc00117 	ldw	ra,4(sp)
 402f51c:	df000017 	ldw	fp,0(sp)
 402f520:	dec00204 	addi	sp,sp,8
 402f524:	f800283a 	ret

0402f528 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 402f528:	defffb04 	addi	sp,sp,-20
 402f52c:	dfc00415 	stw	ra,16(sp)
 402f530:	df000315 	stw	fp,12(sp)
 402f534:	dc000215 	stw	r16,8(sp)
 402f538:	df000304 	addi	fp,sp,12
 402f53c:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 402f540:	e0bffe17 	ldw	r2,-8(fp)
 402f544:	10800217 	ldw	r2,8(r2)
 402f548:	10d00034 	orhi	r3,r2,16384
 402f54c:	e0bffe17 	ldw	r2,-8(fp)
 402f550:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 402f554:	e03ffd15 	stw	zero,-12(fp)
 402f558:	00002306 	br	402f5e8 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 402f55c:	04000034 	movhi	r16,0
 402f560:	84030704 	addi	r16,r16,3100
 402f564:	e0bffd17 	ldw	r2,-12(fp)
 402f568:	01400304 	movi	r5,12
 402f56c:	1009883a 	mov	r4,r2
 402f570:	40208380 	call	4020838 <__mulsi3>
 402f574:	8085883a 	add	r2,r16,r2
 402f578:	10c00017 	ldw	r3,0(r2)
 402f57c:	e0bffe17 	ldw	r2,-8(fp)
 402f580:	10800017 	ldw	r2,0(r2)
 402f584:	1880151e 	bne	r3,r2,402f5dc <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 402f588:	04000034 	movhi	r16,0
 402f58c:	84030704 	addi	r16,r16,3100
 402f590:	e0bffd17 	ldw	r2,-12(fp)
 402f594:	01400304 	movi	r5,12
 402f598:	1009883a 	mov	r4,r2
 402f59c:	40208380 	call	4020838 <__mulsi3>
 402f5a0:	8085883a 	add	r2,r16,r2
 402f5a4:	10800204 	addi	r2,r2,8
 402f5a8:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 402f5ac:	10000b0e 	bge	r2,zero,402f5dc <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 402f5b0:	01400304 	movi	r5,12
 402f5b4:	e13ffd17 	ldw	r4,-12(fp)
 402f5b8:	40208380 	call	4020838 <__mulsi3>
 402f5bc:	1007883a 	mov	r3,r2
 402f5c0:	00800034 	movhi	r2,0
 402f5c4:	10830704 	addi	r2,r2,3100
 402f5c8:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 402f5cc:	e0bffe17 	ldw	r2,-8(fp)
 402f5d0:	18800226 	beq	r3,r2,402f5dc <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 402f5d4:	00bffcc4 	movi	r2,-13
 402f5d8:	00000806 	br	402f5fc <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 402f5dc:	e0bffd17 	ldw	r2,-12(fp)
 402f5e0:	10800044 	addi	r2,r2,1
 402f5e4:	e0bffd15 	stw	r2,-12(fp)
 402f5e8:	d0a00a17 	ldw	r2,-32728(gp)
 402f5ec:	1007883a 	mov	r3,r2
 402f5f0:	e0bffd17 	ldw	r2,-12(fp)
 402f5f4:	18bfd92e 	bgeu	r3,r2,402f55c <__flash_rwdata_start+0xfffff248>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 402f5f8:	0005883a 	mov	r2,zero
}
 402f5fc:	e6ffff04 	addi	sp,fp,-4
 402f600:	dfc00217 	ldw	ra,8(sp)
 402f604:	df000117 	ldw	fp,4(sp)
 402f608:	dc000017 	ldw	r16,0(sp)
 402f60c:	dec00304 	addi	sp,sp,12
 402f610:	f800283a 	ret

0402f614 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 402f614:	defff604 	addi	sp,sp,-40
 402f618:	dfc00915 	stw	ra,36(sp)
 402f61c:	df000815 	stw	fp,32(sp)
 402f620:	df000804 	addi	fp,sp,32
 402f624:	e13ffd15 	stw	r4,-12(fp)
 402f628:	e17ffe15 	stw	r5,-8(fp)
 402f62c:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 402f630:	00bfffc4 	movi	r2,-1
 402f634:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 402f638:	00bffb44 	movi	r2,-19
 402f63c:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 402f640:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 402f644:	d1600804 	addi	r5,gp,-32736
 402f648:	e13ffd17 	ldw	r4,-12(fp)
 402f64c:	402f9380 	call	402f938 <alt_find_dev>
 402f650:	e0bff815 	stw	r2,-32(fp)
 402f654:	e0bff817 	ldw	r2,-32(fp)
 402f658:	1000051e 	bne	r2,zero,402f670 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 402f65c:	e13ffd17 	ldw	r4,-12(fp)
 402f660:	402f9c80 	call	402f9c8 <alt_find_file>
 402f664:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 402f668:	00800044 	movi	r2,1
 402f66c:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 402f670:	e0bff817 	ldw	r2,-32(fp)
 402f674:	10002b26 	beq	r2,zero,402f724 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
 402f678:	e13ff817 	ldw	r4,-32(fp)
 402f67c:	402fad00 	call	402fad0 <alt_get_fd>
 402f680:	e0bff915 	stw	r2,-28(fp)
 402f684:	e0bff917 	ldw	r2,-28(fp)
 402f688:	1000030e 	bge	r2,zero,402f698 <open+0x84>
    {
      status = index;
 402f68c:	e0bff917 	ldw	r2,-28(fp)
 402f690:	e0bffa15 	stw	r2,-24(fp)
 402f694:	00002506 	br	402f72c <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
 402f698:	01400304 	movi	r5,12
 402f69c:	e13ff917 	ldw	r4,-28(fp)
 402f6a0:	40208380 	call	4020838 <__mulsi3>
 402f6a4:	1007883a 	mov	r3,r2
 402f6a8:	00800034 	movhi	r2,0
 402f6ac:	10830704 	addi	r2,r2,3100
 402f6b0:	1885883a 	add	r2,r3,r2
 402f6b4:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 402f6b8:	e0fffe17 	ldw	r3,-8(fp)
 402f6bc:	00900034 	movhi	r2,16384
 402f6c0:	10bfffc4 	addi	r2,r2,-1
 402f6c4:	1886703a 	and	r3,r3,r2
 402f6c8:	e0bffc17 	ldw	r2,-16(fp)
 402f6cc:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 402f6d0:	e0bffb17 	ldw	r2,-20(fp)
 402f6d4:	1000051e 	bne	r2,zero,402f6ec <open+0xd8>
 402f6d8:	e13ffc17 	ldw	r4,-16(fp)
 402f6dc:	402f5280 	call	402f528 <alt_file_locked>
 402f6e0:	e0bffa15 	stw	r2,-24(fp)
 402f6e4:	e0bffa17 	ldw	r2,-24(fp)
 402f6e8:	10001016 	blt	r2,zero,402f72c <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 402f6ec:	e0bff817 	ldw	r2,-32(fp)
 402f6f0:	10800317 	ldw	r2,12(r2)
 402f6f4:	10000826 	beq	r2,zero,402f718 <open+0x104>
 402f6f8:	e0bff817 	ldw	r2,-32(fp)
 402f6fc:	10800317 	ldw	r2,12(r2)
 402f700:	e1ffff17 	ldw	r7,-4(fp)
 402f704:	e1bffe17 	ldw	r6,-8(fp)
 402f708:	e17ffd17 	ldw	r5,-12(fp)
 402f70c:	e13ffc17 	ldw	r4,-16(fp)
 402f710:	103ee83a 	callr	r2
 402f714:	00000106 	br	402f71c <open+0x108>
 402f718:	0005883a 	mov	r2,zero
 402f71c:	e0bffa15 	stw	r2,-24(fp)
 402f720:	00000206 	br	402f72c <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
 402f724:	00bffb44 	movi	r2,-19
 402f728:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 402f72c:	e0bffa17 	ldw	r2,-24(fp)
 402f730:	1000090e 	bge	r2,zero,402f758 <open+0x144>
  {
    alt_release_fd (index);  
 402f734:	e13ff917 	ldw	r4,-28(fp)
 402f738:	402dd9c0 	call	402dd9c <alt_release_fd>
    ALT_ERRNO = -status;
 402f73c:	402f4ec0 	call	402f4ec <alt_get_errno>
 402f740:	1007883a 	mov	r3,r2
 402f744:	e0bffa17 	ldw	r2,-24(fp)
 402f748:	0085c83a 	sub	r2,zero,r2
 402f74c:	18800015 	stw	r2,0(r3)
    return -1;
 402f750:	00bfffc4 	movi	r2,-1
 402f754:	00000106 	br	402f75c <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
 402f758:	e0bff917 	ldw	r2,-28(fp)
}
 402f75c:	e037883a 	mov	sp,fp
 402f760:	dfc00117 	ldw	ra,4(sp)
 402f764:	df000017 	ldw	fp,0(sp)
 402f768:	dec00204 	addi	sp,sp,8
 402f76c:	f800283a 	ret

0402f770 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 402f770:	defffa04 	addi	sp,sp,-24
 402f774:	df000515 	stw	fp,20(sp)
 402f778:	df000504 	addi	fp,sp,20
 402f77c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402f780:	0005303a 	rdctl	r2,status
 402f784:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402f788:	e0fffc17 	ldw	r3,-16(fp)
 402f78c:	00bfff84 	movi	r2,-2
 402f790:	1884703a 	and	r2,r3,r2
 402f794:	1001703a 	wrctl	status,r2
  
  return context;
 402f798:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 402f79c:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 402f7a0:	e0bfff17 	ldw	r2,-4(fp)
 402f7a4:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 402f7a8:	e0bffd17 	ldw	r2,-12(fp)
 402f7ac:	10800017 	ldw	r2,0(r2)
 402f7b0:	e0fffd17 	ldw	r3,-12(fp)
 402f7b4:	18c00117 	ldw	r3,4(r3)
 402f7b8:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 402f7bc:	e0bffd17 	ldw	r2,-12(fp)
 402f7c0:	10800117 	ldw	r2,4(r2)
 402f7c4:	e0fffd17 	ldw	r3,-12(fp)
 402f7c8:	18c00017 	ldw	r3,0(r3)
 402f7cc:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 402f7d0:	e0bffd17 	ldw	r2,-12(fp)
 402f7d4:	e0fffd17 	ldw	r3,-12(fp)
 402f7d8:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 402f7dc:	e0bffd17 	ldw	r2,-12(fp)
 402f7e0:	e0fffd17 	ldw	r3,-12(fp)
 402f7e4:	10c00015 	stw	r3,0(r2)
 402f7e8:	e0bffb17 	ldw	r2,-20(fp)
 402f7ec:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402f7f0:	e0bffe17 	ldw	r2,-8(fp)
 402f7f4:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 402f7f8:	0001883a 	nop
 402f7fc:	e037883a 	mov	sp,fp
 402f800:	df000017 	ldw	fp,0(sp)
 402f804:	dec00104 	addi	sp,sp,4
 402f808:	f800283a 	ret

0402f80c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 402f80c:	defffb04 	addi	sp,sp,-20
 402f810:	dfc00415 	stw	ra,16(sp)
 402f814:	df000315 	stw	fp,12(sp)
 402f818:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 402f81c:	d0a00e17 	ldw	r2,-32712(gp)
 402f820:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 402f824:	d0a01f17 	ldw	r2,-32644(gp)
 402f828:	10800044 	addi	r2,r2,1
 402f82c:	d0a01f15 	stw	r2,-32644(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 402f830:	00002e06 	br	402f8ec <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 402f834:	e0bffd17 	ldw	r2,-12(fp)
 402f838:	10800017 	ldw	r2,0(r2)
 402f83c:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 402f840:	e0bffd17 	ldw	r2,-12(fp)
 402f844:	10800403 	ldbu	r2,16(r2)
 402f848:	10803fcc 	andi	r2,r2,255
 402f84c:	10000426 	beq	r2,zero,402f860 <alt_tick+0x54>
 402f850:	d0a01f17 	ldw	r2,-32644(gp)
 402f854:	1000021e 	bne	r2,zero,402f860 <alt_tick+0x54>
    {
      alarm->rollover = 0;
 402f858:	e0bffd17 	ldw	r2,-12(fp)
 402f85c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 402f860:	e0bffd17 	ldw	r2,-12(fp)
 402f864:	10800217 	ldw	r2,8(r2)
 402f868:	d0e01f17 	ldw	r3,-32644(gp)
 402f86c:	18801d36 	bltu	r3,r2,402f8e4 <alt_tick+0xd8>
 402f870:	e0bffd17 	ldw	r2,-12(fp)
 402f874:	10800403 	ldbu	r2,16(r2)
 402f878:	10803fcc 	andi	r2,r2,255
 402f87c:	1000191e 	bne	r2,zero,402f8e4 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 402f880:	e0bffd17 	ldw	r2,-12(fp)
 402f884:	10800317 	ldw	r2,12(r2)
 402f888:	e0fffd17 	ldw	r3,-12(fp)
 402f88c:	18c00517 	ldw	r3,20(r3)
 402f890:	1809883a 	mov	r4,r3
 402f894:	103ee83a 	callr	r2
 402f898:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 402f89c:	e0bfff17 	ldw	r2,-4(fp)
 402f8a0:	1000031e 	bne	r2,zero,402f8b0 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 402f8a4:	e13ffd17 	ldw	r4,-12(fp)
 402f8a8:	402f7700 	call	402f770 <alt_alarm_stop>
 402f8ac:	00000d06 	br	402f8e4 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 402f8b0:	e0bffd17 	ldw	r2,-12(fp)
 402f8b4:	10c00217 	ldw	r3,8(r2)
 402f8b8:	e0bfff17 	ldw	r2,-4(fp)
 402f8bc:	1887883a 	add	r3,r3,r2
 402f8c0:	e0bffd17 	ldw	r2,-12(fp)
 402f8c4:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 402f8c8:	e0bffd17 	ldw	r2,-12(fp)
 402f8cc:	10c00217 	ldw	r3,8(r2)
 402f8d0:	d0a01f17 	ldw	r2,-32644(gp)
 402f8d4:	1880032e 	bgeu	r3,r2,402f8e4 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 402f8d8:	e0bffd17 	ldw	r2,-12(fp)
 402f8dc:	00c00044 	movi	r3,1
 402f8e0:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 402f8e4:	e0bffe17 	ldw	r2,-8(fp)
 402f8e8:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 402f8ec:	e0fffd17 	ldw	r3,-12(fp)
 402f8f0:	d0a00e04 	addi	r2,gp,-32712
 402f8f4:	18bfcf1e 	bne	r3,r2,402f834 <__flash_rwdata_start+0xfffff520>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 402f8f8:	0001883a 	nop
}
 402f8fc:	0001883a 	nop
 402f900:	e037883a 	mov	sp,fp
 402f904:	dfc00117 	ldw	ra,4(sp)
 402f908:	df000017 	ldw	fp,0(sp)
 402f90c:	dec00204 	addi	sp,sp,8
 402f910:	f800283a 	ret

0402f914 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 402f914:	deffff04 	addi	sp,sp,-4
 402f918:	df000015 	stw	fp,0(sp)
 402f91c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 402f920:	000170fa 	wrctl	ienable,zero
}
 402f924:	0001883a 	nop
 402f928:	e037883a 	mov	sp,fp
 402f92c:	df000017 	ldw	fp,0(sp)
 402f930:	dec00104 	addi	sp,sp,4
 402f934:	f800283a 	ret

0402f938 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 402f938:	defffa04 	addi	sp,sp,-24
 402f93c:	dfc00515 	stw	ra,20(sp)
 402f940:	df000415 	stw	fp,16(sp)
 402f944:	df000404 	addi	fp,sp,16
 402f948:	e13ffe15 	stw	r4,-8(fp)
 402f94c:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 402f950:	e0bfff17 	ldw	r2,-4(fp)
 402f954:	10800017 	ldw	r2,0(r2)
 402f958:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 402f95c:	e13ffe17 	ldw	r4,-8(fp)
 402f960:	40274a40 	call	40274a4 <strlen>
 402f964:	10800044 	addi	r2,r2,1
 402f968:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 402f96c:	00000d06 	br	402f9a4 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 402f970:	e0bffc17 	ldw	r2,-16(fp)
 402f974:	10800217 	ldw	r2,8(r2)
 402f978:	e0fffd17 	ldw	r3,-12(fp)
 402f97c:	180d883a 	mov	r6,r3
 402f980:	e17ffe17 	ldw	r5,-8(fp)
 402f984:	1009883a 	mov	r4,r2
 402f988:	402fc7c0 	call	402fc7c <memcmp>
 402f98c:	1000021e 	bne	r2,zero,402f998 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 402f990:	e0bffc17 	ldw	r2,-16(fp)
 402f994:	00000706 	br	402f9b4 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 402f998:	e0bffc17 	ldw	r2,-16(fp)
 402f99c:	10800017 	ldw	r2,0(r2)
 402f9a0:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 402f9a4:	e0fffc17 	ldw	r3,-16(fp)
 402f9a8:	e0bfff17 	ldw	r2,-4(fp)
 402f9ac:	18bff01e 	bne	r3,r2,402f970 <__flash_rwdata_start+0xfffff65c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 402f9b0:	0005883a 	mov	r2,zero
}
 402f9b4:	e037883a 	mov	sp,fp
 402f9b8:	dfc00117 	ldw	ra,4(sp)
 402f9bc:	df000017 	ldw	fp,0(sp)
 402f9c0:	dec00204 	addi	sp,sp,8
 402f9c4:	f800283a 	ret

0402f9c8 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 402f9c8:	defffb04 	addi	sp,sp,-20
 402f9cc:	dfc00415 	stw	ra,16(sp)
 402f9d0:	df000315 	stw	fp,12(sp)
 402f9d4:	df000304 	addi	fp,sp,12
 402f9d8:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 402f9dc:	d0a00617 	ldw	r2,-32744(gp)
 402f9e0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 402f9e4:	00003106 	br	402faac <alt_find_file+0xe4>
  {
    len = strlen(next->name);
 402f9e8:	e0bffd17 	ldw	r2,-12(fp)
 402f9ec:	10800217 	ldw	r2,8(r2)
 402f9f0:	1009883a 	mov	r4,r2
 402f9f4:	40274a40 	call	40274a4 <strlen>
 402f9f8:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 402f9fc:	e0bffd17 	ldw	r2,-12(fp)
 402fa00:	10c00217 	ldw	r3,8(r2)
 402fa04:	e0bffe17 	ldw	r2,-8(fp)
 402fa08:	10bfffc4 	addi	r2,r2,-1
 402fa0c:	1885883a 	add	r2,r3,r2
 402fa10:	10800003 	ldbu	r2,0(r2)
 402fa14:	10803fcc 	andi	r2,r2,255
 402fa18:	1080201c 	xori	r2,r2,128
 402fa1c:	10bfe004 	addi	r2,r2,-128
 402fa20:	10800bd8 	cmpnei	r2,r2,47
 402fa24:	1000031e 	bne	r2,zero,402fa34 <alt_find_file+0x6c>
    {
      len -= 1;
 402fa28:	e0bffe17 	ldw	r2,-8(fp)
 402fa2c:	10bfffc4 	addi	r2,r2,-1
 402fa30:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 402fa34:	e0bffe17 	ldw	r2,-8(fp)
 402fa38:	e0ffff17 	ldw	r3,-4(fp)
 402fa3c:	1885883a 	add	r2,r3,r2
 402fa40:	10800003 	ldbu	r2,0(r2)
 402fa44:	10803fcc 	andi	r2,r2,255
 402fa48:	1080201c 	xori	r2,r2,128
 402fa4c:	10bfe004 	addi	r2,r2,-128
 402fa50:	10800be0 	cmpeqi	r2,r2,47
 402fa54:	1000081e 	bne	r2,zero,402fa78 <alt_find_file+0xb0>
 402fa58:	e0bffe17 	ldw	r2,-8(fp)
 402fa5c:	e0ffff17 	ldw	r3,-4(fp)
 402fa60:	1885883a 	add	r2,r3,r2
 402fa64:	10800003 	ldbu	r2,0(r2)
 402fa68:	10803fcc 	andi	r2,r2,255
 402fa6c:	1080201c 	xori	r2,r2,128
 402fa70:	10bfe004 	addi	r2,r2,-128
 402fa74:	10000a1e 	bne	r2,zero,402faa0 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
 402fa78:	e0bffd17 	ldw	r2,-12(fp)
 402fa7c:	10800217 	ldw	r2,8(r2)
 402fa80:	e0fffe17 	ldw	r3,-8(fp)
 402fa84:	180d883a 	mov	r6,r3
 402fa88:	e17fff17 	ldw	r5,-4(fp)
 402fa8c:	1009883a 	mov	r4,r2
 402fa90:	402fc7c0 	call	402fc7c <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 402fa94:	1000021e 	bne	r2,zero,402faa0 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 402fa98:	e0bffd17 	ldw	r2,-12(fp)
 402fa9c:	00000706 	br	402fabc <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
 402faa0:	e0bffd17 	ldw	r2,-12(fp)
 402faa4:	10800017 	ldw	r2,0(r2)
 402faa8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 402faac:	e0fffd17 	ldw	r3,-12(fp)
 402fab0:	d0a00604 	addi	r2,gp,-32744
 402fab4:	18bfcc1e 	bne	r3,r2,402f9e8 <__flash_rwdata_start+0xfffff6d4>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 402fab8:	0005883a 	mov	r2,zero
}
 402fabc:	e037883a 	mov	sp,fp
 402fac0:	dfc00117 	ldw	ra,4(sp)
 402fac4:	df000017 	ldw	fp,0(sp)
 402fac8:	dec00204 	addi	sp,sp,8
 402facc:	f800283a 	ret

0402fad0 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 402fad0:	defffa04 	addi	sp,sp,-24
 402fad4:	dfc00515 	stw	ra,20(sp)
 402fad8:	df000415 	stw	fp,16(sp)
 402fadc:	dc000315 	stw	r16,12(sp)
 402fae0:	df000404 	addi	fp,sp,16
 402fae4:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
 402fae8:	00bffa04 	movi	r2,-24
 402faec:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 402faf0:	e03ffc15 	stw	zero,-16(fp)
 402faf4:	00001d06 	br	402fb6c <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
 402faf8:	04000034 	movhi	r16,0
 402fafc:	84030704 	addi	r16,r16,3100
 402fb00:	e0bffc17 	ldw	r2,-16(fp)
 402fb04:	01400304 	movi	r5,12
 402fb08:	1009883a 	mov	r4,r2
 402fb0c:	40208380 	call	4020838 <__mulsi3>
 402fb10:	8085883a 	add	r2,r16,r2
 402fb14:	10800017 	ldw	r2,0(r2)
 402fb18:	1000111e 	bne	r2,zero,402fb60 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
 402fb1c:	04000034 	movhi	r16,0
 402fb20:	84030704 	addi	r16,r16,3100
 402fb24:	e0bffc17 	ldw	r2,-16(fp)
 402fb28:	01400304 	movi	r5,12
 402fb2c:	1009883a 	mov	r4,r2
 402fb30:	40208380 	call	4020838 <__mulsi3>
 402fb34:	8085883a 	add	r2,r16,r2
 402fb38:	e0fffe17 	ldw	r3,-8(fp)
 402fb3c:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 402fb40:	d0e00a17 	ldw	r3,-32728(gp)
 402fb44:	e0bffc17 	ldw	r2,-16(fp)
 402fb48:	1880020e 	bge	r3,r2,402fb54 <alt_get_fd+0x84>
      {
        alt_max_fd = i;
 402fb4c:	e0bffc17 	ldw	r2,-16(fp)
 402fb50:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
 402fb54:	e0bffc17 	ldw	r2,-16(fp)
 402fb58:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
 402fb5c:	00000606 	br	402fb78 <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 402fb60:	e0bffc17 	ldw	r2,-16(fp)
 402fb64:	10800044 	addi	r2,r2,1
 402fb68:	e0bffc15 	stw	r2,-16(fp)
 402fb6c:	e0bffc17 	ldw	r2,-16(fp)
 402fb70:	10800810 	cmplti	r2,r2,32
 402fb74:	103fe01e 	bne	r2,zero,402faf8 <__flash_rwdata_start+0xfffff7e4>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 402fb78:	e0bffd17 	ldw	r2,-12(fp)
}
 402fb7c:	e6ffff04 	addi	sp,fp,-4
 402fb80:	dfc00217 	ldw	ra,8(sp)
 402fb84:	df000117 	ldw	fp,4(sp)
 402fb88:	dc000017 	ldw	r16,0(sp)
 402fb8c:	dec00304 	addi	sp,sp,12
 402fb90:	f800283a 	ret

0402fb94 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
 402fb94:	defffe04 	addi	sp,sp,-8
 402fb98:	df000115 	stw	fp,4(sp)
 402fb9c:	df000104 	addi	fp,sp,4
 402fba0:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
 402fba4:	e0bfff17 	ldw	r2,-4(fp)
 402fba8:	10bffe84 	addi	r2,r2,-6
 402fbac:	10c00428 	cmpgeui	r3,r2,16
 402fbb0:	18001a1e 	bne	r3,zero,402fc1c <alt_exception_cause_generated_bad_addr+0x88>
 402fbb4:	100690ba 	slli	r3,r2,2
 402fbb8:	008100f4 	movhi	r2,1027
 402fbbc:	10bef304 	addi	r2,r2,-1076
 402fbc0:	1885883a 	add	r2,r3,r2
 402fbc4:	10800017 	ldw	r2,0(r2)
 402fbc8:	1000683a 	jmp	r2
 402fbcc:	0402fc0c 	andi	r16,zero,3056
 402fbd0:	0402fc0c 	andi	r16,zero,3056
 402fbd4:	0402fc1c 	xori	r16,zero,3056
 402fbd8:	0402fc1c 	xori	r16,zero,3056
 402fbdc:	0402fc1c 	xori	r16,zero,3056
 402fbe0:	0402fc0c 	andi	r16,zero,3056
 402fbe4:	0402fc14 	movui	r16,3056
 402fbe8:	0402fc1c 	xori	r16,zero,3056
 402fbec:	0402fc0c 	andi	r16,zero,3056
 402fbf0:	0402fc0c 	andi	r16,zero,3056
 402fbf4:	0402fc1c 	xori	r16,zero,3056
 402fbf8:	0402fc0c 	andi	r16,zero,3056
 402fbfc:	0402fc14 	movui	r16,3056
 402fc00:	0402fc1c 	xori	r16,zero,3056
 402fc04:	0402fc1c 	xori	r16,zero,3056
 402fc08:	0402fc0c 	andi	r16,zero,3056
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
 402fc0c:	00800044 	movi	r2,1
 402fc10:	00000306 	br	402fc20 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
 402fc14:	0005883a 	mov	r2,zero
 402fc18:	00000106 	br	402fc20 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
 402fc1c:	0005883a 	mov	r2,zero
  }
}
 402fc20:	e037883a 	mov	sp,fp
 402fc24:	df000017 	ldw	fp,0(sp)
 402fc28:	dec00104 	addi	sp,sp,4
 402fc2c:	f800283a 	ret

0402fc30 <atexit>:
 402fc30:	200b883a 	mov	r5,r4
 402fc34:	000f883a 	mov	r7,zero
 402fc38:	000d883a 	mov	r6,zero
 402fc3c:	0009883a 	mov	r4,zero
 402fc40:	402fcf81 	jmpi	402fcf8 <__register_exitproc>

0402fc44 <exit>:
 402fc44:	defffe04 	addi	sp,sp,-8
 402fc48:	000b883a 	mov	r5,zero
 402fc4c:	dc000015 	stw	r16,0(sp)
 402fc50:	dfc00115 	stw	ra,4(sp)
 402fc54:	2021883a 	mov	r16,r4
 402fc58:	402fe100 	call	402fe10 <__call_exitprocs>
 402fc5c:	00800034 	movhi	r2,0
 402fc60:	10878a04 	addi	r2,r2,7720
 402fc64:	11000017 	ldw	r4,0(r2)
 402fc68:	20800f17 	ldw	r2,60(r4)
 402fc6c:	10000126 	beq	r2,zero,402fc74 <exit+0x30>
 402fc70:	103ee83a 	callr	r2
 402fc74:	8009883a 	mov	r4,r16
 402fc78:	402ff900 	call	402ff90 <_exit>

0402fc7c <memcmp>:
 402fc7c:	01c000c4 	movi	r7,3
 402fc80:	3980192e 	bgeu	r7,r6,402fce8 <memcmp+0x6c>
 402fc84:	2144b03a 	or	r2,r4,r5
 402fc88:	11c4703a 	and	r2,r2,r7
 402fc8c:	10000f26 	beq	r2,zero,402fccc <memcmp+0x50>
 402fc90:	20800003 	ldbu	r2,0(r4)
 402fc94:	28c00003 	ldbu	r3,0(r5)
 402fc98:	10c0151e 	bne	r2,r3,402fcf0 <memcmp+0x74>
 402fc9c:	31bfff84 	addi	r6,r6,-2
 402fca0:	01ffffc4 	movi	r7,-1
 402fca4:	00000406 	br	402fcb8 <memcmp+0x3c>
 402fca8:	20800003 	ldbu	r2,0(r4)
 402fcac:	28c00003 	ldbu	r3,0(r5)
 402fcb0:	31bfffc4 	addi	r6,r6,-1
 402fcb4:	10c00e1e 	bne	r2,r3,402fcf0 <memcmp+0x74>
 402fcb8:	21000044 	addi	r4,r4,1
 402fcbc:	29400044 	addi	r5,r5,1
 402fcc0:	31fff91e 	bne	r6,r7,402fca8 <__flash_rwdata_start+0xfffff994>
 402fcc4:	0005883a 	mov	r2,zero
 402fcc8:	f800283a 	ret
 402fccc:	20c00017 	ldw	r3,0(r4)
 402fcd0:	28800017 	ldw	r2,0(r5)
 402fcd4:	18bfee1e 	bne	r3,r2,402fc90 <__flash_rwdata_start+0xfffff97c>
 402fcd8:	31bfff04 	addi	r6,r6,-4
 402fcdc:	21000104 	addi	r4,r4,4
 402fce0:	29400104 	addi	r5,r5,4
 402fce4:	39bff936 	bltu	r7,r6,402fccc <__flash_rwdata_start+0xfffff9b8>
 402fce8:	303fe91e 	bne	r6,zero,402fc90 <__flash_rwdata_start+0xfffff97c>
 402fcec:	003ff506 	br	402fcc4 <__flash_rwdata_start+0xfffff9b0>
 402fcf0:	10c5c83a 	sub	r2,r2,r3
 402fcf4:	f800283a 	ret

0402fcf8 <__register_exitproc>:
 402fcf8:	defffa04 	addi	sp,sp,-24
 402fcfc:	dc000315 	stw	r16,12(sp)
 402fd00:	04000034 	movhi	r16,0
 402fd04:	84078a04 	addi	r16,r16,7720
 402fd08:	80c00017 	ldw	r3,0(r16)
 402fd0c:	dc400415 	stw	r17,16(sp)
 402fd10:	dfc00515 	stw	ra,20(sp)
 402fd14:	18805217 	ldw	r2,328(r3)
 402fd18:	2023883a 	mov	r17,r4
 402fd1c:	10003726 	beq	r2,zero,402fdfc <__register_exitproc+0x104>
 402fd20:	10c00117 	ldw	r3,4(r2)
 402fd24:	010007c4 	movi	r4,31
 402fd28:	20c00e16 	blt	r4,r3,402fd64 <__register_exitproc+0x6c>
 402fd2c:	1a000044 	addi	r8,r3,1
 402fd30:	8800221e 	bne	r17,zero,402fdbc <__register_exitproc+0xc4>
 402fd34:	18c00084 	addi	r3,r3,2
 402fd38:	18c7883a 	add	r3,r3,r3
 402fd3c:	18c7883a 	add	r3,r3,r3
 402fd40:	12000115 	stw	r8,4(r2)
 402fd44:	10c7883a 	add	r3,r2,r3
 402fd48:	19400015 	stw	r5,0(r3)
 402fd4c:	0005883a 	mov	r2,zero
 402fd50:	dfc00517 	ldw	ra,20(sp)
 402fd54:	dc400417 	ldw	r17,16(sp)
 402fd58:	dc000317 	ldw	r16,12(sp)
 402fd5c:	dec00604 	addi	sp,sp,24
 402fd60:	f800283a 	ret
 402fd64:	00800034 	movhi	r2,0
 402fd68:	10800004 	addi	r2,r2,0
 402fd6c:	10002626 	beq	r2,zero,402fe08 <__register_exitproc+0x110>
 402fd70:	01006404 	movi	r4,400
 402fd74:	d9400015 	stw	r5,0(sp)
 402fd78:	d9800115 	stw	r6,4(sp)
 402fd7c:	d9c00215 	stw	r7,8(sp)
 402fd80:	00000000 	call	0 <__alt_mem_sdram>
 402fd84:	d9400017 	ldw	r5,0(sp)
 402fd88:	d9800117 	ldw	r6,4(sp)
 402fd8c:	d9c00217 	ldw	r7,8(sp)
 402fd90:	10001d26 	beq	r2,zero,402fe08 <__register_exitproc+0x110>
 402fd94:	81000017 	ldw	r4,0(r16)
 402fd98:	10000115 	stw	zero,4(r2)
 402fd9c:	02000044 	movi	r8,1
 402fda0:	22405217 	ldw	r9,328(r4)
 402fda4:	0007883a 	mov	r3,zero
 402fda8:	12400015 	stw	r9,0(r2)
 402fdac:	20805215 	stw	r2,328(r4)
 402fdb0:	10006215 	stw	zero,392(r2)
 402fdb4:	10006315 	stw	zero,396(r2)
 402fdb8:	883fde26 	beq	r17,zero,402fd34 <__flash_rwdata_start+0xfffffa20>
 402fdbc:	18c9883a 	add	r4,r3,r3
 402fdc0:	2109883a 	add	r4,r4,r4
 402fdc4:	1109883a 	add	r4,r2,r4
 402fdc8:	21802215 	stw	r6,136(r4)
 402fdcc:	01800044 	movi	r6,1
 402fdd0:	12406217 	ldw	r9,392(r2)
 402fdd4:	30cc983a 	sll	r6,r6,r3
 402fdd8:	4992b03a 	or	r9,r9,r6
 402fddc:	12406215 	stw	r9,392(r2)
 402fde0:	21c04215 	stw	r7,264(r4)
 402fde4:	01000084 	movi	r4,2
 402fde8:	893fd21e 	bne	r17,r4,402fd34 <__flash_rwdata_start+0xfffffa20>
 402fdec:	11006317 	ldw	r4,396(r2)
 402fdf0:	218cb03a 	or	r6,r4,r6
 402fdf4:	11806315 	stw	r6,396(r2)
 402fdf8:	003fce06 	br	402fd34 <__flash_rwdata_start+0xfffffa20>
 402fdfc:	18805304 	addi	r2,r3,332
 402fe00:	18805215 	stw	r2,328(r3)
 402fe04:	003fc606 	br	402fd20 <__flash_rwdata_start+0xfffffa0c>
 402fe08:	00bfffc4 	movi	r2,-1
 402fe0c:	003fd006 	br	402fd50 <__flash_rwdata_start+0xfffffa3c>

0402fe10 <__call_exitprocs>:
 402fe10:	defff504 	addi	sp,sp,-44
 402fe14:	df000915 	stw	fp,36(sp)
 402fe18:	dd400615 	stw	r21,24(sp)
 402fe1c:	dc800315 	stw	r18,12(sp)
 402fe20:	dfc00a15 	stw	ra,40(sp)
 402fe24:	ddc00815 	stw	r23,32(sp)
 402fe28:	dd800715 	stw	r22,28(sp)
 402fe2c:	dd000515 	stw	r20,20(sp)
 402fe30:	dcc00415 	stw	r19,16(sp)
 402fe34:	dc400215 	stw	r17,8(sp)
 402fe38:	dc000115 	stw	r16,4(sp)
 402fe3c:	d9000015 	stw	r4,0(sp)
 402fe40:	2839883a 	mov	fp,r5
 402fe44:	04800044 	movi	r18,1
 402fe48:	057fffc4 	movi	r21,-1
 402fe4c:	00800034 	movhi	r2,0
 402fe50:	10878a04 	addi	r2,r2,7720
 402fe54:	12000017 	ldw	r8,0(r2)
 402fe58:	45005217 	ldw	r20,328(r8)
 402fe5c:	44c05204 	addi	r19,r8,328
 402fe60:	a0001c26 	beq	r20,zero,402fed4 <__call_exitprocs+0xc4>
 402fe64:	a0800117 	ldw	r2,4(r20)
 402fe68:	15ffffc4 	addi	r23,r2,-1
 402fe6c:	b8000d16 	blt	r23,zero,402fea4 <__call_exitprocs+0x94>
 402fe70:	14000044 	addi	r16,r2,1
 402fe74:	8421883a 	add	r16,r16,r16
 402fe78:	8421883a 	add	r16,r16,r16
 402fe7c:	84402004 	addi	r17,r16,128
 402fe80:	a463883a 	add	r17,r20,r17
 402fe84:	a421883a 	add	r16,r20,r16
 402fe88:	e0001e26 	beq	fp,zero,402ff04 <__call_exitprocs+0xf4>
 402fe8c:	80804017 	ldw	r2,256(r16)
 402fe90:	e0801c26 	beq	fp,r2,402ff04 <__call_exitprocs+0xf4>
 402fe94:	bdffffc4 	addi	r23,r23,-1
 402fe98:	843fff04 	addi	r16,r16,-4
 402fe9c:	8c7fff04 	addi	r17,r17,-4
 402fea0:	bd7ff91e 	bne	r23,r21,402fe88 <__flash_rwdata_start+0xfffffb74>
 402fea4:	00800034 	movhi	r2,0
 402fea8:	10800004 	addi	r2,r2,0
 402feac:	10000926 	beq	r2,zero,402fed4 <__call_exitprocs+0xc4>
 402feb0:	a0800117 	ldw	r2,4(r20)
 402feb4:	1000301e 	bne	r2,zero,402ff78 <__call_exitprocs+0x168>
 402feb8:	a0800017 	ldw	r2,0(r20)
 402febc:	10003226 	beq	r2,zero,402ff88 <__call_exitprocs+0x178>
 402fec0:	a009883a 	mov	r4,r20
 402fec4:	98800015 	stw	r2,0(r19)
 402fec8:	00000000 	call	0 <__alt_mem_sdram>
 402fecc:	9d000017 	ldw	r20,0(r19)
 402fed0:	a03fe41e 	bne	r20,zero,402fe64 <__flash_rwdata_start+0xfffffb50>
 402fed4:	dfc00a17 	ldw	ra,40(sp)
 402fed8:	df000917 	ldw	fp,36(sp)
 402fedc:	ddc00817 	ldw	r23,32(sp)
 402fee0:	dd800717 	ldw	r22,28(sp)
 402fee4:	dd400617 	ldw	r21,24(sp)
 402fee8:	dd000517 	ldw	r20,20(sp)
 402feec:	dcc00417 	ldw	r19,16(sp)
 402fef0:	dc800317 	ldw	r18,12(sp)
 402fef4:	dc400217 	ldw	r17,8(sp)
 402fef8:	dc000117 	ldw	r16,4(sp)
 402fefc:	dec00b04 	addi	sp,sp,44
 402ff00:	f800283a 	ret
 402ff04:	a0800117 	ldw	r2,4(r20)
 402ff08:	80c00017 	ldw	r3,0(r16)
 402ff0c:	10bfffc4 	addi	r2,r2,-1
 402ff10:	15c01426 	beq	r2,r23,402ff64 <__call_exitprocs+0x154>
 402ff14:	80000015 	stw	zero,0(r16)
 402ff18:	183fde26 	beq	r3,zero,402fe94 <__flash_rwdata_start+0xfffffb80>
 402ff1c:	95c8983a 	sll	r4,r18,r23
 402ff20:	a0806217 	ldw	r2,392(r20)
 402ff24:	a5800117 	ldw	r22,4(r20)
 402ff28:	2084703a 	and	r2,r4,r2
 402ff2c:	10000b26 	beq	r2,zero,402ff5c <__call_exitprocs+0x14c>
 402ff30:	a0806317 	ldw	r2,396(r20)
 402ff34:	2088703a 	and	r4,r4,r2
 402ff38:	20000c1e 	bne	r4,zero,402ff6c <__call_exitprocs+0x15c>
 402ff3c:	89400017 	ldw	r5,0(r17)
 402ff40:	d9000017 	ldw	r4,0(sp)
 402ff44:	183ee83a 	callr	r3
 402ff48:	a0800117 	ldw	r2,4(r20)
 402ff4c:	15bfbf1e 	bne	r2,r22,402fe4c <__flash_rwdata_start+0xfffffb38>
 402ff50:	98800017 	ldw	r2,0(r19)
 402ff54:	153fcf26 	beq	r2,r20,402fe94 <__flash_rwdata_start+0xfffffb80>
 402ff58:	003fbc06 	br	402fe4c <__flash_rwdata_start+0xfffffb38>
 402ff5c:	183ee83a 	callr	r3
 402ff60:	003ff906 	br	402ff48 <__flash_rwdata_start+0xfffffc34>
 402ff64:	a5c00115 	stw	r23,4(r20)
 402ff68:	003feb06 	br	402ff18 <__flash_rwdata_start+0xfffffc04>
 402ff6c:	89000017 	ldw	r4,0(r17)
 402ff70:	183ee83a 	callr	r3
 402ff74:	003ff406 	br	402ff48 <__flash_rwdata_start+0xfffffc34>
 402ff78:	a0800017 	ldw	r2,0(r20)
 402ff7c:	a027883a 	mov	r19,r20
 402ff80:	1029883a 	mov	r20,r2
 402ff84:	003fb606 	br	402fe60 <__flash_rwdata_start+0xfffffb4c>
 402ff88:	0005883a 	mov	r2,zero
 402ff8c:	003ffb06 	br	402ff7c <__flash_rwdata_start+0xfffffc68>

0402ff90 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 402ff90:	defffd04 	addi	sp,sp,-12
 402ff94:	df000215 	stw	fp,8(sp)
 402ff98:	df000204 	addi	fp,sp,8
 402ff9c:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 402ffa0:	0001883a 	nop
 402ffa4:	e0bfff17 	ldw	r2,-4(fp)
 402ffa8:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 402ffac:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 402ffb0:	10000226 	beq	r2,zero,402ffbc <_exit+0x2c>
    ALT_SIM_FAIL();
 402ffb4:	002af070 	cmpltui	zero,zero,43969
 402ffb8:	00000106 	br	402ffc0 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 402ffbc:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 402ffc0:	003fff06 	br	402ffc0 <__flash_rwdata_start+0xfffffcac>
